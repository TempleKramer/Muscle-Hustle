{"ast":null,"code":"import jwt from \"jsonwebtoken\";\nconst secret = \"mysecretsshhhhh\";\nconst expiration = \"2h\";\nexport default {\n  authMiddleware: function (_ref) {\n    let {\n      req\n    } = _ref;\n    // allows token to be sent via req.body, req.query, or headers\n    let token = req.body.token || req.query.token || req.headers.authorization; // [\"Bearer\", \"<tokenvalue>\"]\n\n    if (req.headers.authorization) {\n      token = token.split(\" \").pop().trim();\n    }\n\n    if (!token) {\n      return req;\n    }\n\n    try {\n      const {\n        data\n      } = jwt.verify(token, secret, {\n        maxAge: expiration\n      });\n      req.user = data;\n    } catch {\n      console.log(\"Invalid token\");\n    }\n\n    return req;\n  },\n  signToken: function (_ref2) {\n    let {\n      username,\n      email,\n      _id\n    } = _ref2;\n    const payload = {\n      username,\n      email,\n      _id\n    };\n    return jwt.sign({\n      data: payload\n    }, secret, {\n      expiresIn: expiration\n    });\n  },\n  login: function (token) {\n    window.localStorage.setItem('token', token);\n  },\n  loggedIn: function () {\n    return window.localS;\n  }\n};","map":{"version":3,"names":["jwt","secret","expiration","authMiddleware","req","token","body","query","headers","authorization","split","pop","trim","data","verify","maxAge","user","console","log","signToken","username","email","_id","payload","sign","expiresIn","login","window","localStorage","setItem","loggedIn","localS"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/fitness-app/client/src/utils/auth.js"],"sourcesContent":["import jwt from \"jsonwebtoken\";\n\nconst secret = \"mysecretsshhhhh\";\nconst expiration = \"2h\";\n\nexport default {\n  authMiddleware: function ({ req }) {\n    // allows token to be sent via req.body, req.query, or headers\n    let token = req.body.token || req.query.token || req.headers.authorization;\n\n    // [\"Bearer\", \"<tokenvalue>\"]\n    if (req.headers.authorization) {\n      token = token.split(\" \").pop().trim();\n    }\n\n    if (!token) {\n      return req;\n    }\n\n    try {\n      const { data } = jwt.verify(token, secret, { maxAge: expiration });\n      req.user = data;\n    } catch {\n      console.log(\"Invalid token\");\n    }\n\n    return req;\n  },\n  signToken: function ({ username, email, _id }) {\n    const payload = { username, email, _id };\n\n    return jwt.sign({ data: payload }, secret, { expiresIn: expiration });\n  },\n  login: function(token) {\n    window.localStorage.setItem('token', token)\n  },\n  loggedIn: function () {\n    return window.localS;\n  },\n};\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AAEA,MAAMC,MAAM,GAAG,iBAAf;AACA,MAAMC,UAAU,GAAG,IAAnB;AAEA,eAAe;EACbC,cAAc,EAAE,gBAAmB;IAAA,IAAT;MAAEC;IAAF,CAAS;IACjC;IACA,IAAIC,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASD,KAAT,IAAkBD,GAAG,CAACG,KAAJ,CAAUF,KAA5B,IAAqCD,GAAG,CAACI,OAAJ,CAAYC,aAA7D,CAFiC,CAIjC;;IACA,IAAIL,GAAG,CAACI,OAAJ,CAAYC,aAAhB,EAA+B;MAC7BJ,KAAK,GAAGA,KAAK,CAACK,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,GAAuBC,IAAvB,EAAR;IACD;;IAED,IAAI,CAACP,KAAL,EAAY;MACV,OAAOD,GAAP;IACD;;IAED,IAAI;MACF,MAAM;QAAES;MAAF,IAAWb,GAAG,CAACc,MAAJ,CAAWT,KAAX,EAAkBJ,MAAlB,EAA0B;QAAEc,MAAM,EAAEb;MAAV,CAA1B,CAAjB;MACAE,GAAG,CAACY,IAAJ,GAAWH,IAAX;IACD,CAHD,CAGE,MAAM;MACNI,OAAO,CAACC,GAAR,CAAY,eAAZ;IACD;;IAED,OAAOd,GAAP;EACD,CAtBY;EAuBbe,SAAS,EAAE,iBAAoC;IAAA,IAA1B;MAAEC,QAAF;MAAYC,KAAZ;MAAmBC;IAAnB,CAA0B;IAC7C,MAAMC,OAAO,GAAG;MAAEH,QAAF;MAAYC,KAAZ;MAAmBC;IAAnB,CAAhB;IAEA,OAAOtB,GAAG,CAACwB,IAAJ,CAAS;MAAEX,IAAI,EAAEU;IAAR,CAAT,EAA4BtB,MAA5B,EAAoC;MAAEwB,SAAS,EAAEvB;IAAb,CAApC,CAAP;EACD,CA3BY;EA4BbwB,KAAK,EAAE,UAASrB,KAAT,EAAgB;IACrBsB,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCxB,KAArC;EACD,CA9BY;EA+BbyB,QAAQ,EAAE,YAAY;IACpB,OAAOH,MAAM,CAACI,MAAd;EACD;AAjCY,CAAf"},"metadata":{},"sourceType":"module"}