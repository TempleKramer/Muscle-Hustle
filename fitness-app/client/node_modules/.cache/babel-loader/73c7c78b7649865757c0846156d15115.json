{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarma\\\\school\\\\challenges\\\\Project3_Final\\\\fitness-app\\\\client\\\\src\\\\components\\\\signup.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n  const router = useHistory(); // set initial form state\n\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }); // set state for form validation\n\n  const [validated] = useState(false); // set state for alert\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [addUser, {\n    error\n  }] = useMutation(ADD_USER);\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserFormData({ ...userFormData,\n      [name]: value\n    });\n  };\n\n  console.log();\n\n  const handleFormSubmit = async event => {\n    event.preventDefault(); // check if form has everything (as per react-bootstrap docs)\n\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const {\n        data\n      } = await addUser({\n        variables: { ...userFormData\n        }\n      });\n      console.log(data);\n      Auth.login(data.addUser.token);\n      debugger;\n      router.push('/');\n    } catch (err) {\n      console.error(err);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    dismissible: true,\n    onClose: () => setShowAlert(false),\n    show: showAlert,\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Something went wrong with your signup!\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Your username\",\n    name: \"username\",\n    onChange: handleInputChange,\n    value: userFormData.username,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Username is required!\")), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Your email address\",\n    name: \"email\",\n    onChange: handleInputChange,\n    value: userFormData.email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Email is required!\")), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Your password\",\n    name: \"password\",\n    onChange: handleInputChange,\n    value: userFormData.password,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Password is required!\")), /*#__PURE__*/React.createElement(Button, {\n    disabled: !(userFormData.username && userFormData.email && userFormData.password),\n    type: \"submit\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nexport default SignupForm;","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Alert","useHistory","useMutation","ADD_USER","Auth","SignupForm","router","userFormData","setUserFormData","username","email","password","validated","showAlert","setShowAlert","addUser","error","handleInputChange","event","name","value","target","console","log","handleFormSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","data","variables","login","token","push","err"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/fitness-app/client/src/components/signup.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n  const router = useHistory();\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n  console.log()\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n      console.log(data);\n      Auth.login(data.addUser.token);\n      debugger\n      router.push('/')\n    } catch (err) {\n      console.error(err);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}