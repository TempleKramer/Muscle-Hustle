{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarma\\\\school\\\\challenges\\\\Project3_Final\\\\fitness-app\\\\client\\\\src\\\\App.js\";\n// import logo from './logo.svg';\n// import './App.css';\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; // import {\n//   ApolloClient,\n//   InMemoryCache,\n//   ApolloProvider,\n//   createHttpLink,\n// } from '@apollo/client';\n// import { setContext } from '@apollo/client/link/context';\n// import SearchBooks from './pages/SearchBooks';\n// import SavedBooks from './pages/SavedBooks';\n\nimport Navbar from './components/Navbar'; // Construct our main GraphQL API endpoint\n// const httpLink = createHttpLink({\n//   uri: '/graphql',\n// });\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\n\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token'); // return the headers to the context so httpLink can read them\n\n  return {\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Switch","Route","Navbar","authLink","setContext","_","headers","token","localStorage","getItem","authorization","client","ApolloClient","link","concat","httpLink","cache","InMemoryCache","App"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/fitness-app/client/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n// import {\n//   ApolloClient,\n//   InMemoryCache,\n//   ApolloProvider,\n//   createHttpLink,\n// } from '@apollo/client';\n// import { setContext } from '@apollo/client/link/context';\n\n// import SearchBooks from './pages/SearchBooks';\n// import SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\n\n// Construct our main GraphQL API endpoint\n// const httpLink = createHttpLink({\n//   uri: '/graphql',\n// });\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Switch>\n             {/* <Route exact path=\"/\" component={SearchBooks} />\n            <Route exact path=\"/saved\" component={SavedBooks} />\n            <Route render={() => <h1 className=\"display-2\">Wrong page!</h1>} />  */}\n          </Switch>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;"],"mappings":";AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,QAAQ,GAAGC,UAAU,CAAC,CAACC,CAAD,WAAoB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC9C;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd,CAF8C,CAG9C;;EACA,OAAO;IACLH,OAAO,EAAE,EACP,GAAGA,OADI;MAEPI,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;IAFpC;EADJ,CAAP;AAMD,CAV0B,CAA3B;AAYA,MAAMI,MAAM,GAAG,IAAIC,YAAJ,CAAiB;EAC9B;EACAC,IAAI,EAAEV,QAAQ,CAACW,MAAT,CAAgBC,QAAhB,CAFwB;EAG9BC,KAAK,EAAE,IAAIC,aAAJ;AAHuB,CAAjB,CAAf;;AAMA,SAASC,GAAT,GAAe;EACb,oBACE,oBAAC,cAAD;IAAgB,MAAM,EAAEP,MAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,uDACE,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CADF,CADF,CADF;AAcD;;AAED,eAAeO,GAAf"},"metadata":{},"sourceType":"module"}