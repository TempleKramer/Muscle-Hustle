{"version":3,"sources":["utils/queries.js","components/saved.js","components/search.js","utils/mutations.js","utils/auth.js","components/workoutform.js","components/homepage/homepage.js","components/signup.js","components/login.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["GET_WORKOUTS","gql","Saved","useQuery","loading","error","data","console","log","workouts","map","workout","key","_id","name","numberofreps","date","Search","LOGIN_USER","ADD_USER","ADD_WORKOUT","authMiddleware","req","token","body","query","headers","authorization","split","pop","trim","jwt","verify","maxAge","user","signToken","payload","username","email","sign","expiresIn","login","window","localStorage","setItem","loggedIn","getItem","logout","location","WorkoutForm","useMutation","addWorkout","event","preventDefault","stopPropagation","form","target","formData","FormData","params","get","parseInt","variables","reset","Auth","onSubmit","type","placeholder","required","min","step","Homepage","className","SignupForm","props","router","useHistory","useState","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","addUser","useEffect","handleInputChange","value","handleFormSubmit","currentTarget","checkValidity","push","handleModalClose","Form","noValidate","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","onChange","Feedback","Button","disabled","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Container","fluid","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","onClick","Modal","size","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Title","Item","eventKey","Body","Content","Pane","httpLink","createHttpLink","uri","authLink","setContext","_","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.46d85b6d.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const GET_WORKOUTS = gql`\r\n  query GetWorkouts {\r\n    workouts {\r\n        _id\r\n        name\r\n        numberofreps\r\n        date\r\n        \r\n    }\r\n  }\r\n`;\r\nexport const GET_WORKOUTSBYNAME= gql`\r\n  query Workouts($name: String!) {\r\n    workouts(name: $name) {\r\n      _id\r\n      name\r\n      numberofreps\r\n      date\r\n      \r\n    }\r\n  }\r\n`;\r\nexport const GET_WORKOUTSBYID= gql`\r\n  query Workouts($id: String!) {\r\n    workouts(id: $id) {\r\n      _id\r\n      name\r\n      numberofreps\r\n      date\r\n      \r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_WORKOUTS } from '../utils/queries';\r\nconst Saved = ()=>{\r\nconst{loading,error, data}=useQuery(GET_WORKOUTS)\r\nconsole.log(loading,error,data)\r\n    return (<div>Saved Workouts\r\n        <div>\r\n            {data?.workouts.map(workout=>{\r\n                return(<div key={workout._id}>\r\n                    <p>{workout.name}</p>\r\n                    <p>{workout.numberofreps}</p>\r\n                    <p>{workout.date}</p>\r\n                </div>)\r\n            })}\r\n        </div>\r\n    </div>)\r\n}\r\nexport default Saved;","import React from 'react';\r\nconst Search = ()=>{\r\n    return (<div>Search Workouts</div>)\r\n}\r\nexport default Search;","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_WORKOUT = gql`\nmutation addWorkout($name: String!, $numberofreps: Int!, $date: String! ) {\n\n  addWorkout(name: $name, numberofreps: $numberofreps, date: $date) {\n    name\n    numberofreps\n    date\n    \n  }\n}\n`;\n","import jwt from \"jsonwebtoken\";\n\nconst secret = \"mysecretsshhhhh\";\nconst expiration = \"2h\";\n\nexport default {\n  authMiddleware: function ({ req }) {\n    // allows token to be sent via req.body, req.query, or headers\n    let token = req.body.token || req.query.token || req.headers.authorization;\n\n    // [\"Bearer\", \"<tokenvalue>\"]\n    if (req.headers.authorization) {\n      token = token.split(\" \").pop().trim();\n    }\n\n    if (!token) {\n      return req;\n    }\n\n    try {\n      const { data } = jwt.verify(token, secret, { maxAge: expiration });\n      req.user = data;\n    } catch {\n      console.log(\"Invalid token\");\n    }\n\n    return req;\n  },\n  signToken: function ({ username, email, _id }) {\n    const payload = { username, email, _id };\n\n    return jwt.sign({ data: payload }, secret, { expiresIn: expiration });\n  },\n  login: function(token) {\n    window.localStorage.setItem('token', token)\n  },\n  loggedIn: function () {\n    return !!window.localStorage.getItem('token');\n\n  },\n  logout: function() {\n    window.localStorage.setItem('token', \"\")\n    window.location = '/'\n  }\n};\n\n","import React from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_WORKOUT } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\nconst WorkoutForm = () => {\r\n  const [addWorkout, { error }] = useMutation(ADD_WORKOUT);\r\n  const loggedIn = Auth.loggedIn();\r\n  async function onSubmit(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const form = event.target\r\n    const formData = new FormData(form);\r\n    const params = {\r\n      name: formData.get(\"name\"),\r\n      numberofreps: parseInt(formData.get(\"numberofreps\")),\r\n      date: formData.get(\"date\"),\r\n    };\r\n    try {\r\n      const { data } = await addWorkout({ variables: params });\r\n      console.log(data);\r\n      \r\n      form.reset();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  return (\r\n    loggedIn && (\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <label>Name of Exercise:</label>\r\n          <input name=\"name\" type=\"text\" placeholder=\"Exercise Name\" required />\r\n        </div>\r\n        <div>\r\n          <label>Number of Reps:</label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Number of Reps\"\r\n            required\r\n            min={0}\r\n            step={1}\r\n            name=\"numberofreps\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Workout Date:</label>\r\n          <input type=\"date\" required name=\"date\" />\r\n        </div>\r\n        <button>Save</button>\r\n      </form>\r\n    )\r\n  );\r\n};\r\nexport default WorkoutForm;\r\n","import React from \"react\";\nimport WorkoutForm from \"../workoutform\";\nconst Homepage = () => {\n  return (\n    <div className=\"my-component\" >\n      <h4>Welcome to your Homepage</h4>\n      <div className=\"hero\"></div>\n      <br></br>\n      <WorkoutForm />\n    </div>\n  );\n};\nexport default Homepage;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = (props) => {\n  const router = useHistory();\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n      console.log(data);\n      Auth.login(data.addUser.token);\n      router.push('/')\n      props.handleModalClose()\n    } catch (err) {\n      console.error(err);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst LoginForm = (props) => {\n  const router = useHistory();\n\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n\n      console.log(data);\n      Auth.login(data.login.token);\n      router.push('/')\n      props.handleModalClose()\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setUserFormData({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavLink, Bars, NavMenu, NavBtn, NavBtnLink, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './signup';\nimport LoginForm from './login';\n\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Muscle Hustle\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/search'>\n                Search For Workouts\n              </Nav.Link>\n              {/* if user is logged in show saved workouts and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Workouts\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;","\n// export default App;\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Saved from './components/saved';\nimport Search from './components/search';\n\nimport Homepage from './components/homepage/homepage.js';\nimport Navbar from './components/Navbar';\n\n//Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n//Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Switch>\n             <Route exact path=\"/\" component={Homepage} />\n             <Route exact path=\"/saved\" component={Saved} />\n             <Route exact path=\"/search\" component={Search} />\n\n            <Route render={() => <h1 className=\"display-2\">Wrong page!</h1>} /> \n          </Switch>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\nReactDOM.render(<App/>,document.getElementById(\"root\"),)\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}