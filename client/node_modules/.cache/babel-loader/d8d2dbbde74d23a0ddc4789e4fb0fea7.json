{"ast":null,"code":"import{GraphQLError}from\"../../error/GraphQLError.mjs\";/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */export function UniqueOperationTypesRule(context){var schema=context.getSchema();var definedOperationTypes=Object.create(null);var existingOperationTypes=schema?{query:schema.getQueryType(),mutation:schema.getMutationType(),subscription:schema.getSubscriptionType()}:{};return{SchemaDefinition:checkOperationTypes,SchemaExtension:checkOperationTypes};function checkOperationTypes(node){var _node$operationTypes;// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\nvar operationTypesNodes=(_node$operationTypes=node.operationTypes)!==null&&_node$operationTypes!==void 0?_node$operationTypes:[];for(var _i2=0;_i2<operationTypesNodes.length;_i2++){var operationType=operationTypesNodes[_i2];var operation=operationType.operation;var alreadyDefinedOperationType=definedOperationTypes[operation];if(existingOperationTypes[operation]){context.reportError(new GraphQLError(\"Type for \".concat(operation,\" already defined in the schema. It cannot be redefined.\"),operationType));}else if(alreadyDefinedOperationType){context.reportError(new GraphQLError(\"There can be only one \".concat(operation,\" type in schema.\"),[alreadyDefinedOperationType,operationType]));}else{definedOperationTypes[operation]=operationType;}}return false;}}","map":{"version":3,"names":["GraphQLError","UniqueOperationTypesRule","context","schema","getSchema","definedOperationTypes","Object","create","existingOperationTypes","query","getQueryType","mutation","getMutationType","subscription","getSubscriptionType","SchemaDefinition","checkOperationTypes","SchemaExtension","node","_node$operationTypes","operationTypesNodes","operationTypes","_i2","length","operationType","operation","alreadyDefinedOperationType","reportError","concat"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/validation/rules/UniqueOperationTypesRule.mjs"],"sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nexport function UniqueOperationTypesRule(context) {\n  var schema = context.getSchema();\n  var definedOperationTypes = Object.create(null);\n  var existingOperationTypes = schema ? {\n    query: schema.getQueryType(),\n    mutation: schema.getMutationType(),\n    subscription: schema.getSubscriptionType()\n  } : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')\n    var operationTypesNodes = (_node$operationTypes = node.operationTypes) !== null && _node$operationTypes !== void 0 ? _node$operationTypes : [];\n\n    for (var _i2 = 0; _i2 < operationTypesNodes.length; _i2++) {\n      var operationType = operationTypesNodes[_i2];\n      var operation = operationType.operation;\n      var alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(new GraphQLError(\"Type for \".concat(operation, \" already defined in the schema. It cannot be redefined.\"), operationType));\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(new GraphQLError(\"There can be only one \".concat(operation, \" type in schema.\"), [alreadyDefinedOperationType, operationType]));\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n"],"mappings":"AAAA,OAASA,YAAT,KAA6B,8BAA7B,CAEA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASC,yBAAT,CAAkCC,OAAlC,CAA2C,CAChD,GAAIC,OAAM,CAAGD,OAAO,CAACE,SAAR,EAAb,CACA,GAAIC,sBAAqB,CAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA5B,CACA,GAAIC,uBAAsB,CAAGL,MAAM,CAAG,CACpCM,KAAK,CAAEN,MAAM,CAACO,YAAP,EAD6B,CAEpCC,QAAQ,CAAER,MAAM,CAACS,eAAP,EAF0B,CAGpCC,YAAY,CAAEV,MAAM,CAACW,mBAAP,EAHsB,CAAH,CAI/B,EAJJ,CAKA,MAAO,CACLC,gBAAgB,CAAEC,mBADb,CAELC,eAAe,CAAED,mBAFZ,CAAP,CAKA,QAASA,oBAAT,CAA6BE,IAA7B,CAAmC,CACjC,GAAIC,qBAAJ,CAEA;AACA,GAAIC,oBAAmB,CAAG,CAACD,oBAAoB,CAAGD,IAAI,CAACG,cAA7B,IAAiD,IAAjD,EAAyDF,oBAAoB,GAAK,IAAK,EAAvF,CAA2FA,oBAA3F,CAAkH,EAA5I,CAEA,IAAK,GAAIG,IAAG,CAAG,CAAf,CAAkBA,GAAG,CAAGF,mBAAmB,CAACG,MAA5C,CAAoDD,GAAG,EAAvD,CAA2D,CACzD,GAAIE,cAAa,CAAGJ,mBAAmB,CAACE,GAAD,CAAvC,CACA,GAAIG,UAAS,CAAGD,aAAa,CAACC,SAA9B,CACA,GAAIC,4BAA2B,CAAGrB,qBAAqB,CAACoB,SAAD,CAAvD,CAEA,GAAIjB,sBAAsB,CAACiB,SAAD,CAA1B,CAAuC,CACrCvB,OAAO,CAACyB,WAAR,CAAoB,GAAI3B,aAAJ,CAAiB,YAAY4B,MAAZ,CAAmBH,SAAnB,CAA8B,yDAA9B,CAAjB,CAA2GD,aAA3G,CAApB,EACD,CAFD,IAEO,IAAIE,2BAAJ,CAAiC,CACtCxB,OAAO,CAACyB,WAAR,CAAoB,GAAI3B,aAAJ,CAAiB,yBAAyB4B,MAAzB,CAAgCH,SAAhC,CAA2C,kBAA3C,CAAjB,CAAiF,CAACC,2BAAD,CAA8BF,aAA9B,CAAjF,CAApB,EACD,CAFM,IAEA,CACLnB,qBAAqB,CAACoB,SAAD,CAArB,CAAmCD,aAAnC,CACD,CACF,CAED,MAAO,MAAP,CACD,CACF"},"metadata":{},"sourceType":"module"}