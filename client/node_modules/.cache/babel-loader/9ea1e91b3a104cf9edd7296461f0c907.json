{"ast":null,"code":"import matches from'dom-helpers/matches';import qsa from'dom-helpers/querySelectorAll';import React,{useCallback,useRef,useEffect,useMemo}from'react';import{useUncontrolledProp}from'uncontrollable';import usePrevious from'@restart/hooks/usePrevious';import useCallbackRef from'@restart/hooks/useCallbackRef';import useForceUpdate from'@restart/hooks/useForceUpdate';import useEventCallback from'@restart/hooks/useEventCallback';import DropdownContext from'./DropdownContext';import DropdownMenu from'./DropdownMenu';import DropdownToggle from'./DropdownToggle';/**\n * @displayName Dropdown\n */function Dropdown(_ref){var drop=_ref.drop,alignEnd=_ref.alignEnd,defaultShow=_ref.defaultShow,rawShow=_ref.show,rawOnToggle=_ref.onToggle,_ref$itemSelector=_ref.itemSelector,itemSelector=_ref$itemSelector===void 0?'* > *':_ref$itemSelector,focusFirstItemOnShow=_ref.focusFirstItemOnShow,children=_ref.children;var forceUpdate=useForceUpdate();var _useUncontrolledProp=useUncontrolledProp(rawShow,defaultShow,rawOnToggle),show=_useUncontrolledProp[0],onToggle=_useUncontrolledProp[1];var _useCallbackRef=useCallbackRef(),toggleElement=_useCallbackRef[0],setToggle=_useCallbackRef[1];// We use normal refs instead of useCallbackRef in order to populate the\n// the value as quickly as possible, otherwise the effect to focus the element\n// may run before the state value is set\nvar menuRef=useRef(null);var menuElement=menuRef.current;var setMenu=useCallback(function(ref){menuRef.current=ref;// ensure that a menu set triggers an update for consumers\nforceUpdate();},[forceUpdate]);var lastShow=usePrevious(show);var lastSourceEvent=useRef(null);var focusInDropdown=useRef(false);var toggle=useCallback(function(event){onToggle(!show,event);},[onToggle,show]);var context=useMemo(function(){return{toggle:toggle,drop:drop,show:show,alignEnd:alignEnd,menuElement:menuElement,toggleElement:toggleElement,setMenu:setMenu,setToggle:setToggle};},[toggle,drop,show,alignEnd,menuElement,toggleElement,setMenu,setToggle]);if(menuElement&&lastShow&&!show){focusInDropdown.current=menuElement.contains(document.activeElement);}var focusToggle=useEventCallback(function(){if(toggleElement&&toggleElement.focus){toggleElement.focus();}});var maybeFocusFirst=useEventCallback(function(){var type=lastSourceEvent.current;var focusType=focusFirstItemOnShow;if(focusType==null){focusType=menuRef.current&&matches(menuRef.current,'[role=menu]')?'keyboard':false;}if(focusType===false||focusType==='keyboard'&&!/^key.+$/.test(type)){return;}var first=qsa(menuRef.current,itemSelector)[0];if(first&&first.focus)first.focus();});useEffect(function(){if(show)maybeFocusFirst();else if(focusInDropdown.current){focusInDropdown.current=false;focusToggle();}// only `show` should be changing\n},[show,focusInDropdown,focusToggle,maybeFocusFirst]);useEffect(function(){lastSourceEvent.current=null;});var getNextFocusedChild=function getNextFocusedChild(current,offset){if(!menuRef.current)return null;var items=qsa(menuRef.current,itemSelector);var index=items.indexOf(current)+offset;index=Math.max(0,Math.min(index,items.length));return items[index];};var handleKeyDown=function handleKeyDown(event){var key=event.key;var target=event.target;// Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n// in inscrutability\nvar isInput=/input|textarea/i.test(target.tagName);if(isInput&&(key===' '||key!=='Escape'&&menuRef.current&&menuRef.current.contains(target))){return;}lastSourceEvent.current=event.type;switch(key){case'ArrowUp':{var next=getNextFocusedChild(target,-1);if(next&&next.focus)next.focus();event.preventDefault();return;}case'ArrowDown':event.preventDefault();if(!show){toggle(event);}else{var _next=getNextFocusedChild(target,1);if(_next&&_next.focus)_next.focus();}return;case'Escape':case'Tab':onToggle(false,event);break;default:}};return/*#__PURE__*/React.createElement(DropdownContext.Provider,{value:context},children({props:{onKeyDown:handleKeyDown}}));}Dropdown.displayName='ReactOverlaysDropdown';Dropdown.Menu=DropdownMenu;Dropdown.Toggle=DropdownToggle;export default Dropdown;","map":{"version":3,"names":["matches","qsa","React","useCallback","useRef","useEffect","useMemo","useUncontrolledProp","usePrevious","useCallbackRef","useForceUpdate","useEventCallback","DropdownContext","DropdownMenu","DropdownToggle","Dropdown","_ref","drop","alignEnd","defaultShow","rawShow","show","rawOnToggle","onToggle","_ref$itemSelector","itemSelector","focusFirstItemOnShow","children","forceUpdate","_useUncontrolledProp","_useCallbackRef","toggleElement","setToggle","menuRef","menuElement","current","setMenu","ref","lastShow","lastSourceEvent","focusInDropdown","toggle","event","context","contains","document","activeElement","focusToggle","focus","maybeFocusFirst","type","focusType","test","first","getNextFocusedChild","offset","items","index","indexOf","Math","max","min","length","handleKeyDown","key","target","isInput","tagName","next","preventDefault","_next","createElement","Provider","value","props","onKeyDown","displayName","Menu","Toggle"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/react-overlays/esm/Dropdown.js"],"sourcesContent":["import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```ts static\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\n\n/**\n * @displayName Dropdown\n */\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      _ref$itemSelector = _ref.itemSelector,\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n  var forceUpdate = useForceUpdate();\n\n  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle),\n      show = _useUncontrolledProp[0],\n      onToggle = _useUncontrolledProp[1];\n\n  var _useCallbackRef = useCallbackRef(),\n      toggleElement = _useCallbackRef[0],\n      setToggle = _useCallbackRef[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var menuRef = useRef(null);\n  var menuElement = menuRef.current;\n  var setMenu = useCallback(function (ref) {\n    menuRef.current = ref; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (event) {\n    onToggle(!show, event);\n  }, [onToggle, show]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var key = event.key;\n    var target = event.target; // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && menuRef.current && menuRef.current.contains(target))) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          toggle(event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Escape':\n      case 'Tab':\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children({\n    props: {\n      onKeyDown: handleKeyDown\n    }\n  }));\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;"],"mappings":"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"},"metadata":{},"sourceType":"module"}