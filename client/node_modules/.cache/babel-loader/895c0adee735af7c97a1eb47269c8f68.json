{"ast":null,"code":"var _defKindToExtKind;function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import inspect from\"../../jsutils/inspect.mjs\";import invariant from\"../../jsutils/invariant.mjs\";import didYouMean from\"../../jsutils/didYouMean.mjs\";import suggestionList from\"../../jsutils/suggestionList.mjs\";import{GraphQLError}from\"../../error/GraphQLError.mjs\";import{Kind}from\"../../language/kinds.mjs\";import{isTypeDefinitionNode}from\"../../language/predicates.mjs\";import{isScalarType,isObjectType,isInterfaceType,isUnionType,isEnumType,isInputObjectType}from\"../../type/definition.mjs\";/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */export function PossibleTypeExtensionsRule(context){var schema=context.getSchema();var definedTypes=Object.create(null);for(var _i2=0,_context$getDocument$2=context.getDocument().definitions;_i2<_context$getDocument$2.length;_i2++){var def=_context$getDocument$2[_i2];if(isTypeDefinitionNode(def)){definedTypes[def.name.value]=def;}}return{ScalarTypeExtension:checkExtension,ObjectTypeExtension:checkExtension,InterfaceTypeExtension:checkExtension,UnionTypeExtension:checkExtension,EnumTypeExtension:checkExtension,InputObjectTypeExtension:checkExtension};function checkExtension(node){var typeName=node.name.value;var defNode=definedTypes[typeName];var existingType=schema===null||schema===void 0?void 0:schema.getType(typeName);var expectedKind;if(defNode){expectedKind=defKindToExtKind[defNode.kind];}else if(existingType){expectedKind=typeToExtKind(existingType);}if(expectedKind){if(expectedKind!==node.kind){var kindStr=extensionKindToTypeName(node.kind);context.reportError(new GraphQLError(\"Cannot extend non-\".concat(kindStr,\" type \\\"\").concat(typeName,\"\\\".\"),defNode?[defNode,node]:node));}}else{var allTypeNames=Object.keys(definedTypes);if(schema){allTypeNames=allTypeNames.concat(Object.keys(schema.getTypeMap()));}var suggestedTypes=suggestionList(typeName,allTypeNames);context.reportError(new GraphQLError(\"Cannot extend type \\\"\".concat(typeName,\"\\\" because it is not defined.\")+didYouMean(suggestedTypes),node.name));}}}var defKindToExtKind=(_defKindToExtKind={},_defineProperty(_defKindToExtKind,Kind.SCALAR_TYPE_DEFINITION,Kind.SCALAR_TYPE_EXTENSION),_defineProperty(_defKindToExtKind,Kind.OBJECT_TYPE_DEFINITION,Kind.OBJECT_TYPE_EXTENSION),_defineProperty(_defKindToExtKind,Kind.INTERFACE_TYPE_DEFINITION,Kind.INTERFACE_TYPE_EXTENSION),_defineProperty(_defKindToExtKind,Kind.UNION_TYPE_DEFINITION,Kind.UNION_TYPE_EXTENSION),_defineProperty(_defKindToExtKind,Kind.ENUM_TYPE_DEFINITION,Kind.ENUM_TYPE_EXTENSION),_defineProperty(_defKindToExtKind,Kind.INPUT_OBJECT_TYPE_DEFINITION,Kind.INPUT_OBJECT_TYPE_EXTENSION),_defKindToExtKind);function typeToExtKind(type){if(isScalarType(type)){return Kind.SCALAR_TYPE_EXTENSION;}if(isObjectType(type)){return Kind.OBJECT_TYPE_EXTENSION;}if(isInterfaceType(type)){return Kind.INTERFACE_TYPE_EXTENSION;}if(isUnionType(type)){return Kind.UNION_TYPE_EXTENSION;}if(isEnumType(type)){return Kind.ENUM_TYPE_EXTENSION;}// istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\nif(isInputObjectType(type)){return Kind.INPUT_OBJECT_TYPE_EXTENSION;}// istanbul ignore next (Not reachable. All possible types have been considered)\nfalse||invariant(0,'Unexpected type: '+inspect(type));}function extensionKindToTypeName(kind){switch(kind){case Kind.SCALAR_TYPE_EXTENSION:return'scalar';case Kind.OBJECT_TYPE_EXTENSION:return'object';case Kind.INTERFACE_TYPE_EXTENSION:return'interface';case Kind.UNION_TYPE_EXTENSION:return'union';case Kind.ENUM_TYPE_EXTENSION:return'enum';case Kind.INPUT_OBJECT_TYPE_EXTENSION:return'input object';}// istanbul ignore next (Not reachable. All possible types have been considered)\nfalse||invariant(0,'Unexpected kind: '+inspect(kind));}","map":{"version":3,"names":["_defKindToExtKind","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","inspect","invariant","didYouMean","suggestionList","GraphQLError","Kind","isTypeDefinitionNode","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","PossibleTypeExtensionsRule","context","schema","getSchema","definedTypes","create","_i2","_context$getDocument$2","getDocument","definitions","length","def","name","ScalarTypeExtension","checkExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","node","typeName","defNode","existingType","getType","expectedKind","defKindToExtKind","kind","typeToExtKind","kindStr","extensionKindToTypeName","reportError","concat","allTypeNames","keys","getTypeMap","suggestedTypes","SCALAR_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_DEFINITION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_DEFINITION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_DEFINITION","UNION_TYPE_EXTENSION","ENUM_TYPE_DEFINITION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_DEFINITION","INPUT_OBJECT_TYPE_EXTENSION","type"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/validation/rules/PossibleTypeExtensionsRule.mjs"],"sourcesContent":["var _defKindToExtKind;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport inspect from \"../../jsutils/inspect.mjs\";\nimport invariant from \"../../jsutils/invariant.mjs\";\nimport didYouMean from \"../../jsutils/didYouMean.mjs\";\nimport suggestionList from \"../../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { isTypeDefinitionNode } from \"../../language/predicates.mjs\";\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from \"../../type/definition.mjs\";\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nexport function PossibleTypeExtensionsRule(context) {\n  var schema = context.getSchema();\n  var definedTypes = Object.create(null);\n\n  for (var _i2 = 0, _context$getDocument$2 = context.getDocument().definitions; _i2 < _context$getDocument$2.length; _i2++) {\n    var def = _context$getDocument$2[_i2];\n\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension\n  };\n\n  function checkExtension(node) {\n    var typeName = node.name.value;\n    var defNode = definedTypes[typeName];\n    var existingType = schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    var expectedKind;\n\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        var kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(new GraphQLError(\"Cannot extend non-\".concat(kindStr, \" type \\\"\").concat(typeName, \"\\\".\"), defNode ? [defNode, node] : node));\n      }\n    } else {\n      var allTypeNames = Object.keys(definedTypes);\n\n      if (schema) {\n        allTypeNames = allTypeNames.concat(Object.keys(schema.getTypeMap()));\n      }\n\n      var suggestedTypes = suggestionList(typeName, allTypeNames);\n      context.reportError(new GraphQLError(\"Cannot extend type \\\"\".concat(typeName, \"\\\" because it is not defined.\") + didYouMean(suggestedTypes), node.name));\n    }\n  }\n}\nvar defKindToExtKind = (_defKindToExtKind = {}, _defineProperty(_defKindToExtKind, Kind.SCALAR_TYPE_DEFINITION, Kind.SCALAR_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.OBJECT_TYPE_DEFINITION, Kind.OBJECT_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.INTERFACE_TYPE_DEFINITION, Kind.INTERFACE_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.UNION_TYPE_DEFINITION, Kind.UNION_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.ENUM_TYPE_DEFINITION, Kind.ENUM_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.INPUT_OBJECT_TYPE_DEFINITION, Kind.INPUT_OBJECT_TYPE_EXTENSION), _defKindToExtKind);\n\nfunction typeToExtKind(type) {\n  if (isScalarType(type)) {\n    return Kind.SCALAR_TYPE_EXTENSION;\n  }\n\n  if (isObjectType(type)) {\n    return Kind.OBJECT_TYPE_EXTENSION;\n  }\n\n  if (isInterfaceType(type)) {\n    return Kind.INTERFACE_TYPE_EXTENSION;\n  }\n\n  if (isUnionType(type)) {\n    return Kind.UNION_TYPE_EXTENSION;\n  }\n\n  if (isEnumType(type)) {\n    return Kind.ENUM_TYPE_EXTENSION;\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isInputObjectType(type)) {\n    return Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected type: ' + inspect(type));\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n  } // istanbul ignore next (Not reachable. All possible types have been considered)\n\n\n  false || invariant(0, 'Unexpected kind: ' + inspect(kind));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}