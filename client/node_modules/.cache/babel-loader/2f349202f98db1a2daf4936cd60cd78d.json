{"ast":null,"code":"/**\n * The set of allowed kind values for AST nodes.\n */export var Kind=Object.freeze({// Name\nNAME:'Name',// Document\nDOCUMENT:'Document',OPERATION_DEFINITION:'OperationDefinition',VARIABLE_DEFINITION:'VariableDefinition',SELECTION_SET:'SelectionSet',FIELD:'Field',ARGUMENT:'Argument',// Fragments\nFRAGMENT_SPREAD:'FragmentSpread',INLINE_FRAGMENT:'InlineFragment',FRAGMENT_DEFINITION:'FragmentDefinition',// Values\nVARIABLE:'Variable',INT:'IntValue',FLOAT:'FloatValue',STRING:'StringValue',BOOLEAN:'BooleanValue',NULL:'NullValue',ENUM:'EnumValue',LIST:'ListValue',OBJECT:'ObjectValue',OBJECT_FIELD:'ObjectField',// Directives\nDIRECTIVE:'Directive',// Types\nNAMED_TYPE:'NamedType',LIST_TYPE:'ListType',NON_NULL_TYPE:'NonNullType',// Type System Definitions\nSCHEMA_DEFINITION:'SchemaDefinition',OPERATION_TYPE_DEFINITION:'OperationTypeDefinition',// Type Definitions\nSCALAR_TYPE_DEFINITION:'ScalarTypeDefinition',OBJECT_TYPE_DEFINITION:'ObjectTypeDefinition',FIELD_DEFINITION:'FieldDefinition',INPUT_VALUE_DEFINITION:'InputValueDefinition',INTERFACE_TYPE_DEFINITION:'InterfaceTypeDefinition',UNION_TYPE_DEFINITION:'UnionTypeDefinition',ENUM_TYPE_DEFINITION:'EnumTypeDefinition',ENUM_VALUE_DEFINITION:'EnumValueDefinition',INPUT_OBJECT_TYPE_DEFINITION:'InputObjectTypeDefinition',// Directive Definitions\nDIRECTIVE_DEFINITION:'DirectiveDefinition',// Type System Extensions\nSCHEMA_EXTENSION:'SchemaExtension',// Type Extensions\nSCALAR_TYPE_EXTENSION:'ScalarTypeExtension',OBJECT_TYPE_EXTENSION:'ObjectTypeExtension',INTERFACE_TYPE_EXTENSION:'InterfaceTypeExtension',UNION_TYPE_EXTENSION:'UnionTypeExtension',ENUM_TYPE_EXTENSION:'EnumTypeExtension',INPUT_OBJECT_TYPE_EXTENSION:'InputObjectTypeExtension'});/**\n * The enum type representing the possible kind values of AST nodes.\n */","map":{"version":3,"names":["Kind","Object","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/language/kinds.mjs"],"sourcesContent":["/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n"],"mappings":"AAAA;AACA;AACA,GACA,MAAO,IAAIA,KAAI,CAAGC,MAAM,CAACC,MAAP,CAAc,CAC9B;AACAC,IAAI,CAAE,MAFwB,CAG9B;AACAC,QAAQ,CAAE,UAJoB,CAK9BC,oBAAoB,CAAE,qBALQ,CAM9BC,mBAAmB,CAAE,oBANS,CAO9BC,aAAa,CAAE,cAPe,CAQ9BC,KAAK,CAAE,OARuB,CAS9BC,QAAQ,CAAE,UAToB,CAU9B;AACAC,eAAe,CAAE,gBAXa,CAY9BC,eAAe,CAAE,gBAZa,CAa9BC,mBAAmB,CAAE,oBAbS,CAc9B;AACAC,QAAQ,CAAE,UAfoB,CAgB9BC,GAAG,CAAE,UAhByB,CAiB9BC,KAAK,CAAE,YAjBuB,CAkB9BC,MAAM,CAAE,aAlBsB,CAmB9BC,OAAO,CAAE,cAnBqB,CAoB9BC,IAAI,CAAE,WApBwB,CAqB9BC,IAAI,CAAE,WArBwB,CAsB9BC,IAAI,CAAE,WAtBwB,CAuB9BC,MAAM,CAAE,aAvBsB,CAwB9BC,YAAY,CAAE,aAxBgB,CAyB9B;AACAC,SAAS,CAAE,WA1BmB,CA2B9B;AACAC,UAAU,CAAE,WA5BkB,CA6B9BC,SAAS,CAAE,UA7BmB,CA8B9BC,aAAa,CAAE,aA9Be,CA+B9B;AACAC,iBAAiB,CAAE,kBAhCW,CAiC9BC,yBAAyB,CAAE,yBAjCG,CAkC9B;AACAC,sBAAsB,CAAE,sBAnCM,CAoC9BC,sBAAsB,CAAE,sBApCM,CAqC9BC,gBAAgB,CAAE,iBArCY,CAsC9BC,sBAAsB,CAAE,sBAtCM,CAuC9BC,yBAAyB,CAAE,yBAvCG,CAwC9BC,qBAAqB,CAAE,qBAxCO,CAyC9BC,oBAAoB,CAAE,oBAzCQ,CA0C9BC,qBAAqB,CAAE,qBA1CO,CA2C9BC,4BAA4B,CAAE,2BA3CA,CA4C9B;AACAC,oBAAoB,CAAE,qBA7CQ,CA8C9B;AACAC,gBAAgB,CAAE,iBA/CY,CAgD9B;AACAC,qBAAqB,CAAE,qBAjDO,CAkD9BC,qBAAqB,CAAE,qBAlDO,CAmD9BC,wBAAwB,CAAE,wBAnDI,CAoD9BC,oBAAoB,CAAE,oBApDQ,CAqD9BC,mBAAmB,CAAE,mBArDS,CAsD9BC,2BAA2B,CAAE,0BAtDC,CAAd,CAAX,CAwDP;AACA;AACA"},"metadata":{},"sourceType":"module"}