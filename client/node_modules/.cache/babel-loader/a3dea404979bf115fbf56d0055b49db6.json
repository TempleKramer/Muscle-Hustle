{"ast":null,"code":"import{__assign}from\"tslib\";import{useCallback,useEffect,useRef,useState}from'react';import{mergeOptions}from\"../../core/index.js\";import{equal}from'@wry/equality';import{DocumentType,verifyDocumentType}from\"../parser/index.js\";import{ApolloError}from\"../../errors/index.js\";import{useApolloClient}from\"./useApolloClient.js\";export function useMutation(mutation,options){var client=useApolloClient(options===null||options===void 0?void 0:options.client);verifyDocumentType(mutation,DocumentType.Mutation);var _a=useState({called:false,loading:false,client:client}),result=_a[0],setResult=_a[1];var ref=useRef({result:result,mutationId:0,isMounted:true,client:client,mutation:mutation,options:options});{Object.assign(ref.current,{client:client,options:options,mutation:mutation});}var execute=useCallback(function(executeOptions){if(executeOptions===void 0){executeOptions={};}var _a=ref.current,client=_a.client,options=_a.options,mutation=_a.mutation;var baseOptions=__assign(__assign({},options),{mutation:mutation});if(!ref.current.result.loading&&!baseOptions.ignoreResults&&ref.current.isMounted){setResult(ref.current.result={loading:true,error:void 0,data:void 0,called:true,client:client});}var mutationId=++ref.current.mutationId;var clientOptions=mergeOptions(baseOptions,executeOptions);return client.mutate(clientOptions).then(function(response){var _a,_b,_c;var data=response.data,errors=response.errors;var error=errors&&errors.length>0?new ApolloError({graphQLErrors:errors}):void 0;if(mutationId===ref.current.mutationId&&!clientOptions.ignoreResults){var result_1={called:true,loading:false,data:data,error:error,client:client};if(ref.current.isMounted&&!equal(ref.current.result,result_1)){setResult(ref.current.result=result_1);}}(_b=(_a=ref.current.options)===null||_a===void 0?void 0:_a.onCompleted)===null||_b===void 0?void 0:_b.call(_a,response.data,clientOptions);(_c=executeOptions.onCompleted)===null||_c===void 0?void 0:_c.call(executeOptions,response.data,clientOptions);return response;}).catch(function(error){var _a,_b,_c,_d;if(mutationId===ref.current.mutationId&&ref.current.isMounted){var result_2={loading:false,error:error,data:void 0,called:true,client:client};if(!equal(ref.current.result,result_2)){setResult(ref.current.result=result_2);}}if(((_a=ref.current.options)===null||_a===void 0?void 0:_a.onError)||clientOptions.onError){(_c=(_b=ref.current.options)===null||_b===void 0?void 0:_b.onError)===null||_c===void 0?void 0:_c.call(_b,error,clientOptions);(_d=executeOptions.onError)===null||_d===void 0?void 0:_d.call(executeOptions,error,clientOptions);return{data:void 0,errors:error};}throw error;});},[]);var reset=useCallback(function(){if(ref.current.isMounted){setResult({called:false,loading:false,client:client});}},[]);useEffect(function(){ref.current.isMounted=true;return function(){ref.current.isMounted=false;};},[]);return[execute,__assign({reset:reset},result)];}","map":{"version":3,"mappings":"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","names":["useCallback","useEffect","useRef","useState","mergeOptions","equal","DocumentType","verifyDocumentType","ApolloError","useApolloClient","useMutation","mutation","options","client","Mutation","called","loading","result","setResult","ref","mutationId","isMounted","Object","assign","current","execute","executeOptions","baseOptions","ignoreResults","error","data","clientOptions","mutate","then","response","errors","length","graphQLErrors","result_1","_a","onCompleted","_b","_c","catch","result_2","onError","_d","reset","__assign"],"sourceRoot":"","sources":["../../../src/react/hooks/useMutation.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport {\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple,\n} from '../types/types';\n\nimport {\n  ApolloCache,\n  DefaultContext,\n  mergeOptions,\n  OperationVariables,\n} from '../../core';\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport { ApolloError } from '../../errors';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<TData, TVariables, TContext>,\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  const [result, setResult] = useState<Omit<MutationResult, 'reset'>>({\n    called: false,\n    loading: false,\n    client,\n  });\n\n  const ref = useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options,\n  });\n\n  // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n  // higher-order components.\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n\n  const execute = useCallback((\n    executeOptions: MutationFunctionOptions<\n      TData,\n      TVariables,\n      TContext,\n      TCache\n    > = {}\n  ) => {\n    const {client, options, mutation} = ref.current;\n    const baseOptions = { ...options, mutation };\n    if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client,\n      });\n    }\n\n    const mutationId = ++ref.current.mutationId;\n    const clientOptions = mergeOptions(\n      baseOptions,\n      executeOptions as any,\n    );\n\n    return client.mutate(clientOptions).then((response) => {\n      const { data, errors } = response;\n      const error =\n        errors && errors.length > 0\n          ? new ApolloError({ graphQLErrors: errors })\n          : void 0;\n\n      if (\n        mutationId === ref.current.mutationId &&\n        !clientOptions.ignoreResults\n      ) {\n        const result = {\n          called: true,\n          loading: false,\n          data,\n          error,\n          client,\n        };\n\n        if (ref.current.isMounted && !equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n      ref.current.options?.onCompleted?.(response.data!, clientOptions);\n      executeOptions.onCompleted?.(response.data!, clientOptions);\n      return response;\n    }).catch((error) => {\n      if (\n        mutationId === ref.current.mutationId &&\n        ref.current.isMounted\n      ) {\n        const result = {\n          loading: false,\n          error,\n          data: void 0,\n          called: true,\n          client,\n        };\n\n        if (!equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n\n      if (ref.current.options?.onError || clientOptions.onError) {\n        ref.current.options?.onError?.(error, clientOptions);\n        executeOptions.onError?.(error, clientOptions);\n        // TODO(brian): why are we returning this here???\n        return { data: void 0, errors: error };\n      }\n\n      throw error;\n    });\n  }, []);\n\n  const reset = useCallback(() => {\n    if (ref.current.isMounted) {\n      setResult({ called: false, loading: false, client });\n    }\n  }, []);\n\n  useEffect(() => {\n    ref.current.isMounted = true;\n\n    return () => {\n      ref.current.isMounted = false;\n    };\n  }, []);\n\n  return [execute, { reset, ...result }];\n}\n"]},"metadata":{},"sourceType":"module"}