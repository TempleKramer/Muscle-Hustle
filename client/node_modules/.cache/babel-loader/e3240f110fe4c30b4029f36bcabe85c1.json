{"ast":null,"code":"/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */export default function keyValMap(list,keyFn,valFn){return list.reduce(function(map,item){map[keyFn(item)]=valFn(item);return map;},Object.create(null));}","map":{"version":3,"names":["keyValMap","list","keyFn","valFn","reduce","map","item","Object","create"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/jsutils/keyValMap.mjs"],"sourcesContent":["/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */\nexport default function keyValMap(list, keyFn, valFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = valFn(item);\n    return map;\n  }, Object.create(null));\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAe,SAASA,UAAT,CAAmBC,IAAnB,CAAyBC,KAAzB,CAAgCC,KAAhC,CAAuC,CACpD,MAAOF,KAAI,CAACG,MAAL,CAAY,SAAUC,GAAV,CAAeC,IAAf,CAAqB,CACtCD,GAAG,CAACH,KAAK,CAACI,IAAD,CAAN,CAAH,CAAmBH,KAAK,CAACG,IAAD,CAAxB,CACA,MAAOD,IAAP,CACD,CAHM,CAGJE,MAAM,CAACC,MAAP,CAAc,IAAd,CAHI,CAAP,CAID"},"metadata":{},"sourceType":"module"}