{"ast":null,"code":"import{invariant}from\"../../utilities/globals/index.js\";export function toPromise(observable){var completed=false;return new Promise(function(resolve,reject){observable.subscribe({next:function next(data){if(completed){__DEV__&&invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");}else{completed=true;resolve(data);}},error:reject});});}","map":{"version":3,"mappings":"AAAA,OAASA,SAAT,KAA0B,kCAA1B,CAGA,MAAM,SAAUC,UAAV,CAAuBC,UAAvB,CAAgD,CACpD,GAAIC,UAAS,CAAG,KAAhB,CACA,MAAO,IAAIC,QAAJ,CAAe,SAACC,OAAD,CAAUC,MAAV,CAAgB,CACpCJ,UAAU,CAACK,SAAX,CAAqB,CACnBC,IAAI,CAAE,mBAAI,CACR,GAAIL,SAAJ,CAAe,CACbM,SAAUT,SACR,KADQ,CACR,mEADQ,CAAV,CAGD,CAJD,IAIO,CACLG,SAAS,CAAG,IAAZ,CACAE,OAAO,CAACK,IAAD,CAAP,CACD,CACF,CAVkB,CAWnBC,KAAK,CAAEL,MAXY,CAArB,EAaD,CAdM,CAAP,CAeD","names":["invariant","toPromise","observable","completed","Promise","resolve","reject","subscribe","next","__DEV__","data","error"],"sourceRoot":"","sources":["../../../src/link/utils/toPromise.ts"],"sourcesContent":["import { invariant } from '../../utilities/globals';\nimport { Observable } from '../../utilities';\n\nexport function toPromise<R>(observable: Observable<R>): Promise<R> {\n  let completed = false;\n  return new Promise<R>((resolve, reject) => {\n    observable.subscribe({\n      next: data => {\n        if (completed) {\n          invariant.warn(\n            `Promise Wrapper does not support multiple results from Observable`,\n          );\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject,\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}