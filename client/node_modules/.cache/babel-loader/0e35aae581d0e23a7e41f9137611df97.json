{"ast":null,"code":"import objectValues from\"../polyfills/objectValues.mjs\";import inspect from\"../jsutils/inspect.mjs\";import invariant from\"../jsutils/invariant.mjs\";import didYouMean from\"../jsutils/didYouMean.mjs\";import isObjectLike from\"../jsutils/isObjectLike.mjs\";import safeArrayFrom from\"../jsutils/safeArrayFrom.mjs\";import suggestionList from\"../jsutils/suggestionList.mjs\";import printPathArray from\"../jsutils/printPathArray.mjs\";import{addPath,pathToArray}from\"../jsutils/Path.mjs\";import{GraphQLError}from\"../error/GraphQLError.mjs\";import{isLeafType,isInputObjectType,isListType,isNonNullType}from\"../type/definition.mjs\";/**\n * Coerces a JavaScript value given a GraphQL Input Type.\n */export function coerceInputValue(inputValue,type){var onError=arguments.length>2&&arguments[2]!==undefined?arguments[2]:defaultOnError;return coerceInputValueImpl(inputValue,type,onError);}function defaultOnError(path,invalidValue,error){var errorPrefix='Invalid value '+inspect(invalidValue);if(path.length>0){errorPrefix+=\" at \\\"value\".concat(printPathArray(path),\"\\\"\");}error.message=errorPrefix+': '+error.message;throw error;}function coerceInputValueImpl(inputValue,type,onError,path){if(isNonNullType(type)){if(inputValue!=null){return coerceInputValueImpl(inputValue,type.ofType,onError,path);}onError(pathToArray(path),inputValue,new GraphQLError(\"Expected non-nullable type \\\"\".concat(inspect(type),\"\\\" not to be null.\")));return;}if(inputValue==null){// Explicitly return the value null.\nreturn null;}if(isListType(type)){var itemType=type.ofType;var coercedList=safeArrayFrom(inputValue,function(itemValue,index){var itemPath=addPath(path,index,undefined);return coerceInputValueImpl(itemValue,itemType,onError,itemPath);});if(coercedList!=null){return coercedList;}// Lists accept a non-list value as a list of one.\nreturn[coerceInputValueImpl(inputValue,itemType,onError,path)];}if(isInputObjectType(type)){if(!isObjectLike(inputValue)){onError(pathToArray(path),inputValue,new GraphQLError(\"Expected type \\\"\".concat(type.name,\"\\\" to be an object.\")));return;}var coercedValue={};var fieldDefs=type.getFields();for(var _i2=0,_objectValues2=objectValues(fieldDefs);_i2<_objectValues2.length;_i2++){var field=_objectValues2[_i2];var fieldValue=inputValue[field.name];if(fieldValue===undefined){if(field.defaultValue!==undefined){coercedValue[field.name]=field.defaultValue;}else if(isNonNullType(field.type)){var typeStr=inspect(field.type);onError(pathToArray(path),inputValue,new GraphQLError(\"Field \\\"\".concat(field.name,\"\\\" of required type \\\"\").concat(typeStr,\"\\\" was not provided.\")));}continue;}coercedValue[field.name]=coerceInputValueImpl(fieldValue,field.type,onError,addPath(path,field.name,type.name));}// Ensure every provided field is defined.\nfor(var _i4=0,_Object$keys2=Object.keys(inputValue);_i4<_Object$keys2.length;_i4++){var fieldName=_Object$keys2[_i4];if(!fieldDefs[fieldName]){var suggestions=suggestionList(fieldName,Object.keys(type.getFields()));onError(pathToArray(path),inputValue,new GraphQLError(\"Field \\\"\".concat(fieldName,\"\\\" is not defined by type \\\"\").concat(type.name,\"\\\".\")+didYouMean(suggestions)));}}return coercedValue;}// istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\nif(isLeafType(type)){var parseResult;// Scalars and Enums determine if a input value is valid via parseValue(),\n// which can throw to indicate failure. If it throws, maintain a reference\n// to the original error.\ntry{parseResult=type.parseValue(inputValue);}catch(error){if(error instanceof GraphQLError){onError(pathToArray(path),inputValue,error);}else{onError(pathToArray(path),inputValue,new GraphQLError(\"Expected type \\\"\".concat(type.name,\"\\\". \")+error.message,undefined,undefined,undefined,undefined,error));}return;}if(parseResult===undefined){onError(pathToArray(path),inputValue,new GraphQLError(\"Expected type \\\"\".concat(type.name,\"\\\".\")));}return parseResult;}// istanbul ignore next (Not reachable. All possible input types have been considered)\nfalse||invariant(0,'Unexpected input type: '+inspect(type));}","map":{"version":3,"names":["objectValues","inspect","invariant","didYouMean","isObjectLike","safeArrayFrom","suggestionList","printPathArray","addPath","pathToArray","GraphQLError","isLeafType","isInputObjectType","isListType","isNonNullType","coerceInputValue","inputValue","type","onError","arguments","length","undefined","defaultOnError","coerceInputValueImpl","path","invalidValue","error","errorPrefix","concat","message","ofType","itemType","coercedList","itemValue","index","itemPath","name","coercedValue","fieldDefs","getFields","_i2","_objectValues2","field","fieldValue","defaultValue","typeStr","_i4","_Object$keys2","Object","keys","fieldName","suggestions","parseResult","parseValue"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/utilities/coerceInputValue.mjs"],"sourcesContent":["import objectValues from \"../polyfills/objectValues.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport didYouMean from \"../jsutils/didYouMean.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport safeArrayFrom from \"../jsutils/safeArrayFrom.mjs\";\nimport suggestionList from \"../jsutils/suggestionList.mjs\";\nimport printPathArray from \"../jsutils/printPathArray.mjs\";\nimport { addPath, pathToArray } from \"../jsutils/Path.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { isLeafType, isInputObjectType, isListType, isNonNullType } from \"../type/definition.mjs\";\n\n/**\n * Coerces a JavaScript value given a GraphQL Input Type.\n */\nexport function coerceInputValue(inputValue, type) {\n  var onError = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultOnError;\n  return coerceInputValueImpl(inputValue, type, onError);\n}\n\nfunction defaultOnError(path, invalidValue, error) {\n  var errorPrefix = 'Invalid value ' + inspect(invalidValue);\n\n  if (path.length > 0) {\n    errorPrefix += \" at \\\"value\".concat(printPathArray(path), \"\\\"\");\n  }\n\n  error.message = errorPrefix + ': ' + error.message;\n  throw error;\n}\n\nfunction coerceInputValueImpl(inputValue, type, onError, path) {\n  if (isNonNullType(type)) {\n    if (inputValue != null) {\n      return coerceInputValueImpl(inputValue, type.ofType, onError, path);\n    }\n\n    onError(pathToArray(path), inputValue, new GraphQLError(\"Expected non-nullable type \\\"\".concat(inspect(type), \"\\\" not to be null.\")));\n    return;\n  }\n\n  if (inputValue == null) {\n    // Explicitly return the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n    var coercedList = safeArrayFrom(inputValue, function (itemValue, index) {\n      var itemPath = addPath(path, index, undefined);\n      return coerceInputValueImpl(itemValue, itemType, onError, itemPath);\n    });\n\n    if (coercedList != null) {\n      return coercedList;\n    } // Lists accept a non-list value as a list of one.\n\n\n    return [coerceInputValueImpl(inputValue, itemType, onError, path)];\n  }\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(inputValue)) {\n      onError(pathToArray(path), inputValue, new GraphQLError(\"Expected type \\\"\".concat(type.name, \"\\\" to be an object.\")));\n      return;\n    }\n\n    var coercedValue = {};\n    var fieldDefs = type.getFields();\n\n    for (var _i2 = 0, _objectValues2 = objectValues(fieldDefs); _i2 < _objectValues2.length; _i2++) {\n      var field = _objectValues2[_i2];\n      var fieldValue = inputValue[field.name];\n\n      if (fieldValue === undefined) {\n        if (field.defaultValue !== undefined) {\n          coercedValue[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          var typeStr = inspect(field.type);\n          onError(pathToArray(path), inputValue, new GraphQLError(\"Field \\\"\".concat(field.name, \"\\\" of required type \\\"\").concat(typeStr, \"\\\" was not provided.\")));\n        }\n\n        continue;\n      }\n\n      coercedValue[field.name] = coerceInputValueImpl(fieldValue, field.type, onError, addPath(path, field.name, type.name));\n    } // Ensure every provided field is defined.\n\n\n    for (var _i4 = 0, _Object$keys2 = Object.keys(inputValue); _i4 < _Object$keys2.length; _i4++) {\n      var fieldName = _Object$keys2[_i4];\n\n      if (!fieldDefs[fieldName]) {\n        var suggestions = suggestionList(fieldName, Object.keys(type.getFields()));\n        onError(pathToArray(path), inputValue, new GraphQLError(\"Field \\\"\".concat(fieldName, \"\\\" is not defined by type \\\"\").concat(type.name, \"\\\".\") + didYouMean(suggestions)));\n      }\n    }\n\n    return coercedValue;\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isLeafType(type)) {\n    var parseResult; // Scalars and Enums determine if a input value is valid via parseValue(),\n    // which can throw to indicate failure. If it throws, maintain a reference\n    // to the original error.\n\n    try {\n      parseResult = type.parseValue(inputValue);\n    } catch (error) {\n      if (error instanceof GraphQLError) {\n        onError(pathToArray(path), inputValue, error);\n      } else {\n        onError(pathToArray(path), inputValue, new GraphQLError(\"Expected type \\\"\".concat(type.name, \"\\\". \") + error.message, undefined, undefined, undefined, undefined, error));\n      }\n\n      return;\n    }\n\n    if (parseResult === undefined) {\n      onError(pathToArray(path), inputValue, new GraphQLError(\"Expected type \\\"\".concat(type.name, \"\\\".\")));\n    }\n\n    return parseResult;\n  } // istanbul ignore next (Not reachable. All possible input types have been considered)\n\n\n  false || invariant(0, 'Unexpected input type: ' + inspect(type));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}