{"ast":null,"code":"import\"../../utilities/globals/index.js\";import{useState,useRef,useEffect}from'react';import{invariant}from\"../../utilities/globals/index.js\";import{equal}from'@wry/equality';import{DocumentType,verifyDocumentType}from\"../parser/index.js\";import{useApolloClient}from\"./useApolloClient.js\";export function useSubscription(subscription,options){var hasIssuedDeprecationWarningRef=useRef(false);var client=useApolloClient(options===null||options===void 0?void 0:options.client);verifyDocumentType(subscription,DocumentType.Subscription);var _a=useState({loading:!(options===null||options===void 0?void 0:options.skip),error:void 0,data:void 0,variables:options===null||options===void 0?void 0:options.variables}),result=_a[0],setResult=_a[1];if(!hasIssuedDeprecationWarningRef.current){hasIssuedDeprecationWarningRef.current=true;if(options===null||options===void 0?void 0:options.onSubscriptionData){__DEV__&&invariant.warn(options.onData?\"'useSubscription' supports only the 'onSubscriptionData' or 'onData' option, but not both. Only the 'onData' option will be used.\":\"'onSubscriptionData' is deprecated and will be removed in a future major version. Please use the 'onData' option instead.\");}if(options===null||options===void 0?void 0:options.onSubscriptionComplete){__DEV__&&invariant.warn(options.onComplete?\"'useSubscription' supports only the 'onSubscriptionComplete' or 'onComplete' option, but not both. Only the 'onComplete' option will be used.\":\"'onSubscriptionComplete' is deprecated and will be removed in a future major version. Please use the 'onComplete' option instead.\");}}var _b=useState(function(){if(options===null||options===void 0?void 0:options.skip){return null;}return client.subscribe({query:subscription,variables:options===null||options===void 0?void 0:options.variables,fetchPolicy:options===null||options===void 0?void 0:options.fetchPolicy,context:options===null||options===void 0?void 0:options.context});}),observable=_b[0],setObservable=_b[1];var canResetObservableRef=useRef(false);useEffect(function(){return function(){canResetObservableRef.current=true;};},[]);var ref=useRef({client:client,subscription:subscription,options:options});useEffect(function(){var _a,_b,_c,_d;var shouldResubscribe=options===null||options===void 0?void 0:options.shouldResubscribe;if(typeof shouldResubscribe==='function'){shouldResubscribe=!!shouldResubscribe(options);}if(options===null||options===void 0?void 0:options.skip){if(!(options===null||options===void 0?void 0:options.skip)!==!((_a=ref.current.options)===null||_a===void 0?void 0:_a.skip)||canResetObservableRef.current){setResult({loading:false,data:void 0,error:void 0,variables:options===null||options===void 0?void 0:options.variables});setObservable(null);canResetObservableRef.current=false;}}else if(shouldResubscribe!==false&&(client!==ref.current.client||subscription!==ref.current.subscription||(options===null||options===void 0?void 0:options.fetchPolicy)!==((_b=ref.current.options)===null||_b===void 0?void 0:_b.fetchPolicy)||!(options===null||options===void 0?void 0:options.skip)!==!((_c=ref.current.options)===null||_c===void 0?void 0:_c.skip)||!equal(options===null||options===void 0?void 0:options.variables,(_d=ref.current.options)===null||_d===void 0?void 0:_d.variables))||canResetObservableRef.current){setResult({loading:true,data:void 0,error:void 0,variables:options===null||options===void 0?void 0:options.variables});setObservable(client.subscribe({query:subscription,variables:options===null||options===void 0?void 0:options.variables,fetchPolicy:options===null||options===void 0?void 0:options.fetchPolicy,context:options===null||options===void 0?void 0:options.context}));canResetObservableRef.current=false;}Object.assign(ref.current,{client:client,subscription:subscription,options:options});},[client,subscription,options,canResetObservableRef.current]);useEffect(function(){if(!observable){return;}var subscription=observable.subscribe({next:function next(fetchResult){var _a,_b;var result={loading:false,data:fetchResult.data,error:void 0,variables:options===null||options===void 0?void 0:options.variables};setResult(result);if((_a=ref.current.options)===null||_a===void 0?void 0:_a.onData){ref.current.options.onData({client:client,data:result});}else if((_b=ref.current.options)===null||_b===void 0?void 0:_b.onSubscriptionData){ref.current.options.onSubscriptionData({client:client,subscriptionData:result});}},error:function error(_error){var _a,_b;setResult({loading:false,data:void 0,error:_error,variables:options===null||options===void 0?void 0:options.variables});(_b=(_a=ref.current.options)===null||_a===void 0?void 0:_a.onError)===null||_b===void 0?void 0:_b.call(_a,_error);},complete:function complete(){var _a,_b;if((_a=ref.current.options)===null||_a===void 0?void 0:_a.onComplete){ref.current.options.onComplete();}else if((_b=ref.current.options)===null||_b===void 0?void 0:_b.onSubscriptionComplete){ref.current.options.onSubscriptionComplete();}}});return function(){subscription.unsubscribe();};},[observable]);return result;}","map":{"version":3,"mappings":"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","names":["useState","useRef","useEffect","invariant","equal","DocumentType","verifyDocumentType","useApolloClient","useSubscription","subscription","options","hasIssuedDeprecationWarningRef","client","Subscription","loading","skip","error","data","variables","result","setResult","current","onSubscriptionData","__DEV__","onSubscriptionComplete","subscribe","query","fetchPolicy","context","observable","setObservable","canResetObservableRef","ref","shouldResubscribe","_a","_b","_c","_d","Object","assign","next","fetchResult","onData","subscriptionData","onError","complete","onComplete","unsubscribe"],"sourceRoot":"","sources":["../../../src/react/hooks/useSubscription.ts"],"sourcesContent":["import '../../utilities/globals';\nimport { useState, useRef, useEffect } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport { invariant } from '../../utilities/globals'\nimport { equal } from '@wry/equality';\n\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport {\n  SubscriptionHookOptions,\n  SubscriptionResult\n} from '../types/types';\nimport { OperationVariables } from '../../core';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useSubscription<TData = any, TVariables = OperationVariables>(\n  subscription: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: SubscriptionHookOptions<TData, TVariables>,\n) {\n  const hasIssuedDeprecationWarningRef = useRef(false);\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(subscription, DocumentType.Subscription);\n  const [result, setResult] = useState<SubscriptionResult<TData>>({\n    loading: !options?.skip,\n    error: void 0,\n    data: void 0,\n    variables: options?.variables,\n  });\n\n  if (!hasIssuedDeprecationWarningRef.current) {\n    hasIssuedDeprecationWarningRef.current = true;\n\n    if (options?.onSubscriptionData) {\n      invariant.warn(\n        options.onData\n          ? \"'useSubscription' supports only the 'onSubscriptionData' or 'onData' option, but not both. Only the 'onData' option will be used.\"\n          : \"'onSubscriptionData' is deprecated and will be removed in a future major version. Please use the 'onData' option instead.\"\n      );\n    }\n\n    if (options?.onSubscriptionComplete) {\n      invariant.warn(\n        options.onComplete\n          ? \"'useSubscription' supports only the 'onSubscriptionComplete' or 'onComplete' option, but not both. Only the 'onComplete' option will be used.\"\n          : \"'onSubscriptionComplete' is deprecated and will be removed in a future major version. Please use the 'onComplete' option instead.\"\n      );\n    }\n  }\n\n  const [observable, setObservable] = useState(() => {\n    if (options?.skip) {\n      return null;\n    }\n\n    return client.subscribe({\n      query: subscription,\n      variables: options?.variables,\n      fetchPolicy: options?.fetchPolicy,\n      context: options?.context,\n    });\n  });\n\n  const canResetObservableRef = useRef(false);\n  useEffect(() => {\n    return () => {\n      canResetObservableRef.current = true;\n    };\n  }, []);\n\n  const ref = useRef({ client, subscription, options });\n  useEffect(() => {\n    let shouldResubscribe = options?.shouldResubscribe;\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(options!);\n    }\n\n    if (options?.skip) {\n      if (!options?.skip !== !ref.current.options?.skip || canResetObservableRef.current) {\n        setResult({\n          loading: false,\n          data: void 0,\n          error: void 0,\n          variables: options?.variables,\n        });\n        setObservable(null);\n        canResetObservableRef.current = false;\n      }\n    } else if (\n      (shouldResubscribe !== false &&\n        (client !== ref.current.client ||\n          subscription !== ref.current.subscription ||\n          options?.fetchPolicy !== ref.current.options?.fetchPolicy ||\n          !options?.skip !== !ref.current.options?.skip ||\n          !equal(options?.variables, ref.current.options?.variables))) ||\n      canResetObservableRef.current\n    ) {\n      setResult({\n        loading: true,\n        data: void 0,\n        error: void 0,\n        variables: options?.variables,\n      });\n      setObservable(client.subscribe({\n        query: subscription,\n        variables: options?.variables,\n        fetchPolicy: options?.fetchPolicy,\n        context: options?.context,\n      }));\n      canResetObservableRef.current = false;\n    }\n\n    Object.assign(ref.current, { client, subscription, options });\n  }, [client, subscription, options, canResetObservableRef.current]);\n\n  useEffect(() => {\n    if (!observable) {\n      return;\n    }\n\n    const subscription = observable.subscribe({\n      next(fetchResult) {\n        const result = {\n          loading: false,\n          // TODO: fetchResult.data can be null but SubscriptionResult.data\n          // expects TData | undefined only\n          data: fetchResult.data!,\n          error: void 0,\n          variables: options?.variables,\n        };\n        setResult(result);\n\n        if (ref.current.options?.onData) {\n          ref.current.options.onData({\n            client,\n            data: result\n          });\n        } else if (ref.current.options?.onSubscriptionData) {\n          ref.current.options.onSubscriptionData({\n            client,\n            subscriptionData: result\n          });\n        }\n      },\n      error(error) {\n        setResult({\n          loading: false,\n          data: void 0,\n          error,\n          variables: options?.variables,\n        });\n        ref.current.options?.onError?.(error);\n      },\n      complete() {\n        if (ref.current.options?.onComplete) {\n          ref.current.options.onComplete();\n        } else if (ref.current.options?.onSubscriptionComplete) {\n          ref.current.options.onSubscriptionComplete();\n        }\n      },\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [observable]);\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}