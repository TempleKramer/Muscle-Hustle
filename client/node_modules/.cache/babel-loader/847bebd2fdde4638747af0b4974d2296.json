{"ast":null,"code":"import{GraphQLError}from\"../../error/GraphQLError.mjs\";/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */export function UniqueInputFieldNamesRule(context){var knownNameStack=[];var knownNames=Object.create(null);return{ObjectValue:{enter:function enter(){knownNameStack.push(knownNames);knownNames=Object.create(null);},leave:function leave(){knownNames=knownNameStack.pop();}},ObjectField:function ObjectField(node){var fieldName=node.name.value;if(knownNames[fieldName]){context.reportError(new GraphQLError(\"There can be only one input field named \\\"\".concat(fieldName,\"\\\".\"),[knownNames[fieldName],node.name]));}else{knownNames[fieldName]=node.name;}}};}","map":{"version":3,"names":["GraphQLError","UniqueInputFieldNamesRule","context","knownNameStack","knownNames","Object","create","ObjectValue","enter","push","leave","pop","ObjectField","node","fieldName","name","value","reportError","concat"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.mjs"],"sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\nexport function UniqueInputFieldNamesRule(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(new GraphQLError(\"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\"), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}\n"],"mappings":"AAAA,OAASA,YAAT,KAA6B,8BAA7B,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASC,0BAAT,CAAmCC,OAAnC,CAA4C,CACjD,GAAIC,eAAc,CAAG,EAArB,CACA,GAAIC,WAAU,CAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAjB,CACA,MAAO,CACLC,WAAW,CAAE,CACXC,KAAK,CAAE,QAASA,MAAT,EAAiB,CACtBL,cAAc,CAACM,IAAf,CAAoBL,UAApB,EACAA,UAAU,CAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAb,CACD,CAJU,CAKXI,KAAK,CAAE,QAASA,MAAT,EAAiB,CACtBN,UAAU,CAAGD,cAAc,CAACQ,GAAf,EAAb,CACD,CAPU,CADR,CAULC,WAAW,CAAE,QAASA,YAAT,CAAqBC,IAArB,CAA2B,CACtC,GAAIC,UAAS,CAAGD,IAAI,CAACE,IAAL,CAAUC,KAA1B,CAEA,GAAIZ,UAAU,CAACU,SAAD,CAAd,CAA2B,CACzBZ,OAAO,CAACe,WAAR,CAAoB,GAAIjB,aAAJ,CAAiB,6CAA6CkB,MAA7C,CAAoDJ,SAApD,CAA+D,KAA/D,CAAjB,CAAwF,CAACV,UAAU,CAACU,SAAD,CAAX,CAAwBD,IAAI,CAACE,IAA7B,CAAxF,CAApB,EACD,CAFD,IAEO,CACLX,UAAU,CAACU,SAAD,CAAV,CAAwBD,IAAI,CAACE,IAA7B,CACD,CACF,CAlBI,CAAP,CAoBD"},"metadata":{},"sourceType":"module"}