{"ast":null,"code":"/**\n * Represents a location in a Source.\n */ /**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */export function getLocation(source,position){var lineRegexp=/\\r\\n|[\\n\\r]/g;var line=1;var column=position+1;var match;while((match=lineRegexp.exec(source.body))&&match.index<position){line+=1;column=position+1-(match.index+match[0].length);}return{line:line,column:column};}","map":{"version":3,"names":["getLocation","source","position","lineRegexp","line","column","match","exec","body","index","length"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/language/location.mjs"],"sourcesContent":["/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n"],"mappings":"AAAA;AACA;AACA,G,CAEA;AACA;AACA;AACA,GACA,MAAO,SAASA,YAAT,CAAqBC,MAArB,CAA6BC,QAA7B,CAAuC,CAC5C,GAAIC,WAAU,CAAG,cAAjB,CACA,GAAIC,KAAI,CAAG,CAAX,CACA,GAAIC,OAAM,CAAGH,QAAQ,CAAG,CAAxB,CACA,GAAII,MAAJ,CAEA,MAAO,CAACA,KAAK,CAAGH,UAAU,CAACI,IAAX,CAAgBN,MAAM,CAACO,IAAvB,CAAT,GAA0CF,KAAK,CAACG,KAAN,CAAcP,QAA/D,CAAyE,CACvEE,IAAI,EAAI,CAAR,CACAC,MAAM,CAAGH,QAAQ,CAAG,CAAX,EAAgBI,KAAK,CAACG,KAAN,CAAcH,KAAK,CAAC,CAAD,CAAL,CAASI,MAAvC,CAAT,CACD,CAED,MAAO,CACLN,IAAI,CAAEA,IADD,CAELC,MAAM,CAAEA,MAFH,CAAP,CAID"},"metadata":{},"sourceType":"module"}