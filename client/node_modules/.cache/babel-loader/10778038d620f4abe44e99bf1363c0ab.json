{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarma\\\\school\\\\challenges\\\\Project3_Final\\\\fitness-app\\\\client\\\\src\\\\App.js\";\n// import logo from './logo.svg';\n// import './App.css';\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// // export default App;\n// import React from 'react';import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { Login } from \"./login\";\nimport { Register } from \"./register\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Navbar from './components/Navbar'; // //Construct our main GraphQL API endpoint\n\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n}); // //Construct request middleware that will attach the JWT token to every request as an `authorization` header\n\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token'); //  return the headers to the context so httpLink can read them\n\n  return {\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  //   // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  const [currentForm, setCurrentForm] = useState('login');\n\n  const toggleForm = formName => {\n    setCurrentForm(formName);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, currentForm === \"login\" ? /*#__PURE__*/React.createElement(Login, {\n    onFormSwitch: toggleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 39\n    }\n  }) : /*#__PURE__*/React.createElement(Register, {\n    onFormSwitch: toggleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 77\n    }\n  }));\n}\n\n/*#__PURE__*/\nReact.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Navbar,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 14\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  render: () => /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 34\n    }\n  }, \"Wrong page!\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }\n})))));\nexport default App;","map":{"version":3,"names":["React","useState","Login","Register","BrowserRouter","Router","Switch","Route","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","Navbar","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App","currentForm","setCurrentForm","toggleForm","formName"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/fitness-app/client/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// // export default App;\n// import React from 'react';import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { Login } from \"./login\";\nimport { Register } from \"./register\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Navbar from './components/Navbar';\n\n// //Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// //Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n//  return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n//   // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n      const [currentForm, setCurrentForm] = useState('login');\n    \n      const toggleForm = (formName) => {\n        setCurrentForm(formName);\n      }\n    \n      return (\n        <div className=\"App\">\n          {\n            currentForm === \"login\" ? <Login onFormSwitch={toggleForm} /> : <Register onFormSwitch={toggleForm} />\n          }\n        </div>\n      );\n    }\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Switch>\n             <Route exact path=\"/\" component={Navbar} />\n            <Route render={() => <h1 className=\"display-2\">Wrong page!</h1>} /> \n          </Switch>\n        </>\n      </Router>\n    </ApolloProvider>\n  \n\nexport default App;\n\n\n\n"],"mappings":";AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAO,sCAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,QAKO,gBALP;AAMA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;AACA,MAAMC,QAAQ,GAAGH,cAAc,CAAC;EAC9BI,GAAG,EAAE;AADyB,CAAD,CAA/B,C,CAIA;;AACA,MAAMC,QAAQ,GAAGJ,UAAU,CAAC,CAACK,CAAD,WAAoB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC9C;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd,CAF8C,CAGhD;;EACE,OAAO;IACLH,OAAO,EAAE,EACP,GAAGA,OADI;MAEPI,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;IAFpC;EADJ,CAAP;AAMD,CAV0B,CAA3B;AAYA,MAAMI,MAAM,GAAG,IAAIf,YAAJ,CAAiB;EAChC;EACEgB,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CAFwB;EAG9BY,KAAK,EAAE,IAAIjB,aAAJ;AAHuB,CAAjB,CAAf;;AAMA,SAASkB,GAAT,GAAe;EACT,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,OAAD,CAA9C;;EAEA,MAAM6B,UAAU,GAAIC,QAAD,IAAc;IAC/BF,cAAc,CAACE,QAAD,CAAd;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEIH,WAAW,KAAK,OAAhB,gBAA0B,oBAAC,KAAD;IAAO,YAAY,EAAEE,UAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAA1B,gBAAgE,oBAAC,QAAD;IAAU,YAAY,EAAEA,UAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFpE,CADF;AAOD;;AACD;AAAA,oBAAC,cAAD;EAAgB,MAAM,EAAEP,MAAxB;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACE,oBAAC,MAAD;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACE,uDACE,oBAAC,MAAD;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EADF,eAEE,oBAAC,MAAD;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,gBACG,oBAAC,KAAD;EAAO,KAAK,MAAZ;EAAa,IAAI,EAAC,GAAlB;EAAsB,SAAS,EAAEV,MAAjC;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EADH,eAEE,oBAAC,KAAD;EAAO,MAAM,EAAE,mBAAM;IAAI,SAAS,EAAC,WAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBAArB;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;AAAA,EAFF,CAFF,CADF,CADF;AAaJ,eAAec,GAAf"},"metadata":{},"sourceType":"module"}