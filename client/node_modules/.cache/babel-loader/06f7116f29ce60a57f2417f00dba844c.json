{"ast":null,"code":"import{useEffect,useRef}from'react';/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */function useCommittedRef(value){var ref=useRef(value);useEffect(function(){ref.current=value;},[value]);return ref;}export default useCommittedRef;","map":{"version":3,"names":["useEffect","useRef","useCommittedRef","value","ref","current"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/@restart/hooks/esm/useCommittedRef.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASC,gBAAT,CAAyBC,KAAzB,CAAgC,CAC9B,GAAIC,IAAG,CAAGH,MAAM,CAACE,KAAD,CAAhB,CACAH,SAAS,CAAC,UAAY,CACpBI,GAAG,CAACC,OAAJ,CAAcF,KAAd,CACD,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAGA,MAAOC,IAAP,CACD,CAED,cAAeF,gBAAf"},"metadata":{},"sourceType":"module"}