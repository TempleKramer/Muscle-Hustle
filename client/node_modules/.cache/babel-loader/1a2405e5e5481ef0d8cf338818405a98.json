{"ast":null,"code":"import{canUseAsyncIteratorSymbol}from\"../../../utilities/index.js\";export default function readerIterator(reader){var iterator={next:function next(){return reader.read();}};if(canUseAsyncIteratorSymbol){iterator[Symbol.asyncIterator]=function(){return this;};}return iterator;}","map":{"version":3,"mappings":"AAKA,OAASA,yBAAT,KAA0C,6BAA1C,CAOA,cAAc,SAAUC,eAAV,CACZC,MADY,CAC0B,CAEtC,GAAMC,SAAQ,CAAsB,CAClCC,IAAI,iBACF,MAAOF,OAAM,CAACG,IAAP,EAAP,CACD,CAHiC,CAApC,CAMA,GAAIL,yBAAJ,CAA+B,CAC7BG,QAAQ,CAACG,MAAM,CAACC,aAAR,CAAR,CAAiC,WAC/B,MAAO,KAAP,CACD,CAFD,CAGD,CAED,MAAOJ,SAAP,CACD","names":["canUseAsyncIteratorSymbol","readerIterator","reader","iterator","next","read","Symbol","asyncIterator"],"sourceRoot":"","sources":["../../../../src/link/http/iterators/reader.ts"],"sourcesContent":["/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/reader.ts\n */\n\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities\";\n\ninterface ReaderIterator<T> {\n  next(): Promise<ReadableStreamDefaultReadResult<T>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function readerIterator<T>(\n  reader: ReadableStreamDefaultReader<T>\n): AsyncIterableIterator<T> {\n  const iterator: ReaderIterator<T> = {\n    next() {\n      return reader.read();\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n"]},"metadata":{},"sourceType":"module"}