{"ast":null,"code":"import{GraphQLError}from\"../../error/GraphQLError.mjs\";import{Kind}from\"../../language/kinds.mjs\";import{isExecutableDefinitionNode}from\"../../language/predicates.mjs\";/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */export function ExecutableDefinitionsRule(context){return{Document:function Document(node){for(var _i2=0,_node$definitions2=node.definitions;_i2<_node$definitions2.length;_i2++){var definition=_node$definitions2[_i2];if(!isExecutableDefinitionNode(definition)){var defName=definition.kind===Kind.SCHEMA_DEFINITION||definition.kind===Kind.SCHEMA_EXTENSION?'schema':'\"'+definition.name.value+'\"';context.reportError(new GraphQLError(\"The \".concat(defName,\" definition is not executable.\"),definition));}}return false;}};}","map":{"version":3,"names":["GraphQLError","Kind","isExecutableDefinitionNode","ExecutableDefinitionsRule","context","Document","node","_i2","_node$definitions2","definitions","length","definition","defName","kind","SCHEMA_DEFINITION","SCHEMA_EXTENSION","name","value","reportError","concat"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/validation/rules/ExecutableDefinitionsRule.mjs"],"sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\nimport { isExecutableDefinitionNode } from \"../../language/predicates.mjs\";\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\nexport function ExecutableDefinitionsRule(context) {\n  return {\n    Document: function Document(node) {\n      for (var _i2 = 0, _node$definitions2 = node.definitions; _i2 < _node$definitions2.length; _i2++) {\n        var definition = _node$definitions2[_i2];\n\n        if (!isExecutableDefinitionNode(definition)) {\n          var defName = definition.kind === Kind.SCHEMA_DEFINITION || definition.kind === Kind.SCHEMA_EXTENSION ? 'schema' : '\"' + definition.name.value + '\"';\n          context.reportError(new GraphQLError(\"The \".concat(defName, \" definition is not executable.\"), definition));\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"],"mappings":"AAAA,OAASA,YAAT,KAA6B,8BAA7B,CACA,OAASC,IAAT,KAAqB,0BAArB,CACA,OAASC,0BAAT,KAA2C,+BAA3C,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASC,0BAAT,CAAmCC,OAAnC,CAA4C,CACjD,MAAO,CACLC,QAAQ,CAAE,QAASA,SAAT,CAAkBC,IAAlB,CAAwB,CAChC,IAAK,GAAIC,IAAG,CAAG,CAAV,CAAaC,kBAAkB,CAAGF,IAAI,CAACG,WAA5C,CAAyDF,GAAG,CAAGC,kBAAkB,CAACE,MAAlF,CAA0FH,GAAG,EAA7F,CAAiG,CAC/F,GAAII,WAAU,CAAGH,kBAAkB,CAACD,GAAD,CAAnC,CAEA,GAAI,CAACL,0BAA0B,CAACS,UAAD,CAA/B,CAA6C,CAC3C,GAAIC,QAAO,CAAGD,UAAU,CAACE,IAAX,GAAoBZ,IAAI,CAACa,iBAAzB,EAA8CH,UAAU,CAACE,IAAX,GAAoBZ,IAAI,CAACc,gBAAvE,CAA0F,QAA1F,CAAqG,IAAMJ,UAAU,CAACK,IAAX,CAAgBC,KAAtB,CAA8B,GAAjJ,CACAb,OAAO,CAACc,WAAR,CAAoB,GAAIlB,aAAJ,CAAiB,OAAOmB,MAAP,CAAcP,OAAd,CAAuB,gCAAvB,CAAjB,CAA2ED,UAA3E,CAApB,EACD,CACF,CAED,MAAO,MAAP,CACD,CAZI,CAAP,CAcD"},"metadata":{},"sourceType":"module"}