{"ast":null,"code":"import getVariation from\"./getVariation.js\";import{variationPlacements,basePlacements,placements as allPlacements}from\"../enums.js\";import detectOverflow from\"./detectOverflow.js\";import getBasePlacement from\"./getBasePlacement.js\";export default function computeAutoPlacement(state,options){if(options===void 0){options={};}var _options=options,placement=_options.placement,boundary=_options.boundary,rootBoundary=_options.rootBoundary,padding=_options.padding,flipVariations=_options.flipVariations,_options$allowedAutoP=_options.allowedAutoPlacements,allowedAutoPlacements=_options$allowedAutoP===void 0?allPlacements:_options$allowedAutoP;var variation=getVariation(placement);var placements=variation?flipVariations?variationPlacements:variationPlacements.filter(function(placement){return getVariation(placement)===variation;}):basePlacements;var allowedPlacements=placements.filter(function(placement){return allowedAutoPlacements.indexOf(placement)>=0;});if(allowedPlacements.length===0){allowedPlacements=placements;if(process.env.NODE_ENV!==\"production\"){console.error(['Popper: The `allowedAutoPlacements` option did not allow any','placements. Ensure the `placement` option matches the variation','of the allowed placements.','For example, \"auto\" cannot be used to allow \"bottom-start\".','Use \"auto-start\" instead.'].join(' '));}}// $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\nvar overflows=allowedPlacements.reduce(function(acc,placement){acc[placement]=detectOverflow(state,{placement:placement,boundary:boundary,rootBoundary:rootBoundary,padding:padding})[getBasePlacement(placement)];return acc;},{});return Object.keys(overflows).sort(function(a,b){return overflows[a]-overflows[b];});}","map":{"version":3,"names":["getVariation","variationPlacements","basePlacements","placements","allPlacements","detectOverflow","getBasePlacement","computeAutoPlacement","state","options","_options","placement","boundary","rootBoundary","padding","flipVariations","_options$allowedAutoP","allowedAutoPlacements","variation","filter","allowedPlacements","indexOf","length","process","env","NODE_ENV","console","error","join","overflows","reduce","acc","Object","keys","sort","a","b"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js"],"sourcesContent":["import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '));\n    }\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}"],"mappings":"AAAA,MAAOA,aAAP,KAAyB,mBAAzB,CACA,OAASC,mBAAT,CAA8BC,cAA9B,CAA8CC,UAAU,GAAIC,cAA5D,KAAiF,aAAjF,CACA,MAAOC,eAAP,KAA2B,qBAA3B,CACA,MAAOC,iBAAP,KAA6B,uBAA7B,CACA,cAAe,SAASC,qBAAT,CAA8BC,KAA9B,CAAqCC,OAArC,CAA8C,CAC3D,GAAIA,OAAO,GAAK,IAAK,EAArB,CAAwB,CACtBA,OAAO,CAAG,EAAV,CACD,CAED,GAAIC,SAAQ,CAAGD,OAAf,CACIE,SAAS,CAAGD,QAAQ,CAACC,SADzB,CAEIC,QAAQ,CAAGF,QAAQ,CAACE,QAFxB,CAGIC,YAAY,CAAGH,QAAQ,CAACG,YAH5B,CAIIC,OAAO,CAAGJ,QAAQ,CAACI,OAJvB,CAKIC,cAAc,CAAGL,QAAQ,CAACK,cAL9B,CAMIC,qBAAqB,CAAGN,QAAQ,CAACO,qBANrC,CAOIA,qBAAqB,CAAGD,qBAAqB,GAAK,IAAK,EAA/B,CAAmCZ,aAAnC,CAAmDY,qBAP/E,CAQA,GAAIE,UAAS,CAAGlB,YAAY,CAACW,SAAD,CAA5B,CACA,GAAIR,WAAU,CAAGe,SAAS,CAAGH,cAAc,CAAGd,mBAAH,CAAyBA,mBAAmB,CAACkB,MAApB,CAA2B,SAAUR,SAAV,CAAqB,CAClH,MAAOX,aAAY,CAACW,SAAD,CAAZ,GAA4BO,SAAnC,CACD,CAFmE,CAA1C,CAErBhB,cAFL,CAGA,GAAIkB,kBAAiB,CAAGjB,UAAU,CAACgB,MAAX,CAAkB,SAAUR,SAAV,CAAqB,CAC7D,MAAOM,sBAAqB,CAACI,OAAtB,CAA8BV,SAA9B,GAA4C,CAAnD,CACD,CAFuB,CAAxB,CAIA,GAAIS,iBAAiB,CAACE,MAAlB,GAA6B,CAAjC,CAAoC,CAClCF,iBAAiB,CAAGjB,UAApB,CAEA,GAAIoB,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzCC,OAAO,CAACC,KAAR,CAAc,CAAC,8DAAD,CAAiE,iEAAjE,CAAoI,4BAApI,CAAkK,6DAAlK,CAAiO,2BAAjO,EAA8PC,IAA9P,CAAmQ,GAAnQ,CAAd,EACD,CACF,CAAC;AAGF,GAAIC,UAAS,CAAGT,iBAAiB,CAACU,MAAlB,CAAyB,SAAUC,GAAV,CAAepB,SAAf,CAA0B,CACjEoB,GAAG,CAACpB,SAAD,CAAH,CAAiBN,cAAc,CAACG,KAAD,CAAQ,CACrCG,SAAS,CAAEA,SAD0B,CAErCC,QAAQ,CAAEA,QAF2B,CAGrCC,YAAY,CAAEA,YAHuB,CAIrCC,OAAO,CAAEA,OAJ4B,CAAR,CAAd,CAKdR,gBAAgB,CAACK,SAAD,CALF,CAAjB,CAMA,MAAOoB,IAAP,CACD,CARe,CAQb,EARa,CAAhB,CASA,MAAOC,OAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBK,IAAvB,CAA4B,SAAUC,CAAV,CAAaC,CAAb,CAAgB,CACjD,MAAOP,UAAS,CAACM,CAAD,CAAT,CAAeN,SAAS,CAACO,CAAD,CAA/B,CACD,CAFM,CAAP,CAGD"},"metadata":{},"sourceType":"module"}