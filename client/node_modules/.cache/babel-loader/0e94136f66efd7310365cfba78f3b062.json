{"ast":null,"code":"import{__assign}from\"tslib\";import{compact}from\"./compact.js\";export function mergeOptions(defaults,options){return compact(defaults,options,options.variables&&{variables:__assign(__assign({},defaults&&defaults.variables),options.variables)});}","map":{"version":3,"mappings":"4BAMA,OAASA,OAAT,KAAwB,cAAxB,CAOA,MAAM,SAAUC,aAAV,CAGJC,QAHI,CAIJC,OAJI,CAIiC,CAErC,MAAOH,QAAO,CAACE,QAAD,CAAWC,OAAX,CAAoBA,OAAO,CAACC,SAAR,EAAqB,CACrDA,SAAS,sBACHF,QAAQ,EAAIA,QAAQ,CAACE,SADlB,EAEJD,OAAO,CAACC,SAFJ,CAD4C,CAAzC,CAAd,CAMD","names":["compact","mergeOptions","defaults","options","variables"],"sourceRoot":"","sources":["../../../src/utilities/common/mergeOptions.ts"],"sourcesContent":["import type {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n} from \"../../core\";\n\nimport { compact } from \"./compact\";\n\ntype OptionsUnion<TData, TVariables, TContext> =\n  | WatchQueryOptions<TVariables, TData>\n  | QueryOptions<TVariables, TData>\n  | MutationOptions<TData, TVariables, TContext>;\n\nexport function mergeOptions<\n  TOptions extends OptionsUnion<any, any, any>\n>(\n  defaults: TOptions | Partial<TOptions> | undefined,\n  options: TOptions | Partial<TOptions>,\n): TOptions {\n  return compact(defaults, options, options.variables && {\n    variables: {\n      ...(defaults && defaults.variables),\n      ...options.variables,\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}