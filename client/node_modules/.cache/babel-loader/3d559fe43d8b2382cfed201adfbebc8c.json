{"ast":null,"code":"import{syntaxError}from\"../error/syntaxError.mjs\";import{Token}from\"./ast.mjs\";import{TokenKind}from\"./tokenKind.mjs\";import{dedentBlockStringValue}from\"./blockString.mjs\";/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */export var Lexer=/*#__PURE__*/function(){/**\n   * The previously focused non-ignored token.\n   */ /**\n   * The currently focused non-ignored token.\n   */ /**\n   * The (1-indexed) line containing the current token.\n   */ /**\n   * The character offset at which the current line begins.\n   */function Lexer(source){var startOfFileToken=new Token(TokenKind.SOF,0,0,0,0,null);this.source=source;this.lastToken=startOfFileToken;this.token=startOfFileToken;this.line=1;this.lineStart=0;}/**\n   * Advances the token stream to the next non-ignored token.\n   */var _proto=Lexer.prototype;_proto.advance=function advance(){this.lastToken=this.token;var token=this.token=this.lookahead();return token;}/**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */;_proto.lookahead=function lookahead(){var token=this.token;if(token.kind!==TokenKind.EOF){do{var _token$next;// Note: next is only mutable during parsing, so we cast to allow this.\ntoken=(_token$next=token.next)!==null&&_token$next!==void 0?_token$next:token.next=readToken(this,token);}while(token.kind===TokenKind.COMMENT);}return token;};return Lexer;}();/**\n * @internal\n */export function isPunctuatorTokenKind(kind){return kind===TokenKind.BANG||kind===TokenKind.DOLLAR||kind===TokenKind.AMP||kind===TokenKind.PAREN_L||kind===TokenKind.PAREN_R||kind===TokenKind.SPREAD||kind===TokenKind.COLON||kind===TokenKind.EQUALS||kind===TokenKind.AT||kind===TokenKind.BRACKET_L||kind===TokenKind.BRACKET_R||kind===TokenKind.BRACE_L||kind===TokenKind.PIPE||kind===TokenKind.BRACE_R;}function printCharCode(code){return(// NaN/undefined represents access beyond the end of the file.\nisNaN(code)?TokenKind.EOF:// Trust JSON for ASCII.\ncode<0x007f?JSON.stringify(String.fromCharCode(code)):// Otherwise print the escaped form.\n\"\\\"\\\\u\".concat(('00'+code.toString(16).toUpperCase()).slice(-4),\"\\\"\"));}/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */function readToken(lexer,prev){var source=lexer.source;var body=source.body;var bodyLength=body.length;var pos=prev.end;while(pos<bodyLength){var code=body.charCodeAt(pos);var _line=lexer.line;var _col=1+pos-lexer.lineStart;// SourceCharacter\nswitch(code){case 0xfeff:// <BOM>\ncase 9://   \\t\ncase 32://  <space>\ncase 44://  ,\n++pos;continue;case 10://  \\n\n++pos;++lexer.line;lexer.lineStart=pos;continue;case 13://  \\r\nif(body.charCodeAt(pos+1)===10){pos+=2;}else{++pos;}++lexer.line;lexer.lineStart=pos;continue;case 33://  !\nreturn new Token(TokenKind.BANG,pos,pos+1,_line,_col,prev);case 35://  #\nreturn readComment(source,pos,_line,_col,prev);case 36://  $\nreturn new Token(TokenKind.DOLLAR,pos,pos+1,_line,_col,prev);case 38://  &\nreturn new Token(TokenKind.AMP,pos,pos+1,_line,_col,prev);case 40://  (\nreturn new Token(TokenKind.PAREN_L,pos,pos+1,_line,_col,prev);case 41://  )\nreturn new Token(TokenKind.PAREN_R,pos,pos+1,_line,_col,prev);case 46://  .\nif(body.charCodeAt(pos+1)===46&&body.charCodeAt(pos+2)===46){return new Token(TokenKind.SPREAD,pos,pos+3,_line,_col,prev);}break;case 58://  :\nreturn new Token(TokenKind.COLON,pos,pos+1,_line,_col,prev);case 61://  =\nreturn new Token(TokenKind.EQUALS,pos,pos+1,_line,_col,prev);case 64://  @\nreturn new Token(TokenKind.AT,pos,pos+1,_line,_col,prev);case 91://  [\nreturn new Token(TokenKind.BRACKET_L,pos,pos+1,_line,_col,prev);case 93://  ]\nreturn new Token(TokenKind.BRACKET_R,pos,pos+1,_line,_col,prev);case 123:// {\nreturn new Token(TokenKind.BRACE_L,pos,pos+1,_line,_col,prev);case 124:// |\nreturn new Token(TokenKind.PIPE,pos,pos+1,_line,_col,prev);case 125:// }\nreturn new Token(TokenKind.BRACE_R,pos,pos+1,_line,_col,prev);case 34://  \"\nif(body.charCodeAt(pos+1)===34&&body.charCodeAt(pos+2)===34){return readBlockString(source,pos,_line,_col,prev,lexer);}return readString(source,pos,_line,_col,prev);case 45://  -\ncase 48://  0\ncase 49://  1\ncase 50://  2\ncase 51://  3\ncase 52://  4\ncase 53://  5\ncase 54://  6\ncase 55://  7\ncase 56://  8\ncase 57://  9\nreturn readNumber(source,pos,code,_line,_col,prev);case 65://  A\ncase 66://  B\ncase 67://  C\ncase 68://  D\ncase 69://  E\ncase 70://  F\ncase 71://  G\ncase 72://  H\ncase 73://  I\ncase 74://  J\ncase 75://  K\ncase 76://  L\ncase 77://  M\ncase 78://  N\ncase 79://  O\ncase 80://  P\ncase 81://  Q\ncase 82://  R\ncase 83://  S\ncase 84://  T\ncase 85://  U\ncase 86://  V\ncase 87://  W\ncase 88://  X\ncase 89://  Y\ncase 90://  Z\ncase 95://  _\ncase 97://  a\ncase 98://  b\ncase 99://  c\ncase 100:// d\ncase 101:// e\ncase 102:// f\ncase 103:// g\ncase 104:// h\ncase 105:// i\ncase 106:// j\ncase 107:// k\ncase 108:// l\ncase 109:// m\ncase 110:// n\ncase 111:// o\ncase 112:// p\ncase 113:// q\ncase 114:// r\ncase 115:// s\ncase 116:// t\ncase 117:// u\ncase 118:// v\ncase 119:// w\ncase 120:// x\ncase 121:// y\ncase 122:// z\nreturn readName(source,pos,_line,_col,prev);}throw syntaxError(source,pos,unexpectedCharacterMessage(code));}var line=lexer.line;var col=1+pos-lexer.lineStart;return new Token(TokenKind.EOF,bodyLength,bodyLength,line,col,prev);}/**\n * Report a message that an unexpected character was encountered.\n */function unexpectedCharacterMessage(code){if(code<0x0020&&code!==0x0009&&code!==0x000a&&code!==0x000d){return\"Cannot contain the invalid character \".concat(printCharCode(code),\".\");}if(code===39){// '\nreturn'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';}return\"Cannot parse the unexpected character \".concat(printCharCode(code),\".\");}/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */function readComment(source,start,line,col,prev){var body=source.body;var code;var position=start;do{code=body.charCodeAt(++position);}while(!isNaN(code)&&(// SourceCharacter but not LineTerminator\ncode>0x001f||code===0x0009));return new Token(TokenKind.COMMENT,start,position,line,col,prev,body.slice(start+1,position));}/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */function readNumber(source,start,firstCode,line,col,prev){var body=source.body;var code=firstCode;var position=start;var isFloat=false;if(code===45){// -\ncode=body.charCodeAt(++position);}if(code===48){// 0\ncode=body.charCodeAt(++position);if(code>=48&&code<=57){throw syntaxError(source,position,\"Invalid number, unexpected digit after 0: \".concat(printCharCode(code),\".\"));}}else{position=readDigits(source,position,code);code=body.charCodeAt(position);}if(code===46){// .\nisFloat=true;code=body.charCodeAt(++position);position=readDigits(source,position,code);code=body.charCodeAt(position);}if(code===69||code===101){// E e\nisFloat=true;code=body.charCodeAt(++position);if(code===43||code===45){// + -\ncode=body.charCodeAt(++position);}position=readDigits(source,position,code);code=body.charCodeAt(position);}// Numbers cannot be followed by . or NameStart\nif(code===46||isNameStart(code)){throw syntaxError(source,position,\"Invalid number, expected digit but got: \".concat(printCharCode(code),\".\"));}return new Token(isFloat?TokenKind.FLOAT:TokenKind.INT,start,position,line,col,prev,body.slice(start,position));}/**\n * Returns the new position in the source after reading digits.\n */function readDigits(source,start,firstCode){var body=source.body;var position=start;var code=firstCode;if(code>=48&&code<=57){// 0 - 9\ndo{code=body.charCodeAt(++position);}while(code>=48&&code<=57);// 0 - 9\nreturn position;}throw syntaxError(source,position,\"Invalid number, expected digit but got: \".concat(printCharCode(code),\".\"));}/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */function readString(source,start,line,col,prev){var body=source.body;var position=start+1;var chunkStart=position;var code=0;var value='';while(position<body.length&&!isNaN(code=body.charCodeAt(position))&&// not LineTerminator\ncode!==0x000a&&code!==0x000d){// Closing Quote (\")\nif(code===34){value+=body.slice(chunkStart,position);return new Token(TokenKind.STRING,start,position+1,line,col,prev,value);}// SourceCharacter\nif(code<0x0020&&code!==0x0009){throw syntaxError(source,position,\"Invalid character within String: \".concat(printCharCode(code),\".\"));}++position;if(code===92){// \\\nvalue+=body.slice(chunkStart,position-1);code=body.charCodeAt(position);switch(code){case 34:value+='\"';break;case 47:value+='/';break;case 92:value+='\\\\';break;case 98:value+='\\b';break;case 102:value+='\\f';break;case 110:value+='\\n';break;case 114:value+='\\r';break;case 116:value+='\\t';break;case 117:{// uXXXX\nvar charCode=uniCharCode(body.charCodeAt(position+1),body.charCodeAt(position+2),body.charCodeAt(position+3),body.charCodeAt(position+4));if(charCode<0){var invalidSequence=body.slice(position+1,position+5);throw syntaxError(source,position,\"Invalid character escape sequence: \\\\u\".concat(invalidSequence,\".\"));}value+=String.fromCharCode(charCode);position+=4;break;}default:throw syntaxError(source,position,\"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code),\".\"));}++position;chunkStart=position;}}throw syntaxError(source,position,'Unterminated string.');}/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */function readBlockString(source,start,line,col,prev,lexer){var body=source.body;var position=start+3;var chunkStart=position;var code=0;var rawValue='';while(position<body.length&&!isNaN(code=body.charCodeAt(position))){// Closing Triple-Quote (\"\"\")\nif(code===34&&body.charCodeAt(position+1)===34&&body.charCodeAt(position+2)===34){rawValue+=body.slice(chunkStart,position);return new Token(TokenKind.BLOCK_STRING,start,position+3,line,col,prev,dedentBlockStringValue(rawValue));}// SourceCharacter\nif(code<0x0020&&code!==0x0009&&code!==0x000a&&code!==0x000d){throw syntaxError(source,position,\"Invalid character within String: \".concat(printCharCode(code),\".\"));}if(code===10){// new line\n++position;++lexer.line;lexer.lineStart=position;}else if(code===13){// carriage return\nif(body.charCodeAt(position+1)===10){position+=2;}else{++position;}++lexer.line;lexer.lineStart=position;}else if(// Escape Triple-Quote (\\\"\"\")\ncode===92&&body.charCodeAt(position+1)===34&&body.charCodeAt(position+2)===34&&body.charCodeAt(position+3)===34){rawValue+=body.slice(chunkStart,position)+'\"\"\"';position+=4;chunkStart=position;}else{++position;}}throw syntaxError(source,position,'Unterminated string.');}/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */function uniCharCode(a,b,c,d){return char2hex(a)<<12|char2hex(b)<<8|char2hex(c)<<4|char2hex(d);}/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */function char2hex(a){return a>=48&&a<=57?a-48// 0-9\n:a>=65&&a<=70?a-55// A-F\n:a>=97&&a<=102?a-87// a-f\n:-1;}/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */function readName(source,start,line,col,prev){var body=source.body;var bodyLength=body.length;var position=start+1;var code=0;while(position!==bodyLength&&!isNaN(code=body.charCodeAt(position))&&(code===95||// _\ncode>=48&&code<=57||// 0-9\ncode>=65&&code<=90||// A-Z\ncode>=97&&code<=122)// a-z\n){++position;}return new Token(TokenKind.NAME,start,position,line,col,prev,body.slice(start,position));}// _ A-Z a-z\nfunction isNameStart(code){return code===95||code>=65&&code<=90||code>=97&&code<=122;}","map":{"version":3,"names":["syntaxError","Token","TokenKind","dedentBlockStringValue","Lexer","source","startOfFileToken","SOF","lastToken","token","line","lineStart","_proto","prototype","advance","lookahead","kind","EOF","_token$next","next","readToken","COMMENT","isPunctuatorTokenKind","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","printCharCode","code","isNaN","JSON","stringify","String","fromCharCode","concat","toString","toUpperCase","slice","lexer","prev","body","bodyLength","length","pos","end","charCodeAt","_line","_col","readComment","readBlockString","readString","readNumber","readName","unexpectedCharacterMessage","col","start","position","firstCode","isFloat","readDigits","isNameStart","FLOAT","INT","chunkStart","value","STRING","charCode","uniCharCode","invalidSequence","rawValue","BLOCK_STRING","a","b","c","d","char2hex","NAME"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/language/lexer.mjs"],"sourcesContent":["import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = prev.end;\n\n  while (pos < bodyLength) {\n    var code = body.charCodeAt(pos);\n    var _line = lexer.line;\n\n    var _col = 1 + pos - lexer.lineStart; // SourceCharacter\n\n\n    switch (code) {\n      case 0xfeff: // <BOM>\n\n      case 9: //   \\t\n\n      case 32: //  <space>\n\n      case 44:\n        //  ,\n        ++pos;\n        continue;\n\n      case 10:\n        //  \\n\n        ++pos;\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 13:\n        //  \\r\n        if (body.charCodeAt(pos + 1) === 10) {\n          pos += 2;\n        } else {\n          ++pos;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 33:\n        //  !\n        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);\n\n      case 35:\n        //  #\n        return readComment(source, pos, _line, _col, prev);\n\n      case 36:\n        //  $\n        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);\n\n      case 38:\n        //  &\n        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);\n\n      case 40:\n        //  (\n        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);\n\n      case 41:\n        //  )\n        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);\n\n      case 46:\n        //  .\n        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);\n        }\n\n        break;\n\n      case 58:\n        //  :\n        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);\n\n      case 61:\n        //  =\n        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);\n\n      case 64:\n        //  @\n        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);\n\n      case 91:\n        //  [\n        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);\n\n      case 93:\n        //  ]\n        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);\n\n      case 123:\n        // {\n        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);\n\n      case 124:\n        // |\n        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);\n\n      case 125:\n        // }\n        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);\n\n      case 34:\n        //  \"\n        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n          return readBlockString(source, pos, _line, _col, prev, lexer);\n        }\n\n        return readString(source, pos, _line, _col, prev);\n\n      case 45: //  -\n\n      case 48: //  0\n\n      case 49: //  1\n\n      case 50: //  2\n\n      case 51: //  3\n\n      case 52: //  4\n\n      case 53: //  5\n\n      case 54: //  6\n\n      case 55: //  7\n\n      case 56: //  8\n\n      case 57:\n        //  9\n        return readNumber(source, pos, code, _line, _col, prev);\n\n      case 65: //  A\n\n      case 66: //  B\n\n      case 67: //  C\n\n      case 68: //  D\n\n      case 69: //  E\n\n      case 70: //  F\n\n      case 71: //  G\n\n      case 72: //  H\n\n      case 73: //  I\n\n      case 74: //  J\n\n      case 75: //  K\n\n      case 76: //  L\n\n      case 77: //  M\n\n      case 78: //  N\n\n      case 79: //  O\n\n      case 80: //  P\n\n      case 81: //  Q\n\n      case 82: //  R\n\n      case 83: //  S\n\n      case 84: //  T\n\n      case 85: //  U\n\n      case 86: //  V\n\n      case 87: //  W\n\n      case 88: //  X\n\n      case 89: //  Y\n\n      case 90: //  Z\n\n      case 95: //  _\n\n      case 97: //  a\n\n      case 98: //  b\n\n      case 99: //  c\n\n      case 100: // d\n\n      case 101: // e\n\n      case 102: // f\n\n      case 103: // g\n\n      case 104: // h\n\n      case 105: // i\n\n      case 106: // j\n\n      case 107: // k\n\n      case 108: // l\n\n      case 109: // m\n\n      case 110: // n\n\n      case 111: // o\n\n      case 112: // p\n\n      case 113: // q\n\n      case 114: // r\n\n      case 115: // s\n\n      case 116: // t\n\n      case 117: // u\n\n      case 118: // v\n\n      case 119: // w\n\n      case 120: // x\n\n      case 121: // y\n\n      case 122:\n        // z\n        return readName(source, pos, _line, _col, prev);\n    }\n\n    throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n  }\n\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}