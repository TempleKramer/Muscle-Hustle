{"ast":null,"code":"import\"../../utilities/globals/index.js\";export{parseAndCheckHttpResponse}from\"./parseAndCheckHttpResponse.js\";export{serializeFetchParameter}from\"./serializeFetchParameter.js\";export{fallbackHttpConfig,defaultPrinter,selectHttpOptionsAndBody,selectHttpOptionsAndBodyInternal}from\"./selectHttpOptionsAndBody.js\";export{checkFetcher}from\"./checkFetcher.js\";export{createSignalIfSupported}from\"./createSignalIfSupported.js\";export{selectURI}from\"./selectURI.js\";export{createHttpLink}from\"./createHttpLink.js\";export{HttpLink}from\"./HttpLink.js\";export{rewriteURIForGET}from\"./rewriteURIForGET.js\";","map":{"version":3,"mappings":"AAAA,MAAO,kCAAP,CAEA,OACEA,yBADF,KAGO,gCAHP,CAIA,OACEC,uBADF,KAGO,8BAHP,CAIA,OAEEC,kBAFF,CAGEC,cAHF,CAIEC,wBAJF,CAKEC,gCALF,KAOO,+BAPP,CAQA,OAASC,YAAT,KAA6B,mBAA7B,CACA,OAASC,uBAAT,KAAwC,8BAAxC,CACA,OAASC,SAAT,KAA0B,gBAA1B,CACA,OAASC,cAAT,KAA+B,qBAA/B,CACA,OAASC,QAAT,KAAyB,eAAzB,CACA,OAASC,gBAAT,KAAiC,uBAAjC","names":["parseAndCheckHttpResponse","serializeFetchParameter","fallbackHttpConfig","defaultPrinter","selectHttpOptionsAndBody","selectHttpOptionsAndBodyInternal","checkFetcher","createSignalIfSupported","selectURI","createHttpLink","HttpLink","rewriteURIForGET"],"sourceRoot":"","sources":["../../../src/link/http/index.ts"],"sourcesContent":["import '../../utilities/globals';\n\nexport {\n  parseAndCheckHttpResponse,\n  ServerParseError\n} from './parseAndCheckHttpResponse';\nexport {\n  serializeFetchParameter,\n  ClientParseError\n} from './serializeFetchParameter';\nexport {\n  HttpOptions,\n  fallbackHttpConfig,\n  defaultPrinter,\n  selectHttpOptionsAndBody,\n  selectHttpOptionsAndBodyInternal, // needed by ../batch-http but not public\n  UriFunction\n} from './selectHttpOptionsAndBody';\nexport { checkFetcher } from './checkFetcher';\nexport { createSignalIfSupported } from './createSignalIfSupported';\nexport { selectURI } from './selectURI';\nexport { createHttpLink } from './createHttpLink';\nexport { HttpLink } from './HttpLink';\nexport { rewriteURIForGET } from './rewriteURIForGET';\n"]},"metadata":{},"sourceType":"module"}