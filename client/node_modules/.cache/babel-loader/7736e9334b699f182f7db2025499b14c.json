{"ast":null,"code":"import{__extends}from\"tslib\";import{InvariantError,invariant}from\"../../utilities/globals/index.js\";import{Observable}from\"../../utilities/index.js\";import{validateOperation,createOperation,transformOperation}from\"../utils/index.js\";function passthrough(op,forward){return forward?forward(op):Observable.of();}function toLink(handler){return typeof handler==='function'?new ApolloLink(handler):handler;}function isTerminating(link){return link.request.length<=1;}var LinkError=function(_super){__extends(LinkError,_super);function LinkError(message,link){var _this=_super.call(this,message)||this;_this.link=link;return _this;}return LinkError;}(Error);var ApolloLink=function(){function ApolloLink(request){if(request)this.request=request;}ApolloLink.empty=function(){return new ApolloLink(function(){return Observable.of();});};ApolloLink.from=function(links){if(links.length===0)return ApolloLink.empty();return links.map(toLink).reduce(function(x,y){return x.concat(y);});};ApolloLink.split=function(test,left,right){var leftLink=toLink(left);var rightLink=toLink(right||new ApolloLink(passthrough));if(isTerminating(leftLink)&&isTerminating(rightLink)){return new ApolloLink(function(operation){return test(operation)?leftLink.request(operation)||Observable.of():rightLink.request(operation)||Observable.of();});}else{return new ApolloLink(function(operation,forward){return test(operation)?leftLink.request(operation,forward)||Observable.of():rightLink.request(operation,forward)||Observable.of();});}};ApolloLink.execute=function(link,operation){return link.request(createOperation(operation.context,transformOperation(validateOperation(operation))))||Observable.of();};ApolloLink.concat=function(first,second){var firstLink=toLink(first);if(isTerminating(firstLink)){__DEV__&&invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\",firstLink));return firstLink;}var nextLink=toLink(second);if(isTerminating(nextLink)){return new ApolloLink(function(operation){return firstLink.request(operation,function(op){return nextLink.request(op)||Observable.of();})||Observable.of();});}else{return new ApolloLink(function(operation,forward){return firstLink.request(operation,function(op){return nextLink.request(op,forward)||Observable.of();})||Observable.of();});}};ApolloLink.prototype.split=function(test,left,right){return this.concat(ApolloLink.split(test,left,right||new ApolloLink(passthrough)));};ApolloLink.prototype.concat=function(next){return ApolloLink.concat(this,next);};ApolloLink.prototype.request=function(operation,forward){throw __DEV__?new InvariantError('request is not implemented'):new InvariantError(21);};ApolloLink.prototype.onError=function(error,observer){if(observer&&observer.error){observer.error(error);return false;}throw error;};ApolloLink.prototype.setOnError=function(fn){this.onError=fn;return this;};return ApolloLink;}();export{ApolloLink};","map":{"version":3,"mappings":"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","names":["InvariantError","invariant","Observable","validateOperation","createOperation","transformOperation","passthrough","op","forward","of","toLink","handler","ApolloLink","isTerminating","link","request","length","__extends","message","_super","_this","Error","links","empty","map","reduce","x","y","concat","test","left","right","leftLink","rightLink","operation","context","first","second","firstLink","__DEV__","LinkError","nextLink","split","next","error","observer","fn","onError"],"sourceRoot":"","sources":["../../../src/link/core/ApolloLink.ts"],"sourcesContent":["import { InvariantError, invariant } from '../../utilities/globals';\n\nimport { Observable, Observer } from '../../utilities';\nimport {\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n  GraphQLRequest\n} from './types';\nimport {\n  validateOperation,\n  createOperation,\n  transformOperation,\n} from '../utils';\n\nfunction passthrough(op: Operation, forward: NextLink) {\n  return (forward ? forward(op) : Observable.of()) as Observable<FetchResult>;\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nfunction isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nclass LinkError extends Error {\n  public link?: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport class ApolloLink {\n  public static empty(): ApolloLink {\n    return new ApolloLink(() => Observable.of());\n  }\n\n  public static from(links: (ApolloLink | RequestHandler)[]): ApolloLink {\n    if (links.length === 0) return ApolloLink.empty();\n    return links.map(toLink).reduce((x, y) => x.concat(y)) as ApolloLink;\n  }\n\n  public static split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    const leftLink = toLink(left);\n    const rightLink = toLink(right || new ApolloLink(passthrough));\n\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n      return new ApolloLink(operation => {\n        return test(operation)\n          ? leftLink.request(operation) || Observable.of()\n          : rightLink.request(operation) || Observable.of();\n      });\n    } else {\n      return new ApolloLink((operation, forward) => {\n        return test(operation)\n          ? leftLink.request(operation, forward) || Observable.of()\n          : rightLink.request(operation, forward) || Observable.of();\n      });\n    }\n  }\n\n  public static execute(\n    link: ApolloLink,\n    operation: GraphQLRequest,\n  ): Observable<FetchResult> {\n    return (\n      link.request(\n        createOperation(\n          operation.context,\n          transformOperation(validateOperation(operation)),\n        ),\n      ) || Observable.of()\n    );\n  }\n\n  public static concat(\n    first: ApolloLink | RequestHandler,\n    second: ApolloLink | RequestHandler,\n  ) {\n    const firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n      invariant.warn(\n        new LinkError(\n          `You are calling concat on a terminating link, which will have no effect`,\n          firstLink,\n        ),\n      );\n      return firstLink;\n    }\n    const nextLink = toLink(second);\n\n    if (isTerminating(nextLink)) {\n      return new ApolloLink(\n        operation =>\n          firstLink.request(\n            operation,\n            op => nextLink.request(op) || Observable.of(),\n          ) || Observable.of(),\n      );\n    } else {\n      return new ApolloLink((operation, forward) => {\n        return (\n          firstLink.request(operation, op => {\n            return nextLink.request(op, forward) || Observable.of();\n          }) || Observable.of()\n        );\n      });\n    }\n  }\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    return this.concat(\n      ApolloLink.split(test, left, right || new ApolloLink(passthrough))\n    );\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return ApolloLink.concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new InvariantError('request is not implemented');\n  }\n\n  protected onError(\n    error: any,\n    observer?: Observer<FetchResult>,\n  ): false | void {\n    if (observer && observer.error) {\n      observer.error(error);\n      // Returning false indicates that observer.error does not need to be\n      // called again, since it was already called (on the previous line).\n      // Calling observer.error again would not cause any real problems,\n      // since only the first call matters, but custom onError functions\n      // might have other reasons for wanting to prevent the default\n      // behavior by returning false.\n      return false;\n    }\n    // Throw errors will be passed to observer.error.\n    throw error;\n  }\n\n  public setOnError(fn: ApolloLink[\"onError\"]): this {\n    this.onError = fn;\n    return this;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}