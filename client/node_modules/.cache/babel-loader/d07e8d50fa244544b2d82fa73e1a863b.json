{"ast":null,"code":"export var throwServerError=function throwServerError(response,result,message){var error=new Error(message);error.name='ServerError';error.response=response;error.statusCode=response.status;error.result=result;throw error;};","map":{"version":3,"mappings":"AAMA,MAAO,IAAMA,iBAAgB,CAAG,QAAnBA,iBAAmB,CAC9BC,QAD8B,CAE9BC,MAF8B,CAG9BC,OAH8B,CAGf,CAEf,GAAMC,MAAK,CAAG,GAAIC,MAAJ,CAAUF,OAAV,CAAd,CACAC,KAAK,CAACE,IAAN,CAAa,aAAb,CACAF,KAAK,CAACH,QAAN,CAAiBA,QAAjB,CACAG,KAAK,CAACG,UAAN,CAAmBN,QAAQ,CAACO,MAA5B,CACAJ,KAAK,CAACF,MAAN,CAAeA,MAAf,CACA,KAAME,MAAN,CACD,CAXM","names":["throwServerError","response","result","message","error","Error","name","statusCode","status"],"sourceRoot":"","sources":["../../../src/link/utils/throwServerError.ts"],"sourcesContent":["export type ServerError = Error & {\n  response: Response;\n  result: Record<string, any>;\n  statusCode: number;\n};\n\nexport const throwServerError = (\n  response: Response,\n  result: any,\n  message: string\n) => {\n  const error = new Error(message) as ServerError;\n  error.name = 'ServerError';\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n  throw error;\n};\n"]},"metadata":{},"sourceType":"module"}