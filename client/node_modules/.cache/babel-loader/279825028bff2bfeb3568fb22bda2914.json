{"ast":null,"code":"import{InvariantError}from\"../../utilities/globals/index.js\";export var checkFetcher=function checkFetcher(fetcher){if(!fetcher&&typeof fetch==='undefined'){throw __DEV__?new InvariantError(\"\\n\\\"fetch\\\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\\n\\nimport fetch from 'cross-fetch';\\nimport { ApolloClient, HttpLink } from '@apollo/client';\\nconst client = new ApolloClient({\\n  link: new HttpLink({ uri: '/graphql', fetch })\\n});\\n    \"):new InvariantError(22);}};","map":{"version":3,"mappings":"AAAA,OAASA,cAAT,KAA+B,kCAA/B,CAEA,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAe,CAACC,OAAD,CAAwD,CAClF,GAAI,CAACA,OAAD,EAAY,MAAOC,MAAP,GAAiB,WAAjC,CAA8C,CAC5C,KAAMC,QAAI,oBAAe,obAAf,EAWP,sBAXH,CAYD,CACF,CAfM","names":["InvariantError","checkFetcher","fetcher","fetch","__DEV__"],"sourceRoot":"","sources":["../../../src/link/http/checkFetcher.ts"],"sourcesContent":["import { InvariantError } from '../../utilities/globals';\n\nexport const checkFetcher = (fetcher: WindowOrWorkerGlobalScope['fetch'] | undefined) => {\n  if (!fetcher && typeof fetch === 'undefined') {\n    throw new InvariantError(`\n\"fetch\" has not been found globally and no fetcher has been \\\nconfigured. To fix this, install a fetch package (like \\\nhttps://www.npmjs.com/package/cross-fetch), instantiate the \\\nfetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    `);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}