{"ast":null,"code":"import global from\"./global.js\";import{maybe}from\"./maybe.js\";var __=\"__\";var GLOBAL_KEY=[__,__].join(\"DEV\");function getDEV(){try{return Boolean(__DEV__);}catch(_a){Object.defineProperty(global,GLOBAL_KEY,{value:maybe(function(){return process.env.NODE_ENV;})!==\"production\",enumerable:false,configurable:true,writable:true});return global[GLOBAL_KEY];}}export default getDEV();","map":{"version":3,"mappings":"AAAA,MAAOA,OAAP,KAAmB,aAAnB,CACA,OAASC,KAAT,KAAsB,YAAtB,CAKA,GAAMC,GAAE,CAAG,IAAX,CACA,GAAMC,WAAU,CAAG,CAACD,EAAD,CAAKA,EAAL,EAASE,IAAT,CAAc,KAAd,CAAnB,CAEA,QAASC,OAAT,EAAe,CACb,GAAI,CACF,MAAOC,QAAO,CAACC,OAAD,CAAd,CACD,CAAC,SAAM,CACNC,MAAM,CAACC,cAAP,CAAsBT,MAAtB,CAA8BG,UAA9B,CAA0C,CAIxCO,KAAK,CAAET,KAAK,CAAC,WAAM,cAAO,CAACU,GAAR,CAAYC,QAAZ,CAAoB,CAA3B,CAAL,GAAsC,YAJL,CAKxCC,UAAU,CAAE,KAL4B,CAMxCC,YAAY,CAAE,IAN0B,CAOxCC,QAAQ,CAAE,IAP8B,CAA1C,EAWA,MAAQf,OAAc,CAACG,UAAD,CAAtB,CACD,CACF,CAED,cAAeE,OAAM,EAArB","names":["global","maybe","__","GLOBAL_KEY","join","getDEV","Boolean","__DEV__","Object","defineProperty","value","env","NODE_ENV","enumerable","configurable","writable"],"sourceRoot":"","sources":["../../../src/utilities/globals/DEV.ts"],"sourcesContent":["import global from \"./global\";\nimport { maybe } from \"./maybe\";\n\n// To keep string-based find/replace minifiers from messing with __DEV__ inside\n// string literals or properties like global.__DEV__, we construct the \"__DEV__\"\n// string in a roundabout way that won't be altered by find/replace strategies.\nconst __ = \"__\";\nconst GLOBAL_KEY = [__, __].join(\"DEV\");\n\nfunction getDEV() {\n  try {\n    return Boolean(__DEV__);\n  } catch {\n    Object.defineProperty(global, GLOBAL_KEY, {\n      // In a buildless browser environment, maybe(() => process.env.NODE_ENV)\n      // evaluates as undefined, so __DEV__ becomes true by default, but can be\n      // initialized to false instead by a script/module that runs earlier.\n      value: maybe(() => process.env.NODE_ENV) !== \"production\",\n      enumerable: false,\n      configurable: true,\n      writable: true,\n    });\n    // Using computed property access rather than global.__DEV__ here prevents\n    // string-based find/replace strategies from munging this to global.false:\n    return (global as any)[GLOBAL_KEY];\n  }\n}\n\nexport default getDEV();\n"]},"metadata":{},"sourceType":"module"}