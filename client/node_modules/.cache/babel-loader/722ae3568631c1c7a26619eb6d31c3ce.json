{"ast":null,"code":"import invariant from\"../../../jsutils/invariant.mjs\";import{GraphQLError}from\"../../../error/GraphQLError.mjs\";import{getNamedType,isInputObjectType}from\"../../../type/definition.mjs\";/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */export function NoDeprecatedCustomRule(context){return{Field:function Field(node){var fieldDef=context.getFieldDef();var deprecationReason=fieldDef===null||fieldDef===void 0?void 0:fieldDef.deprecationReason;if(fieldDef&&deprecationReason!=null){var parentType=context.getParentType();parentType!=null||invariant(0);context.reportError(new GraphQLError(\"The field \".concat(parentType.name,\".\").concat(fieldDef.name,\" is deprecated. \").concat(deprecationReason),node));}},Argument:function Argument(node){var argDef=context.getArgument();var deprecationReason=argDef===null||argDef===void 0?void 0:argDef.deprecationReason;if(argDef&&deprecationReason!=null){var directiveDef=context.getDirective();if(directiveDef!=null){context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveDef.name,\"\\\" argument \\\"\").concat(argDef.name,\"\\\" is deprecated. \").concat(deprecationReason),node));}else{var parentType=context.getParentType();var fieldDef=context.getFieldDef();parentType!=null&&fieldDef!=null||invariant(0);context.reportError(new GraphQLError(\"Field \\\"\".concat(parentType.name,\".\").concat(fieldDef.name,\"\\\" argument \\\"\").concat(argDef.name,\"\\\" is deprecated. \").concat(deprecationReason),node));}}},ObjectField:function ObjectField(node){var inputObjectDef=getNamedType(context.getParentInputType());if(isInputObjectType(inputObjectDef)){var inputFieldDef=inputObjectDef.getFields()[node.name.value];// flowlint-next-line unnecessary-optional-chain:off\nvar deprecationReason=inputFieldDef===null||inputFieldDef===void 0?void 0:inputFieldDef.deprecationReason;if(deprecationReason!=null){context.reportError(new GraphQLError(\"The input field \".concat(inputObjectDef.name,\".\").concat(inputFieldDef.name,\" is deprecated. \").concat(deprecationReason),node));}}},EnumValue:function EnumValue(node){var enumValueDef=context.getEnumValue();var deprecationReason=enumValueDef===null||enumValueDef===void 0?void 0:enumValueDef.deprecationReason;if(enumValueDef&&deprecationReason!=null){var enumTypeDef=getNamedType(context.getInputType());enumTypeDef!=null||invariant(0);context.reportError(new GraphQLError(\"The enum value \\\"\".concat(enumTypeDef.name,\".\").concat(enumValueDef.name,\"\\\" is deprecated. \").concat(deprecationReason),node));}}};}","map":{"version":3,"names":["invariant","GraphQLError","getNamedType","isInputObjectType","NoDeprecatedCustomRule","context","Field","node","fieldDef","getFieldDef","deprecationReason","parentType","getParentType","reportError","concat","name","Argument","argDef","getArgument","directiveDef","getDirective","ObjectField","inputObjectDef","getParentInputType","inputFieldDef","getFields","value","EnumValue","enumValueDef","getEnumValue","enumTypeDef","getInputType"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs"],"sourcesContent":["import invariant from \"../../../jsutils/invariant.mjs\";\nimport { GraphQLError } from \"../../../error/GraphQLError.mjs\";\nimport { getNamedType, isInputObjectType } from \"../../../type/definition.mjs\";\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field: function Field(node) {\n      var fieldDef = context.getFieldDef();\n      var deprecationReason = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        var parentType = context.getParentType();\n        parentType != null || invariant(0);\n        context.reportError(new GraphQLError(\"The field \".concat(parentType.name, \".\").concat(fieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n      }\n    },\n    Argument: function Argument(node) {\n      var argDef = context.getArgument();\n      var deprecationReason = argDef === null || argDef === void 0 ? void 0 : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        var directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        } else {\n          var parentType = context.getParentType();\n          var fieldDef = context.getFieldDef();\n          parentType != null && fieldDef != null || invariant(0);\n          context.reportError(new GraphQLError(\"Field \\\"\".concat(parentType.name, \".\").concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        var inputFieldDef = inputObjectDef.getFields()[node.name.value]; // flowlint-next-line unnecessary-optional-chain:off\n\n        var deprecationReason = inputFieldDef === null || inputFieldDef === void 0 ? void 0 : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(new GraphQLError(\"The input field \".concat(inputObjectDef.name, \".\").concat(inputFieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var enumValueDef = context.getEnumValue();\n      var deprecationReason = enumValueDef === null || enumValueDef === void 0 ? void 0 : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        var enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(0);\n        context.reportError(new GraphQLError(\"The enum value \\\"\".concat(enumTypeDef.name, \".\").concat(enumValueDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n      }\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}