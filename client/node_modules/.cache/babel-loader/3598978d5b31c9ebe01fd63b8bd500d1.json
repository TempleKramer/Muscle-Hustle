{"ast":null,"code":"import contains from'dom-helpers/contains';import listen from'dom-helpers/listen';import{useCallback,useEffect,useRef}from'react';import useEventCallback from'@restart/hooks/useEventCallback';import warning from'warning';import ownerDocument from'./ownerDocument';var escapeKeyCode=27;var noop=function noop(){};function isLeftClickEvent(event){return event.button===0;}function isModifiedEvent(event){return!!(event.metaKey||event.altKey||event.ctrlKey||event.shiftKey);}var getRefTarget=function getRefTarget(ref){return ref&&('current'in ref?ref.current:ref);};/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */function useRootClose(ref,onRootClose,_temp){var _ref=_temp===void 0?{}:_temp,disabled=_ref.disabled,_ref$clickTrigger=_ref.clickTrigger,clickTrigger=_ref$clickTrigger===void 0?'click':_ref$clickTrigger;var preventMouseRootCloseRef=useRef(false);var onClose=onRootClose||noop;var handleMouseCapture=useCallback(function(e){var currentTarget=getRefTarget(ref);warning(!!currentTarget,'RootClose captured a close event but does not have a ref to compare it to. '+'useRootClose(), should be passed a ref that resolves to a DOM node');preventMouseRootCloseRef.current=!currentTarget||isModifiedEvent(e)||!isLeftClickEvent(e)||!!contains(currentTarget,e.target);},[ref]);var handleMouse=useEventCallback(function(e){if(!preventMouseRootCloseRef.current){onClose(e);}});var handleKeyUp=useEventCallback(function(e){if(e.keyCode===escapeKeyCode){onClose(e);}});useEffect(function(){if(disabled||ref==null)return undefined;var doc=ownerDocument(getRefTarget(ref));// Use capture for this listener so it fires before React's listener, to\n// avoid false positives in the contains() check below if the target DOM\n// element is removed in the React mouse callback.\nvar removeMouseCaptureListener=listen(doc,clickTrigger,handleMouseCapture,true);var removeMouseListener=listen(doc,clickTrigger,handleMouse);var removeKeyupListener=listen(doc,'keyup',handleKeyUp);var mobileSafariHackListeners=[];if('ontouchstart'in doc.documentElement){mobileSafariHackListeners=[].slice.call(doc.body.children).map(function(el){return listen(el,'mousemove',noop);});}return function(){removeMouseCaptureListener();removeMouseListener();removeKeyupListener();mobileSafariHackListeners.forEach(function(remove){return remove();});};},[ref,disabled,clickTrigger,handleMouseCapture,handleMouse,handleKeyUp]);}export default useRootClose;","map":{"version":3,"names":["contains","listen","useCallback","useEffect","useRef","useEventCallback","warning","ownerDocument","escapeKeyCode","noop","isLeftClickEvent","event","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","getRefTarget","ref","current","useRootClose","onRootClose","_temp","_ref","disabled","_ref$clickTrigger","clickTrigger","preventMouseRootCloseRef","onClose","handleMouseCapture","e","currentTarget","target","handleMouse","handleKeyUp","keyCode","undefined","doc","removeMouseCaptureListener","removeMouseListener","removeKeyupListener","mobileSafariHackListeners","documentElement","slice","call","body","children","map","el","forEach","remove"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/react-overlays/esm/useRootClose.js"],"sourcesContent":["import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport ownerDocument from './ownerDocument';\nvar escapeKeyCode = 27;\n\nvar noop = function noop() {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nvar getRefTarget = function getRefTarget(ref) {\n  return ref && ('current' in ref ? ref.current : ref);\n};\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      disabled = _ref.disabled,\n      _ref$clickTrigger = _ref.clickTrigger,\n      clickTrigger = _ref$clickTrigger === void 0 ? 'click' : _ref$clickTrigger;\n\n  var preventMouseRootCloseRef = useRef(false);\n  var onClose = onRootClose || noop;\n  var handleMouseCapture = useCallback(function (e) {\n    var currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'RootClose captured a close event but does not have a ref to compare it to. ' + 'useRootClose(), should be passed a ref that resolves to a DOM node');\n    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target);\n  }, [ref]);\n  var handleMouse = useEventCallback(function (e) {\n    if (!preventMouseRootCloseRef.current) {\n      onClose(e);\n    }\n  });\n  var handleKeyUp = useEventCallback(function (e) {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(function () {\n    if (disabled || ref == null) return undefined;\n    var doc = ownerDocument(getRefTarget(ref)); // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n    var removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    var removeMouseListener = listen(doc, clickTrigger, handleMouse);\n    var removeKeyupListener = listen(doc, 'keyup', handleKeyUp);\n    var mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function (el) {\n        return listen(el, 'mousemove', noop);\n      });\n    }\n\n    return function () {\n      removeMouseCaptureListener();\n      removeMouseListener();\n      removeKeyupListener();\n      mobileSafariHackListeners.forEach(function (remove) {\n        return remove();\n      });\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);\n}\n\nexport default useRootClose;"],"mappings":"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"},"metadata":{},"sourceType":"module"}