{"ast":null,"code":"import{canUseAsyncIteratorSymbol}from\"../../../utilities/index.js\";export default function nodeStreamIterator(stream){var _cleanup=null;var error=null;var done=false;var data=[];var waiting=[];function onData(chunk){if(error)return;if(waiting.length){var shiftedArr=waiting.shift();if(Array.isArray(shiftedArr)&&shiftedArr[0]){return shiftedArr[0]({value:chunk,done:false});}}data.push(chunk);}function onError(err){error=err;var all=waiting.slice();all.forEach(function(pair){pair[1](err);});!_cleanup||_cleanup();}function onEnd(){done=true;var all=waiting.slice();all.forEach(function(pair){pair[0]({value:undefined,done:true});});!_cleanup||_cleanup();}_cleanup=function cleanup(){_cleanup=null;stream.removeListener(\"data\",onData);stream.removeListener(\"error\",onError);stream.removeListener(\"end\",onEnd);stream.removeListener(\"finish\",onEnd);stream.removeListener(\"close\",onEnd);};stream.on(\"data\",onData);stream.on(\"error\",onError);stream.on(\"end\",onEnd);stream.on(\"finish\",onEnd);stream.on(\"close\",onEnd);function getNext(){return new Promise(function(resolve,reject){if(error)return reject(error);if(data.length)return resolve({value:data.shift(),done:false});if(done)return resolve({value:undefined,done:true});waiting.push([resolve,reject]);});}var iterator={next:function next(){return getNext();}};if(canUseAsyncIteratorSymbol){iterator[Symbol.asyncIterator]=function(){return this;};}return iterator;}","map":{"version":3,"mappings":"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","names":["canUseAsyncIteratorSymbol","nodeStreamIterator","stream","cleanup","error","done","data","waiting","onData","chunk","length","shiftedArr","shift","Array","isArray","value","push","onError","err","all","slice","forEach","pair","onEnd","undefined","removeListener","on","getNext","Promise","resolve","reject","iterator","next","Symbol","asyncIterator"],"sourceRoot":"","sources":["../../../../src/link/http/iterators/nodeStream.ts"],"sourcesContent":["/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/nodeStream.ts\n */\n\nimport { Readable as NodeReadableStream } from \"stream\";\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities\";\n\ninterface NodeStreamIterator<T> {\n  next(): Promise<IteratorResult<T, boolean | undefined>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function nodeStreamIterator<T>(\n  stream: NodeReadableStream\n): AsyncIterableIterator<T> {\n  let cleanup: (() => void) | null = null;\n  let error: Error | null = null;\n  let done = false;\n  const data: unknown[] = [];\n\n  const waiting: [\n    (\n      value:\n        | IteratorResult<T, boolean | undefined>\n        | PromiseLike<IteratorResult<T, boolean | undefined>>\n    ) => void,\n    (reason?: any) => void\n  ][] = [];\n\n  function onData(chunk: any) {\n    if (error) return;\n    if (waiting.length) {\n      const shiftedArr = waiting.shift();\n      if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n        return shiftedArr[0]({ value: chunk, done: false });\n      }\n    }\n    data.push(chunk);\n  }\n  function onError(err: Error) {\n    error = err;\n    const all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[1](err);\n    });\n    !cleanup || cleanup();\n  }\n  function onEnd() {\n    done = true;\n    const all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[0]({ value: undefined, done: true });\n    });\n    !cleanup || cleanup();\n  }\n\n  cleanup = function () {\n    cleanup = null;\n    stream.removeListener(\"data\", onData);\n    stream.removeListener(\"error\", onError);\n    stream.removeListener(\"end\", onEnd);\n    stream.removeListener(\"finish\", onEnd);\n    stream.removeListener(\"close\", onEnd);\n  };\n  stream.on(\"data\", onData);\n  stream.on(\"error\", onError);\n  stream.on(\"end\", onEnd);\n  stream.on(\"finish\", onEnd);\n  stream.on(\"close\", onEnd);\n\n  function getNext(): Promise<IteratorResult<T, boolean | undefined>> {\n    return new Promise(function (resolve, reject) {\n      if (error) return reject(error);\n      if (data.length) return resolve({ value: data.shift() as T, done: false });\n      if (done) return resolve({ value: undefined, done: true });\n      waiting.push([resolve, reject]);\n    });\n  }\n\n  const iterator: NodeStreamIterator<T> = {\n    next(): Promise<IteratorResult<T, boolean | undefined>> {\n      return getNext();\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n"]},"metadata":{},"sourceType":"module"}