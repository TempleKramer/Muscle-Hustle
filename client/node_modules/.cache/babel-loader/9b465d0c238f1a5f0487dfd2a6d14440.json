{"ast":null,"code":"function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import objectValues from\"../polyfills/objectValues.mjs\";import keyMap from\"../jsutils/keyMap.mjs\";import inspect from\"../jsutils/inspect.mjs\";import invariant from\"../jsutils/invariant.mjs\";import naturalCompare from\"../jsutils/naturalCompare.mjs\";import{print}from\"../language/printer.mjs\";import{visit}from\"../language/visitor.mjs\";import{isSpecifiedScalarType}from\"../type/scalars.mjs\";import{isScalarType,isObjectType,isInterfaceType,isUnionType,isEnumType,isInputObjectType,isNonNullType,isListType,isNamedType,isRequiredArgument,isRequiredInputField}from\"../type/definition.mjs\";import{astFromValue}from\"./astFromValue.mjs\";export var BreakingChangeType=Object.freeze({TYPE_REMOVED:'TYPE_REMOVED',TYPE_CHANGED_KIND:'TYPE_CHANGED_KIND',TYPE_REMOVED_FROM_UNION:'TYPE_REMOVED_FROM_UNION',VALUE_REMOVED_FROM_ENUM:'VALUE_REMOVED_FROM_ENUM',REQUIRED_INPUT_FIELD_ADDED:'REQUIRED_INPUT_FIELD_ADDED',IMPLEMENTED_INTERFACE_REMOVED:'IMPLEMENTED_INTERFACE_REMOVED',FIELD_REMOVED:'FIELD_REMOVED',FIELD_CHANGED_KIND:'FIELD_CHANGED_KIND',REQUIRED_ARG_ADDED:'REQUIRED_ARG_ADDED',ARG_REMOVED:'ARG_REMOVED',ARG_CHANGED_KIND:'ARG_CHANGED_KIND',DIRECTIVE_REMOVED:'DIRECTIVE_REMOVED',DIRECTIVE_ARG_REMOVED:'DIRECTIVE_ARG_REMOVED',REQUIRED_DIRECTIVE_ARG_ADDED:'REQUIRED_DIRECTIVE_ARG_ADDED',DIRECTIVE_REPEATABLE_REMOVED:'DIRECTIVE_REPEATABLE_REMOVED',DIRECTIVE_LOCATION_REMOVED:'DIRECTIVE_LOCATION_REMOVED'});export var DangerousChangeType=Object.freeze({VALUE_ADDED_TO_ENUM:'VALUE_ADDED_TO_ENUM',TYPE_ADDED_TO_UNION:'TYPE_ADDED_TO_UNION',OPTIONAL_INPUT_FIELD_ADDED:'OPTIONAL_INPUT_FIELD_ADDED',OPTIONAL_ARG_ADDED:'OPTIONAL_ARG_ADDED',IMPLEMENTED_INTERFACE_ADDED:'IMPLEMENTED_INTERFACE_ADDED',ARG_DEFAULT_VALUE_CHANGE:'ARG_DEFAULT_VALUE_CHANGE'});/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */export function findBreakingChanges(oldSchema,newSchema){var breakingChanges=findSchemaChanges(oldSchema,newSchema).filter(function(change){return change.type in BreakingChangeType;});return breakingChanges;}/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */export function findDangerousChanges(oldSchema,newSchema){var dangerousChanges=findSchemaChanges(oldSchema,newSchema).filter(function(change){return change.type in DangerousChangeType;});return dangerousChanges;}function findSchemaChanges(oldSchema,newSchema){return[].concat(findTypeChanges(oldSchema,newSchema),findDirectiveChanges(oldSchema,newSchema));}function findDirectiveChanges(oldSchema,newSchema){var schemaChanges=[];var directivesDiff=diff(oldSchema.getDirectives(),newSchema.getDirectives());for(var _i2=0,_directivesDiff$remov2=directivesDiff.removed;_i2<_directivesDiff$remov2.length;_i2++){var oldDirective=_directivesDiff$remov2[_i2];schemaChanges.push({type:BreakingChangeType.DIRECTIVE_REMOVED,description:\"\".concat(oldDirective.name,\" was removed.\")});}for(var _i4=0,_directivesDiff$persi2=directivesDiff.persisted;_i4<_directivesDiff$persi2.length;_i4++){var _ref2=_directivesDiff$persi2[_i4];var _oldDirective=_ref2[0];var newDirective=_ref2[1];var argsDiff=diff(_oldDirective.args,newDirective.args);for(var _i6=0,_argsDiff$added2=argsDiff.added;_i6<_argsDiff$added2.length;_i6++){var newArg=_argsDiff$added2[_i6];if(isRequiredArgument(newArg)){schemaChanges.push({type:BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,description:\"A required arg \".concat(newArg.name,\" on directive \").concat(_oldDirective.name,\" was added.\")});}}for(var _i8=0,_argsDiff$removed2=argsDiff.removed;_i8<_argsDiff$removed2.length;_i8++){var oldArg=_argsDiff$removed2[_i8];schemaChanges.push({type:BreakingChangeType.DIRECTIVE_ARG_REMOVED,description:\"\".concat(oldArg.name,\" was removed from \").concat(_oldDirective.name,\".\")});}if(_oldDirective.isRepeatable&&!newDirective.isRepeatable){schemaChanges.push({type:BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,description:\"Repeatable flag was removed from \".concat(_oldDirective.name,\".\")});}for(var _i10=0,_oldDirective$locatio2=_oldDirective.locations;_i10<_oldDirective$locatio2.length;_i10++){var location=_oldDirective$locatio2[_i10];if(newDirective.locations.indexOf(location)===-1){schemaChanges.push({type:BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,description:\"\".concat(location,\" was removed from \").concat(_oldDirective.name,\".\")});}}}return schemaChanges;}function findTypeChanges(oldSchema,newSchema){var schemaChanges=[];var typesDiff=diff(objectValues(oldSchema.getTypeMap()),objectValues(newSchema.getTypeMap()));for(var _i12=0,_typesDiff$removed2=typesDiff.removed;_i12<_typesDiff$removed2.length;_i12++){var oldType=_typesDiff$removed2[_i12];schemaChanges.push({type:BreakingChangeType.TYPE_REMOVED,description:isSpecifiedScalarType(oldType)?\"Standard scalar \".concat(oldType.name,\" was removed because it is not referenced anymore.\"):\"\".concat(oldType.name,\" was removed.\")});}for(var _i14=0,_typesDiff$persisted2=typesDiff.persisted;_i14<_typesDiff$persisted2.length;_i14++){var _ref4=_typesDiff$persisted2[_i14];var _oldType=_ref4[0];var newType=_ref4[1];if(isEnumType(_oldType)&&isEnumType(newType)){schemaChanges.push.apply(schemaChanges,findEnumTypeChanges(_oldType,newType));}else if(isUnionType(_oldType)&&isUnionType(newType)){schemaChanges.push.apply(schemaChanges,findUnionTypeChanges(_oldType,newType));}else if(isInputObjectType(_oldType)&&isInputObjectType(newType)){schemaChanges.push.apply(schemaChanges,findInputObjectTypeChanges(_oldType,newType));}else if(isObjectType(_oldType)&&isObjectType(newType)){schemaChanges.push.apply(schemaChanges,findFieldChanges(_oldType,newType).concat(findImplementedInterfacesChanges(_oldType,newType)));}else if(isInterfaceType(_oldType)&&isInterfaceType(newType)){schemaChanges.push.apply(schemaChanges,findFieldChanges(_oldType,newType).concat(findImplementedInterfacesChanges(_oldType,newType)));}else if(_oldType.constructor!==newType.constructor){schemaChanges.push({type:BreakingChangeType.TYPE_CHANGED_KIND,description:\"\".concat(_oldType.name,\" changed from \")+\"\".concat(typeKindName(_oldType),\" to \").concat(typeKindName(newType),\".\")});}}return schemaChanges;}function findInputObjectTypeChanges(oldType,newType){var schemaChanges=[];var fieldsDiff=diff(objectValues(oldType.getFields()),objectValues(newType.getFields()));for(var _i16=0,_fieldsDiff$added2=fieldsDiff.added;_i16<_fieldsDiff$added2.length;_i16++){var newField=_fieldsDiff$added2[_i16];if(isRequiredInputField(newField)){schemaChanges.push({type:BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,description:\"A required field \".concat(newField.name,\" on input type \").concat(oldType.name,\" was added.\")});}else{schemaChanges.push({type:DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,description:\"An optional field \".concat(newField.name,\" on input type \").concat(oldType.name,\" was added.\")});}}for(var _i18=0,_fieldsDiff$removed2=fieldsDiff.removed;_i18<_fieldsDiff$removed2.length;_i18++){var oldField=_fieldsDiff$removed2[_i18];schemaChanges.push({type:BreakingChangeType.FIELD_REMOVED,description:\"\".concat(oldType.name,\".\").concat(oldField.name,\" was removed.\")});}for(var _i20=0,_fieldsDiff$persisted2=fieldsDiff.persisted;_i20<_fieldsDiff$persisted2.length;_i20++){var _ref6=_fieldsDiff$persisted2[_i20];var _oldField=_ref6[0];var _newField=_ref6[1];var isSafe=isChangeSafeForInputObjectFieldOrFieldArg(_oldField.type,_newField.type);if(!isSafe){schemaChanges.push({type:BreakingChangeType.FIELD_CHANGED_KIND,description:\"\".concat(oldType.name,\".\").concat(_oldField.name,\" changed type from \")+\"\".concat(String(_oldField.type),\" to \").concat(String(_newField.type),\".\")});}}return schemaChanges;}function findUnionTypeChanges(oldType,newType){var schemaChanges=[];var possibleTypesDiff=diff(oldType.getTypes(),newType.getTypes());for(var _i22=0,_possibleTypesDiff$ad2=possibleTypesDiff.added;_i22<_possibleTypesDiff$ad2.length;_i22++){var newPossibleType=_possibleTypesDiff$ad2[_i22];schemaChanges.push({type:DangerousChangeType.TYPE_ADDED_TO_UNION,description:\"\".concat(newPossibleType.name,\" was added to union type \").concat(oldType.name,\".\")});}for(var _i24=0,_possibleTypesDiff$re2=possibleTypesDiff.removed;_i24<_possibleTypesDiff$re2.length;_i24++){var oldPossibleType=_possibleTypesDiff$re2[_i24];schemaChanges.push({type:BreakingChangeType.TYPE_REMOVED_FROM_UNION,description:\"\".concat(oldPossibleType.name,\" was removed from union type \").concat(oldType.name,\".\")});}return schemaChanges;}function findEnumTypeChanges(oldType,newType){var schemaChanges=[];var valuesDiff=diff(oldType.getValues(),newType.getValues());for(var _i26=0,_valuesDiff$added2=valuesDiff.added;_i26<_valuesDiff$added2.length;_i26++){var newValue=_valuesDiff$added2[_i26];schemaChanges.push({type:DangerousChangeType.VALUE_ADDED_TO_ENUM,description:\"\".concat(newValue.name,\" was added to enum type \").concat(oldType.name,\".\")});}for(var _i28=0,_valuesDiff$removed2=valuesDiff.removed;_i28<_valuesDiff$removed2.length;_i28++){var oldValue=_valuesDiff$removed2[_i28];schemaChanges.push({type:BreakingChangeType.VALUE_REMOVED_FROM_ENUM,description:\"\".concat(oldValue.name,\" was removed from enum type \").concat(oldType.name,\".\")});}return schemaChanges;}function findImplementedInterfacesChanges(oldType,newType){var schemaChanges=[];var interfacesDiff=diff(oldType.getInterfaces(),newType.getInterfaces());for(var _i30=0,_interfacesDiff$added2=interfacesDiff.added;_i30<_interfacesDiff$added2.length;_i30++){var newInterface=_interfacesDiff$added2[_i30];schemaChanges.push({type:DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,description:\"\".concat(newInterface.name,\" added to interfaces implemented by \").concat(oldType.name,\".\")});}for(var _i32=0,_interfacesDiff$remov2=interfacesDiff.removed;_i32<_interfacesDiff$remov2.length;_i32++){var oldInterface=_interfacesDiff$remov2[_i32];schemaChanges.push({type:BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,description:\"\".concat(oldType.name,\" no longer implements interface \").concat(oldInterface.name,\".\")});}return schemaChanges;}function findFieldChanges(oldType,newType){var schemaChanges=[];var fieldsDiff=diff(objectValues(oldType.getFields()),objectValues(newType.getFields()));for(var _i34=0,_fieldsDiff$removed4=fieldsDiff.removed;_i34<_fieldsDiff$removed4.length;_i34++){var oldField=_fieldsDiff$removed4[_i34];schemaChanges.push({type:BreakingChangeType.FIELD_REMOVED,description:\"\".concat(oldType.name,\".\").concat(oldField.name,\" was removed.\")});}for(var _i36=0,_fieldsDiff$persisted4=fieldsDiff.persisted;_i36<_fieldsDiff$persisted4.length;_i36++){var _ref8=_fieldsDiff$persisted4[_i36];var _oldField2=_ref8[0];var newField=_ref8[1];schemaChanges.push.apply(schemaChanges,findArgChanges(oldType,_oldField2,newField));var isSafe=isChangeSafeForObjectOrInterfaceField(_oldField2.type,newField.type);if(!isSafe){schemaChanges.push({type:BreakingChangeType.FIELD_CHANGED_KIND,description:\"\".concat(oldType.name,\".\").concat(_oldField2.name,\" changed type from \")+\"\".concat(String(_oldField2.type),\" to \").concat(String(newField.type),\".\")});}}return schemaChanges;}function findArgChanges(oldType,oldField,newField){var schemaChanges=[];var argsDiff=diff(oldField.args,newField.args);for(var _i38=0,_argsDiff$removed4=argsDiff.removed;_i38<_argsDiff$removed4.length;_i38++){var oldArg=_argsDiff$removed4[_i38];schemaChanges.push({type:BreakingChangeType.ARG_REMOVED,description:\"\".concat(oldType.name,\".\").concat(oldField.name,\" arg \").concat(oldArg.name,\" was removed.\")});}for(var _i40=0,_argsDiff$persisted2=argsDiff.persisted;_i40<_argsDiff$persisted2.length;_i40++){var _ref10=_argsDiff$persisted2[_i40];var _oldArg=_ref10[0];var newArg=_ref10[1];var isSafe=isChangeSafeForInputObjectFieldOrFieldArg(_oldArg.type,newArg.type);if(!isSafe){schemaChanges.push({type:BreakingChangeType.ARG_CHANGED_KIND,description:\"\".concat(oldType.name,\".\").concat(oldField.name,\" arg \").concat(_oldArg.name,\" has changed type from \")+\"\".concat(String(_oldArg.type),\" to \").concat(String(newArg.type),\".\")});}else if(_oldArg.defaultValue!==undefined){if(newArg.defaultValue===undefined){schemaChanges.push({type:DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,description:\"\".concat(oldType.name,\".\").concat(oldField.name,\" arg \").concat(_oldArg.name,\" defaultValue was removed.\")});}else{// Since we looking only for client's observable changes we should\n// compare default values in the same representation as they are\n// represented inside introspection.\nvar oldValueStr=stringifyValue(_oldArg.defaultValue,_oldArg.type);var newValueStr=stringifyValue(newArg.defaultValue,newArg.type);if(oldValueStr!==newValueStr){schemaChanges.push({type:DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,description:\"\".concat(oldType.name,\".\").concat(oldField.name,\" arg \").concat(_oldArg.name,\" has changed defaultValue from \").concat(oldValueStr,\" to \").concat(newValueStr,\".\")});}}}}for(var _i42=0,_argsDiff$added4=argsDiff.added;_i42<_argsDiff$added4.length;_i42++){var _newArg=_argsDiff$added4[_i42];if(isRequiredArgument(_newArg)){schemaChanges.push({type:BreakingChangeType.REQUIRED_ARG_ADDED,description:\"A required arg \".concat(_newArg.name,\" on \").concat(oldType.name,\".\").concat(oldField.name,\" was added.\")});}else{schemaChanges.push({type:DangerousChangeType.OPTIONAL_ARG_ADDED,description:\"An optional arg \".concat(_newArg.name,\" on \").concat(oldType.name,\".\").concat(oldField.name,\" was added.\")});}}return schemaChanges;}function isChangeSafeForObjectOrInterfaceField(oldType,newType){if(isListType(oldType)){return(// if they're both lists, make sure the underlying types are compatible\nisListType(newType)&&isChangeSafeForObjectOrInterfaceField(oldType.ofType,newType.ofType)||// moving from nullable to non-null of the same underlying type is safe\nisNonNullType(newType)&&isChangeSafeForObjectOrInterfaceField(oldType,newType.ofType));}if(isNonNullType(oldType)){// if they're both non-null, make sure the underlying types are compatible\nreturn isNonNullType(newType)&&isChangeSafeForObjectOrInterfaceField(oldType.ofType,newType.ofType);}return(// if they're both named types, see if their names are equivalent\nisNamedType(newType)&&oldType.name===newType.name||// moving from nullable to non-null of the same underlying type is safe\nisNonNullType(newType)&&isChangeSafeForObjectOrInterfaceField(oldType,newType.ofType));}function isChangeSafeForInputObjectFieldOrFieldArg(oldType,newType){if(isListType(oldType)){// if they're both lists, make sure the underlying types are compatible\nreturn isListType(newType)&&isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType,newType.ofType);}if(isNonNullType(oldType)){return(// if they're both non-null, make sure the underlying types are\n// compatible\nisNonNullType(newType)&&isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType,newType.ofType)||// moving from non-null to nullable of the same underlying type is safe\n!isNonNullType(newType)&&isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType,newType));}// if they're both named types, see if their names are equivalent\nreturn isNamedType(newType)&&oldType.name===newType.name;}function typeKindName(type){if(isScalarType(type)){return'a Scalar type';}if(isObjectType(type)){return'an Object type';}if(isInterfaceType(type)){return'an Interface type';}if(isUnionType(type)){return'a Union type';}if(isEnumType(type)){return'an Enum type';}// istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\nif(isInputObjectType(type)){return'an Input type';}// istanbul ignore next (Not reachable. All possible named types have been considered)\nfalse||invariant(0,'Unexpected type: '+inspect(type));}function stringifyValue(value,type){var ast=astFromValue(value,type);ast!=null||invariant(0);var sortedAST=visit(ast,{ObjectValue:function ObjectValue(objectNode){// Make a copy since sort mutates array\nvar fields=[].concat(objectNode.fields);fields.sort(function(fieldA,fieldB){return naturalCompare(fieldA.name.value,fieldB.name.value);});return _objectSpread(_objectSpread({},objectNode),{},{fields:fields});}});return print(sortedAST);}function diff(oldArray,newArray){var added=[];var removed=[];var persisted=[];var oldMap=keyMap(oldArray,function(_ref11){var name=_ref11.name;return name;});var newMap=keyMap(newArray,function(_ref12){var name=_ref12.name;return name;});for(var _i44=0;_i44<oldArray.length;_i44++){var oldItem=oldArray[_i44];var newItem=newMap[oldItem.name];if(newItem===undefined){removed.push(oldItem);}else{persisted.push([oldItem,newItem]);}}for(var _i46=0;_i46<newArray.length;_i46++){var _newItem=newArray[_i46];if(oldMap[_newItem.name]===undefined){added.push(_newItem);}}return{added:added,persisted:persisted,removed:removed};}","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","objectValues","keyMap","inspect","invariant","naturalCompare","print","visit","isSpecifiedScalarType","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","isNonNullType","isListType","isNamedType","isRequiredArgument","isRequiredInputField","astFromValue","BreakingChangeType","freeze","TYPE_REMOVED","TYPE_CHANGED_KIND","TYPE_REMOVED_FROM_UNION","VALUE_REMOVED_FROM_ENUM","REQUIRED_INPUT_FIELD_ADDED","IMPLEMENTED_INTERFACE_REMOVED","FIELD_REMOVED","FIELD_CHANGED_KIND","REQUIRED_ARG_ADDED","ARG_REMOVED","ARG_CHANGED_KIND","DIRECTIVE_REMOVED","DIRECTIVE_ARG_REMOVED","REQUIRED_DIRECTIVE_ARG_ADDED","DIRECTIVE_REPEATABLE_REMOVED","DIRECTIVE_LOCATION_REMOVED","DangerousChangeType","VALUE_ADDED_TO_ENUM","TYPE_ADDED_TO_UNION","OPTIONAL_INPUT_FIELD_ADDED","OPTIONAL_ARG_ADDED","IMPLEMENTED_INTERFACE_ADDED","ARG_DEFAULT_VALUE_CHANGE","findBreakingChanges","oldSchema","newSchema","breakingChanges","findSchemaChanges","change","type","findDangerousChanges","dangerousChanges","concat","findTypeChanges","findDirectiveChanges","schemaChanges","directivesDiff","diff","getDirectives","_i2","_directivesDiff$remov2","removed","oldDirective","description","name","_i4","_directivesDiff$persi2","persisted","_ref2","_oldDirective","newDirective","argsDiff","args","_i6","_argsDiff$added2","added","newArg","_i8","_argsDiff$removed2","oldArg","isRepeatable","_i10","_oldDirective$locatio2","locations","location","indexOf","typesDiff","getTypeMap","_i12","_typesDiff$removed2","oldType","_i14","_typesDiff$persisted2","_ref4","_oldType","newType","findEnumTypeChanges","findUnionTypeChanges","findInputObjectTypeChanges","findFieldChanges","findImplementedInterfacesChanges","constructor","typeKindName","fieldsDiff","getFields","_i16","_fieldsDiff$added2","newField","_i18","_fieldsDiff$removed2","oldField","_i20","_fieldsDiff$persisted2","_ref6","_oldField","_newField","isSafe","isChangeSafeForInputObjectFieldOrFieldArg","String","possibleTypesDiff","getTypes","_i22","_possibleTypesDiff$ad2","newPossibleType","_i24","_possibleTypesDiff$re2","oldPossibleType","valuesDiff","getValues","_i26","_valuesDiff$added2","newValue","_i28","_valuesDiff$removed2","oldValue","interfacesDiff","getInterfaces","_i30","_interfacesDiff$added2","newInterface","_i32","_interfacesDiff$remov2","oldInterface","_i34","_fieldsDiff$removed4","_i36","_fieldsDiff$persisted4","_ref8","_oldField2","findArgChanges","isChangeSafeForObjectOrInterfaceField","_i38","_argsDiff$removed4","_i40","_argsDiff$persisted2","_ref10","_oldArg","defaultValue","undefined","oldValueStr","stringifyValue","newValueStr","_i42","_argsDiff$added4","_newArg","ofType","ast","sortedAST","ObjectValue","objectNode","fields","sort","fieldA","fieldB","oldArray","newArray","oldMap","_ref11","newMap","_ref12","_i44","oldItem","newItem","_i46","_newItem"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/utilities/findBreakingChanges.mjs"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport objectValues from \"../polyfills/objectValues.mjs\";\nimport keyMap from \"../jsutils/keyMap.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport naturalCompare from \"../jsutils/naturalCompare.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { visit } from \"../language/visitor.mjs\";\nimport { isSpecifiedScalarType } from \"../type/scalars.mjs\";\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isNonNullType, isListType, isNamedType, isRequiredArgument, isRequiredInputField } from \"../type/definition.mjs\";\nimport { astFromValue } from \"./astFromValue.mjs\";\nexport var BreakingChangeType = Object.freeze({\n  TYPE_REMOVED: 'TYPE_REMOVED',\n  TYPE_CHANGED_KIND: 'TYPE_CHANGED_KIND',\n  TYPE_REMOVED_FROM_UNION: 'TYPE_REMOVED_FROM_UNION',\n  VALUE_REMOVED_FROM_ENUM: 'VALUE_REMOVED_FROM_ENUM',\n  REQUIRED_INPUT_FIELD_ADDED: 'REQUIRED_INPUT_FIELD_ADDED',\n  IMPLEMENTED_INTERFACE_REMOVED: 'IMPLEMENTED_INTERFACE_REMOVED',\n  FIELD_REMOVED: 'FIELD_REMOVED',\n  FIELD_CHANGED_KIND: 'FIELD_CHANGED_KIND',\n  REQUIRED_ARG_ADDED: 'REQUIRED_ARG_ADDED',\n  ARG_REMOVED: 'ARG_REMOVED',\n  ARG_CHANGED_KIND: 'ARG_CHANGED_KIND',\n  DIRECTIVE_REMOVED: 'DIRECTIVE_REMOVED',\n  DIRECTIVE_ARG_REMOVED: 'DIRECTIVE_ARG_REMOVED',\n  REQUIRED_DIRECTIVE_ARG_ADDED: 'REQUIRED_DIRECTIVE_ARG_ADDED',\n  DIRECTIVE_REPEATABLE_REMOVED: 'DIRECTIVE_REPEATABLE_REMOVED',\n  DIRECTIVE_LOCATION_REMOVED: 'DIRECTIVE_LOCATION_REMOVED'\n});\nexport var DangerousChangeType = Object.freeze({\n  VALUE_ADDED_TO_ENUM: 'VALUE_ADDED_TO_ENUM',\n  TYPE_ADDED_TO_UNION: 'TYPE_ADDED_TO_UNION',\n  OPTIONAL_INPUT_FIELD_ADDED: 'OPTIONAL_INPUT_FIELD_ADDED',\n  OPTIONAL_ARG_ADDED: 'OPTIONAL_ARG_ADDED',\n  IMPLEMENTED_INTERFACE_ADDED: 'IMPLEMENTED_INTERFACE_ADDED',\n  ARG_DEFAULT_VALUE_CHANGE: 'ARG_DEFAULT_VALUE_CHANGE'\n});\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nexport function findBreakingChanges(oldSchema, newSchema) {\n  var breakingChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in BreakingChangeType;\n  });\n  return breakingChanges;\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nexport function findDangerousChanges(oldSchema, newSchema) {\n  var dangerousChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in DangerousChangeType;\n  });\n  return dangerousChanges;\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [].concat(findTypeChanges(oldSchema, newSchema), findDirectiveChanges(oldSchema, newSchema));\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var directivesDiff = diff(oldSchema.getDirectives(), newSchema.getDirectives());\n\n  for (var _i2 = 0, _directivesDiff$remov2 = directivesDiff.removed; _i2 < _directivesDiff$remov2.length; _i2++) {\n    var oldDirective = _directivesDiff$remov2[_i2];\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: \"\".concat(oldDirective.name, \" was removed.\")\n    });\n  }\n\n  for (var _i4 = 0, _directivesDiff$persi2 = directivesDiff.persisted; _i4 < _directivesDiff$persi2.length; _i4++) {\n    var _ref2 = _directivesDiff$persi2[_i4];\n    var _oldDirective = _ref2[0];\n    var newDirective = _ref2[1];\n    var argsDiff = diff(_oldDirective.args, newDirective.args);\n\n    for (var _i6 = 0, _argsDiff$added2 = argsDiff.added; _i6 < _argsDiff$added2.length; _i6++) {\n      var newArg = _argsDiff$added2[_i6];\n\n      if (isRequiredArgument(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: \"A required arg \".concat(newArg.name, \" on directive \").concat(_oldDirective.name, \" was added.\")\n        });\n      }\n    }\n\n    for (var _i8 = 0, _argsDiff$removed2 = argsDiff.removed; _i8 < _argsDiff$removed2.length; _i8++) {\n      var oldArg = _argsDiff$removed2[_i8];\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: \"\".concat(oldArg.name, \" was removed from \").concat(_oldDirective.name, \".\")\n      });\n    }\n\n    if (_oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: \"Repeatable flag was removed from \".concat(_oldDirective.name, \".\")\n      });\n    }\n\n    for (var _i10 = 0, _oldDirective$locatio2 = _oldDirective.locations; _i10 < _oldDirective$locatio2.length; _i10++) {\n      var location = _oldDirective$locatio2[_i10];\n\n      if (newDirective.locations.indexOf(location) === -1) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: \"\".concat(location, \" was removed from \").concat(_oldDirective.name, \".\")\n        });\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var typesDiff = diff(objectValues(oldSchema.getTypeMap()), objectValues(newSchema.getTypeMap()));\n\n  for (var _i12 = 0, _typesDiff$removed2 = typesDiff.removed; _i12 < _typesDiff$removed2.length; _i12++) {\n    var oldType = _typesDiff$removed2[_i12];\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: isSpecifiedScalarType(oldType) ? \"Standard scalar \".concat(oldType.name, \" was removed because it is not referenced anymore.\") : \"\".concat(oldType.name, \" was removed.\")\n    });\n  }\n\n  for (var _i14 = 0, _typesDiff$persisted2 = typesDiff.persisted; _i14 < _typesDiff$persisted2.length; _i14++) {\n    var _ref4 = _typesDiff$persisted2[_i14];\n    var _oldType = _ref4[0];\n    var newType = _ref4[1];\n\n    if (isEnumType(_oldType) && isEnumType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findEnumTypeChanges(_oldType, newType));\n    } else if (isUnionType(_oldType) && isUnionType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findUnionTypeChanges(_oldType, newType));\n    } else if (isInputObjectType(_oldType) && isInputObjectType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findInputObjectTypeChanges(_oldType, newType));\n    } else if (isObjectType(_oldType) && isObjectType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findFieldChanges(_oldType, newType).concat(findImplementedInterfacesChanges(_oldType, newType)));\n    } else if (isInterfaceType(_oldType) && isInterfaceType(newType)) {\n      schemaChanges.push.apply(schemaChanges, findFieldChanges(_oldType, newType).concat(findImplementedInterfacesChanges(_oldType, newType)));\n    } else if (_oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description: \"\".concat(_oldType.name, \" changed from \") + \"\".concat(typeKindName(_oldType), \" to \").concat(typeKindName(newType), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff(objectValues(oldType.getFields()), objectValues(newType.getFields()));\n\n  for (var _i16 = 0, _fieldsDiff$added2 = fieldsDiff.added; _i16 < _fieldsDiff$added2.length; _i16++) {\n    var newField = _fieldsDiff$added2[_i16];\n\n    if (isRequiredInputField(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: \"A required field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: \"An optional field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n      });\n    }\n  }\n\n  for (var _i18 = 0, _fieldsDiff$removed2 = fieldsDiff.removed; _i18 < _fieldsDiff$removed2.length; _i18++) {\n    var oldField = _fieldsDiff$removed2[_i18];\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n    });\n  }\n\n  for (var _i20 = 0, _fieldsDiff$persisted2 = fieldsDiff.persisted; _i20 < _fieldsDiff$persisted2.length; _i20++) {\n    var _ref6 = _fieldsDiff$persisted2[_i20];\n    var _oldField = _ref6[0];\n    var _newField = _ref6[1];\n    var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldField.type, _newField.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(_oldField.name, \" changed type from \") + \"\".concat(String(_oldField.type), \" to \").concat(String(_newField.type), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n\n  for (var _i22 = 0, _possibleTypesDiff$ad2 = possibleTypesDiff.added; _i22 < _possibleTypesDiff$ad2.length; _i22++) {\n    var newPossibleType = _possibleTypesDiff$ad2[_i22];\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: \"\".concat(newPossibleType.name, \" was added to union type \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i24 = 0, _possibleTypesDiff$re2 = possibleTypesDiff.removed; _i24 < _possibleTypesDiff$re2.length; _i24++) {\n    var oldPossibleType = _possibleTypesDiff$re2[_i24];\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: \"\".concat(oldPossibleType.name, \" was removed from union type \").concat(oldType.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var valuesDiff = diff(oldType.getValues(), newType.getValues());\n\n  for (var _i26 = 0, _valuesDiff$added2 = valuesDiff.added; _i26 < _valuesDiff$added2.length; _i26++) {\n    var newValue = _valuesDiff$added2[_i26];\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: \"\".concat(newValue.name, \" was added to enum type \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i28 = 0, _valuesDiff$removed2 = valuesDiff.removed; _i28 < _valuesDiff$removed2.length; _i28++) {\n    var oldValue = _valuesDiff$removed2[_i28];\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: \"\".concat(oldValue.name, \" was removed from enum type \").concat(oldType.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  var schemaChanges = [];\n  var interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n\n  for (var _i30 = 0, _interfacesDiff$added2 = interfacesDiff.added; _i30 < _interfacesDiff$added2.length; _i30++) {\n    var newInterface = _interfacesDiff$added2[_i30];\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: \"\".concat(newInterface.name, \" added to interfaces implemented by \").concat(oldType.name, \".\")\n    });\n  }\n\n  for (var _i32 = 0, _interfacesDiff$remov2 = interfacesDiff.removed; _i32 < _interfacesDiff$remov2.length; _i32++) {\n    var oldInterface = _interfacesDiff$remov2[_i32];\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: \"\".concat(oldType.name, \" no longer implements interface \").concat(oldInterface.name, \".\")\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff(objectValues(oldType.getFields()), objectValues(newType.getFields()));\n\n  for (var _i34 = 0, _fieldsDiff$removed4 = fieldsDiff.removed; _i34 < _fieldsDiff$removed4.length; _i34++) {\n    var oldField = _fieldsDiff$removed4[_i34];\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n    });\n  }\n\n  for (var _i36 = 0, _fieldsDiff$persisted4 = fieldsDiff.persisted; _i36 < _fieldsDiff$persisted4.length; _i36++) {\n    var _ref8 = _fieldsDiff$persisted4[_i36];\n    var _oldField2 = _ref8[0];\n    var newField = _ref8[1];\n    schemaChanges.push.apply(schemaChanges, findArgChanges(oldType, _oldField2, newField));\n    var isSafe = isChangeSafeForObjectOrInterfaceField(_oldField2.type, newField.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(_oldField2.name, \" changed type from \") + \"\".concat(String(_oldField2.type), \" to \").concat(String(newField.type), \".\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  var schemaChanges = [];\n  var argsDiff = diff(oldField.args, newField.args);\n\n  for (var _i38 = 0, _argsDiff$removed4 = argsDiff.removed; _i38 < _argsDiff$removed4.length; _i38++) {\n    var oldArg = _argsDiff$removed4[_i38];\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(oldArg.name, \" was removed.\")\n    });\n  }\n\n  for (var _i40 = 0, _argsDiff$persisted2 = argsDiff.persisted; _i40 < _argsDiff$persisted2.length; _i40++) {\n    var _ref10 = _argsDiff$persisted2[_i40];\n    var _oldArg = _ref10[0];\n    var newArg = _ref10[1];\n    var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldArg.type, newArg.type);\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed type from \") + \"\".concat(String(_oldArg.type), \" to \").concat(String(newArg.type), \".\")\n      });\n    } else if (_oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" defaultValue was removed.\")\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        var oldValueStr = stringifyValue(_oldArg.defaultValue, _oldArg.type);\n        var newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed defaultValue from \").concat(oldValueStr, \" to \").concat(newValueStr, \".\")\n          });\n        }\n      }\n    }\n  }\n\n  for (var _i42 = 0, _argsDiff$added4 = argsDiff.added; _i42 < _argsDiff$added4.length; _i42++) {\n    var _newArg = _argsDiff$added4[_i42];\n\n    if (isRequiredArgument(_newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: \"A required arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: \"An optional arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if (isListType(oldType)) {\n    return (// if they're both lists, make sure the underlying types are compatible\n      isListType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType) || // moving from nullable to non-null of the same underlying type is safe\n      isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  }\n\n  if (isNonNullType(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType);\n  }\n\n  return (// if they're both named types, see if their names are equivalent\n    isNamedType(newType) && oldType.name === newType.name || // moving from nullable to non-null of the same underlying type is safe\n    isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if (isListType(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return isListType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType);\n  }\n\n  if (isNonNullType(oldType)) {\n    return (// if they're both non-null, make sure the underlying types are\n      // compatible\n      isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType) || // moving from non-null to nullable of the same underlying type is safe\n      !isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType)\n    );\n  } // if they're both named types, see if their names are equivalent\n\n\n  return isNamedType(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if (isScalarType(type)) {\n    return 'a Scalar type';\n  }\n\n  if (isObjectType(type)) {\n    return 'an Object type';\n  }\n\n  if (isInterfaceType(type)) {\n    return 'an Interface type';\n  }\n\n  if (isUnionType(type)) {\n    return 'a Union type';\n  }\n\n  if (isEnumType(type)) {\n    return 'an Enum type';\n  } // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2618')\n\n\n  if (isInputObjectType(type)) {\n    return 'an Input type';\n  } // istanbul ignore next (Not reachable. All possible named types have been considered)\n\n\n  false || invariant(0, 'Unexpected type: ' + inspect(type));\n}\n\nfunction stringifyValue(value, type) {\n  var ast = astFromValue(value, type);\n  ast != null || invariant(0);\n  var sortedAST = visit(ast, {\n    ObjectValue: function ObjectValue(objectNode) {\n      // Make a copy since sort mutates array\n      var fields = [].concat(objectNode.fields);\n      fields.sort(function (fieldA, fieldB) {\n        return naturalCompare(fieldA.name.value, fieldB.name.value);\n      });\n      return _objectSpread(_objectSpread({}, objectNode), {}, {\n        fields: fields\n      });\n    }\n  });\n  return print(sortedAST);\n}\n\nfunction diff(oldArray, newArray) {\n  var added = [];\n  var removed = [];\n  var persisted = [];\n  var oldMap = keyMap(oldArray, function (_ref11) {\n    var name = _ref11.name;\n    return name;\n  });\n  var newMap = keyMap(newArray, function (_ref12) {\n    var name = _ref12.name;\n    return name;\n  });\n\n  for (var _i44 = 0; _i44 < oldArray.length; _i44++) {\n    var oldItem = oldArray[_i44];\n    var newItem = newMap[oldItem.name];\n\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n\n  for (var _i46 = 0; _i46 < newArray.length; _i46++) {\n    var _newItem = newArray[_i46];\n\n    if (oldMap[_newItem.name] === undefined) {\n      added.push(_newItem);\n    }\n  }\n\n  return {\n    added: added,\n    persisted: persisted,\n    removed: removed\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}