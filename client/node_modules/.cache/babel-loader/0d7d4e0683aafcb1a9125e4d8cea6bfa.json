{"ast":null,"code":"// Spec Section: \"Executable Definitions\"\nimport{ExecutableDefinitionsRule}from\"./rules/ExecutableDefinitionsRule.mjs\";// Spec Section: \"Operation Name Uniqueness\"\nimport{UniqueOperationNamesRule}from\"./rules/UniqueOperationNamesRule.mjs\";// Spec Section: \"Lone Anonymous Operation\"\nimport{LoneAnonymousOperationRule}from\"./rules/LoneAnonymousOperationRule.mjs\";// Spec Section: \"Subscriptions with Single Root Field\"\nimport{SingleFieldSubscriptionsRule}from\"./rules/SingleFieldSubscriptionsRule.mjs\";// Spec Section: \"Fragment Spread Type Existence\"\nimport{KnownTypeNamesRule}from\"./rules/KnownTypeNamesRule.mjs\";// Spec Section: \"Fragments on Composite Types\"\nimport{FragmentsOnCompositeTypesRule}from\"./rules/FragmentsOnCompositeTypesRule.mjs\";// Spec Section: \"Variables are Input Types\"\nimport{VariablesAreInputTypesRule}from\"./rules/VariablesAreInputTypesRule.mjs\";// Spec Section: \"Leaf Field Selections\"\nimport{ScalarLeafsRule}from\"./rules/ScalarLeafsRule.mjs\";// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\nimport{FieldsOnCorrectTypeRule}from\"./rules/FieldsOnCorrectTypeRule.mjs\";// Spec Section: \"Fragment Name Uniqueness\"\nimport{UniqueFragmentNamesRule}from\"./rules/UniqueFragmentNamesRule.mjs\";// Spec Section: \"Fragment spread target defined\"\nimport{KnownFragmentNamesRule}from\"./rules/KnownFragmentNamesRule.mjs\";// Spec Section: \"Fragments must be used\"\nimport{NoUnusedFragmentsRule}from\"./rules/NoUnusedFragmentsRule.mjs\";// Spec Section: \"Fragment spread is possible\"\nimport{PossibleFragmentSpreadsRule}from\"./rules/PossibleFragmentSpreadsRule.mjs\";// Spec Section: \"Fragments must not form cycles\"\nimport{NoFragmentCyclesRule}from\"./rules/NoFragmentCyclesRule.mjs\";// Spec Section: \"Variable Uniqueness\"\nimport{UniqueVariableNamesRule}from\"./rules/UniqueVariableNamesRule.mjs\";// Spec Section: \"All Variable Used Defined\"\nimport{NoUndefinedVariablesRule}from\"./rules/NoUndefinedVariablesRule.mjs\";// Spec Section: \"All Variables Used\"\nimport{NoUnusedVariablesRule}from\"./rules/NoUnusedVariablesRule.mjs\";// Spec Section: \"Directives Are Defined\"\nimport{KnownDirectivesRule}from\"./rules/KnownDirectivesRule.mjs\";// Spec Section: \"Directives Are Unique Per Location\"\nimport{UniqueDirectivesPerLocationRule}from\"./rules/UniqueDirectivesPerLocationRule.mjs\";// Spec Section: \"Argument Names\"\nimport{KnownArgumentNamesRule,KnownArgumentNamesOnDirectivesRule}from\"./rules/KnownArgumentNamesRule.mjs\";// Spec Section: \"Argument Uniqueness\"\nimport{UniqueArgumentNamesRule}from\"./rules/UniqueArgumentNamesRule.mjs\";// Spec Section: \"Value Type Correctness\"\nimport{ValuesOfCorrectTypeRule}from\"./rules/ValuesOfCorrectTypeRule.mjs\";// Spec Section: \"Argument Optionality\"\nimport{ProvidedRequiredArgumentsRule,ProvidedRequiredArgumentsOnDirectivesRule}from\"./rules/ProvidedRequiredArgumentsRule.mjs\";// Spec Section: \"All Variable Usages Are Allowed\"\nimport{VariablesInAllowedPositionRule}from\"./rules/VariablesInAllowedPositionRule.mjs\";// Spec Section: \"Field Selection Merging\"\nimport{OverlappingFieldsCanBeMergedRule}from\"./rules/OverlappingFieldsCanBeMergedRule.mjs\";// Spec Section: \"Input Object Field Uniqueness\"\nimport{UniqueInputFieldNamesRule}from\"./rules/UniqueInputFieldNamesRule.mjs\";// SDL-specific validation rules\nimport{LoneSchemaDefinitionRule}from\"./rules/LoneSchemaDefinitionRule.mjs\";import{UniqueOperationTypesRule}from\"./rules/UniqueOperationTypesRule.mjs\";import{UniqueTypeNamesRule}from\"./rules/UniqueTypeNamesRule.mjs\";import{UniqueEnumValueNamesRule}from\"./rules/UniqueEnumValueNamesRule.mjs\";import{UniqueFieldDefinitionNamesRule}from\"./rules/UniqueFieldDefinitionNamesRule.mjs\";import{UniqueDirectiveNamesRule}from\"./rules/UniqueDirectiveNamesRule.mjs\";import{PossibleTypeExtensionsRule}from\"./rules/PossibleTypeExtensionsRule.mjs\";/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */export var specifiedRules=Object.freeze([ExecutableDefinitionsRule,UniqueOperationNamesRule,LoneAnonymousOperationRule,SingleFieldSubscriptionsRule,KnownTypeNamesRule,FragmentsOnCompositeTypesRule,VariablesAreInputTypesRule,ScalarLeafsRule,FieldsOnCorrectTypeRule,UniqueFragmentNamesRule,KnownFragmentNamesRule,NoUnusedFragmentsRule,PossibleFragmentSpreadsRule,NoFragmentCyclesRule,UniqueVariableNamesRule,NoUndefinedVariablesRule,NoUnusedVariablesRule,KnownDirectivesRule,UniqueDirectivesPerLocationRule,KnownArgumentNamesRule,UniqueArgumentNamesRule,ValuesOfCorrectTypeRule,ProvidedRequiredArgumentsRule,VariablesInAllowedPositionRule,OverlappingFieldsCanBeMergedRule,UniqueInputFieldNamesRule]);/**\n * @internal\n */export var specifiedSDLRules=Object.freeze([LoneSchemaDefinitionRule,UniqueOperationTypesRule,UniqueTypeNamesRule,UniqueEnumValueNamesRule,UniqueFieldDefinitionNamesRule,UniqueDirectiveNamesRule,KnownTypeNamesRule,KnownDirectivesRule,UniqueDirectivesPerLocationRule,PossibleTypeExtensionsRule,KnownArgumentNamesOnDirectivesRule,UniqueArgumentNamesRule,UniqueInputFieldNamesRule,ProvidedRequiredArgumentsOnDirectivesRule]);","map":{"version":3,"names":["ExecutableDefinitionsRule","UniqueOperationNamesRule","LoneAnonymousOperationRule","SingleFieldSubscriptionsRule","KnownTypeNamesRule","FragmentsOnCompositeTypesRule","VariablesAreInputTypesRule","ScalarLeafsRule","FieldsOnCorrectTypeRule","UniqueFragmentNamesRule","KnownFragmentNamesRule","NoUnusedFragmentsRule","PossibleFragmentSpreadsRule","NoFragmentCyclesRule","UniqueVariableNamesRule","NoUndefinedVariablesRule","NoUnusedVariablesRule","KnownDirectivesRule","UniqueDirectivesPerLocationRule","KnownArgumentNamesRule","KnownArgumentNamesOnDirectivesRule","UniqueArgumentNamesRule","ValuesOfCorrectTypeRule","ProvidedRequiredArgumentsRule","ProvidedRequiredArgumentsOnDirectivesRule","VariablesInAllowedPositionRule","OverlappingFieldsCanBeMergedRule","UniqueInputFieldNamesRule","LoneSchemaDefinitionRule","UniqueOperationTypesRule","UniqueTypeNamesRule","UniqueEnumValueNamesRule","UniqueFieldDefinitionNamesRule","UniqueDirectiveNamesRule","PossibleTypeExtensionsRule","specifiedRules","Object","freeze","specifiedSDLRules"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/validation/specifiedRules.mjs"],"sourcesContent":["// Spec Section: \"Executable Definitions\"\nimport { ExecutableDefinitionsRule } from \"./rules/ExecutableDefinitionsRule.mjs\"; // Spec Section: \"Operation Name Uniqueness\"\n\nimport { UniqueOperationNamesRule } from \"./rules/UniqueOperationNamesRule.mjs\"; // Spec Section: \"Lone Anonymous Operation\"\n\nimport { LoneAnonymousOperationRule } from \"./rules/LoneAnonymousOperationRule.mjs\"; // Spec Section: \"Subscriptions with Single Root Field\"\n\nimport { SingleFieldSubscriptionsRule } from \"./rules/SingleFieldSubscriptionsRule.mjs\"; // Spec Section: \"Fragment Spread Type Existence\"\n\nimport { KnownTypeNamesRule } from \"./rules/KnownTypeNamesRule.mjs\"; // Spec Section: \"Fragments on Composite Types\"\n\nimport { FragmentsOnCompositeTypesRule } from \"./rules/FragmentsOnCompositeTypesRule.mjs\"; // Spec Section: \"Variables are Input Types\"\n\nimport { VariablesAreInputTypesRule } from \"./rules/VariablesAreInputTypesRule.mjs\"; // Spec Section: \"Leaf Field Selections\"\n\nimport { ScalarLeafsRule } from \"./rules/ScalarLeafsRule.mjs\"; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nimport { FieldsOnCorrectTypeRule } from \"./rules/FieldsOnCorrectTypeRule.mjs\"; // Spec Section: \"Fragment Name Uniqueness\"\n\nimport { UniqueFragmentNamesRule } from \"./rules/UniqueFragmentNamesRule.mjs\"; // Spec Section: \"Fragment spread target defined\"\n\nimport { KnownFragmentNamesRule } from \"./rules/KnownFragmentNamesRule.mjs\"; // Spec Section: \"Fragments must be used\"\n\nimport { NoUnusedFragmentsRule } from \"./rules/NoUnusedFragmentsRule.mjs\"; // Spec Section: \"Fragment spread is possible\"\n\nimport { PossibleFragmentSpreadsRule } from \"./rules/PossibleFragmentSpreadsRule.mjs\"; // Spec Section: \"Fragments must not form cycles\"\n\nimport { NoFragmentCyclesRule } from \"./rules/NoFragmentCyclesRule.mjs\"; // Spec Section: \"Variable Uniqueness\"\n\nimport { UniqueVariableNamesRule } from \"./rules/UniqueVariableNamesRule.mjs\"; // Spec Section: \"All Variable Used Defined\"\n\nimport { NoUndefinedVariablesRule } from \"./rules/NoUndefinedVariablesRule.mjs\"; // Spec Section: \"All Variables Used\"\n\nimport { NoUnusedVariablesRule } from \"./rules/NoUnusedVariablesRule.mjs\"; // Spec Section: \"Directives Are Defined\"\n\nimport { KnownDirectivesRule } from \"./rules/KnownDirectivesRule.mjs\"; // Spec Section: \"Directives Are Unique Per Location\"\n\nimport { UniqueDirectivesPerLocationRule } from \"./rules/UniqueDirectivesPerLocationRule.mjs\"; // Spec Section: \"Argument Names\"\n\nimport { KnownArgumentNamesRule, KnownArgumentNamesOnDirectivesRule } from \"./rules/KnownArgumentNamesRule.mjs\"; // Spec Section: \"Argument Uniqueness\"\n\nimport { UniqueArgumentNamesRule } from \"./rules/UniqueArgumentNamesRule.mjs\"; // Spec Section: \"Value Type Correctness\"\n\nimport { ValuesOfCorrectTypeRule } from \"./rules/ValuesOfCorrectTypeRule.mjs\"; // Spec Section: \"Argument Optionality\"\n\nimport { ProvidedRequiredArgumentsRule, ProvidedRequiredArgumentsOnDirectivesRule } from \"./rules/ProvidedRequiredArgumentsRule.mjs\"; // Spec Section: \"All Variable Usages Are Allowed\"\n\nimport { VariablesInAllowedPositionRule } from \"./rules/VariablesInAllowedPositionRule.mjs\"; // Spec Section: \"Field Selection Merging\"\n\nimport { OverlappingFieldsCanBeMergedRule } from \"./rules/OverlappingFieldsCanBeMergedRule.mjs\"; // Spec Section: \"Input Object Field Uniqueness\"\n\nimport { UniqueInputFieldNamesRule } from \"./rules/UniqueInputFieldNamesRule.mjs\"; // SDL-specific validation rules\n\nimport { LoneSchemaDefinitionRule } from \"./rules/LoneSchemaDefinitionRule.mjs\";\nimport { UniqueOperationTypesRule } from \"./rules/UniqueOperationTypesRule.mjs\";\nimport { UniqueTypeNamesRule } from \"./rules/UniqueTypeNamesRule.mjs\";\nimport { UniqueEnumValueNamesRule } from \"./rules/UniqueEnumValueNamesRule.mjs\";\nimport { UniqueFieldDefinitionNamesRule } from \"./rules/UniqueFieldDefinitionNamesRule.mjs\";\nimport { UniqueDirectiveNamesRule } from \"./rules/UniqueDirectiveNamesRule.mjs\";\nimport { PossibleTypeExtensionsRule } from \"./rules/PossibleTypeExtensionsRule.mjs\";\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\n\nexport var specifiedRules = Object.freeze([ExecutableDefinitionsRule, UniqueOperationNamesRule, LoneAnonymousOperationRule, SingleFieldSubscriptionsRule, KnownTypeNamesRule, FragmentsOnCompositeTypesRule, VariablesAreInputTypesRule, ScalarLeafsRule, FieldsOnCorrectTypeRule, UniqueFragmentNamesRule, KnownFragmentNamesRule, NoUnusedFragmentsRule, PossibleFragmentSpreadsRule, NoFragmentCyclesRule, UniqueVariableNamesRule, NoUndefinedVariablesRule, NoUnusedVariablesRule, KnownDirectivesRule, UniqueDirectivesPerLocationRule, KnownArgumentNamesRule, UniqueArgumentNamesRule, ValuesOfCorrectTypeRule, ProvidedRequiredArgumentsRule, VariablesInAllowedPositionRule, OverlappingFieldsCanBeMergedRule, UniqueInputFieldNamesRule]);\n/**\n * @internal\n */\n\nexport var specifiedSDLRules = Object.freeze([LoneSchemaDefinitionRule, UniqueOperationTypesRule, UniqueTypeNamesRule, UniqueEnumValueNamesRule, UniqueFieldDefinitionNamesRule, UniqueDirectiveNamesRule, KnownTypeNamesRule, KnownDirectivesRule, UniqueDirectivesPerLocationRule, PossibleTypeExtensionsRule, KnownArgumentNamesOnDirectivesRule, UniqueArgumentNamesRule, UniqueInputFieldNamesRule, ProvidedRequiredArgumentsOnDirectivesRule]);\n"],"mappings":"AAAA;AACA,OAASA,yBAAT,KAA0C,uCAA1C,CAAmF;AAEnF,OAASC,wBAAT,KAAyC,sCAAzC,CAAiF;AAEjF,OAASC,0BAAT,KAA2C,wCAA3C,CAAqF;AAErF,OAASC,4BAAT,KAA6C,0CAA7C,CAAyF;AAEzF,OAASC,kBAAT,KAAmC,gCAAnC,CAAqE;AAErE,OAASC,6BAAT,KAA8C,2CAA9C,CAA2F;AAE3F,OAASC,0BAAT,KAA2C,wCAA3C,CAAqF;AAErF,OAASC,eAAT,KAAgC,6BAAhC,CAA+D;AAE/D,OAASC,uBAAT,KAAwC,qCAAxC,CAA+E;AAE/E,OAASC,uBAAT,KAAwC,qCAAxC,CAA+E;AAE/E,OAASC,sBAAT,KAAuC,oCAAvC,CAA6E;AAE7E,OAASC,qBAAT,KAAsC,mCAAtC,CAA2E;AAE3E,OAASC,2BAAT,KAA4C,yCAA5C,CAAuF;AAEvF,OAASC,oBAAT,KAAqC,kCAArC,CAAyE;AAEzE,OAASC,uBAAT,KAAwC,qCAAxC,CAA+E;AAE/E,OAASC,wBAAT,KAAyC,sCAAzC,CAAiF;AAEjF,OAASC,qBAAT,KAAsC,mCAAtC,CAA2E;AAE3E,OAASC,mBAAT,KAAoC,iCAApC,CAAuE;AAEvE,OAASC,+BAAT,KAAgD,6CAAhD,CAA+F;AAE/F,OAASC,sBAAT,CAAiCC,kCAAjC,KAA2E,oCAA3E,CAAiH;AAEjH,OAASC,uBAAT,KAAwC,qCAAxC,CAA+E;AAE/E,OAASC,uBAAT,KAAwC,qCAAxC,CAA+E;AAE/E,OAASC,6BAAT,CAAwCC,yCAAxC,KAAyF,2CAAzF,CAAsI;AAEtI,OAASC,8BAAT,KAA+C,4CAA/C,CAA6F;AAE7F,OAASC,gCAAT,KAAiD,8CAAjD,CAAiG;AAEjG,OAASC,yBAAT,KAA0C,uCAA1C,CAAmF;AAEnF,OAASC,wBAAT,KAAyC,sCAAzC,CACA,OAASC,wBAAT,KAAyC,sCAAzC,CACA,OAASC,mBAAT,KAAoC,iCAApC,CACA,OAASC,wBAAT,KAAyC,sCAAzC,CACA,OAASC,8BAAT,KAA+C,4CAA/C,CACA,OAASC,wBAAT,KAAyC,sCAAzC,CACA,OAASC,0BAAT,KAA2C,wCAA3C,CACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAO,IAAIC,eAAc,CAAGC,MAAM,CAACC,MAAP,CAAc,CAACrC,yBAAD,CAA4BC,wBAA5B,CAAsDC,0BAAtD,CAAkFC,4BAAlF,CAAgHC,kBAAhH,CAAoIC,6BAApI,CAAmKC,0BAAnK,CAA+LC,eAA/L,CAAgNC,uBAAhN,CAAyOC,uBAAzO,CAAkQC,sBAAlQ,CAA0RC,qBAA1R,CAAiTC,2BAAjT,CAA8UC,oBAA9U,CAAoWC,uBAApW,CAA6XC,wBAA7X,CAAuZC,qBAAvZ,CAA8aC,mBAA9a,CAAmcC,+BAAnc,CAAoeC,sBAApe,CAA4fE,uBAA5f,CAAqhBC,uBAArhB,CAA8iBC,6BAA9iB,CAA6kBE,8BAA7kB,CAA6mBC,gCAA7mB,CAA+oBC,yBAA/oB,CAAd,CAArB,CACP;AACA;AACA,GAEA,MAAO,IAAIW,kBAAiB,CAAGF,MAAM,CAACC,MAAP,CAAc,CAACT,wBAAD,CAA2BC,wBAA3B,CAAqDC,mBAArD,CAA0EC,wBAA1E,CAAoGC,8BAApG,CAAoIC,wBAApI,CAA8J7B,kBAA9J,CAAkLa,mBAAlL,CAAuMC,+BAAvM,CAAwOgB,0BAAxO,CAAoQd,kCAApQ,CAAwSC,uBAAxS,CAAiUM,yBAAjU,CAA4VH,yCAA5V,CAAd,CAAxB"},"metadata":{},"sourceType":"module"}