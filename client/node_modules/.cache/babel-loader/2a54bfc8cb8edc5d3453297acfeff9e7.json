{"ast":null,"code":"import\"../globals/index.js\";import{isNonNullObject}from\"./objects.js\";function deepFreeze(value){var workSet=new Set([value]);workSet.forEach(function(obj){if(isNonNullObject(obj)&&shallowFreeze(obj)===obj){Object.getOwnPropertyNames(obj).forEach(function(name){if(isNonNullObject(obj[name]))workSet.add(obj[name]);});}});return value;}function shallowFreeze(obj){if(__DEV__&&!Object.isFrozen(obj)){try{Object.freeze(obj);}catch(e){if(e instanceof TypeError)return null;throw e;}}return obj;}export function maybeDeepFreeze(obj){if(__DEV__){deepFreeze(obj);}return obj;}","map":{"version":3,"mappings":"AAAA,MAAO,qBAAP,CACA,OAASA,eAAT,KAAgC,cAAhC,CAEA,QAASC,WAAT,CAAoBC,KAApB,CAA8B,CAC5B,GAAMC,QAAO,CAAG,GAAIC,IAAJ,CAAQ,CAACF,KAAD,CAAR,CAAhB,CACAC,OAAO,CAACE,OAAR,CAAgB,aAAG,CACjB,GAAIL,eAAe,CAACM,GAAD,CAAf,EAAwBC,aAAa,CAACD,GAAD,CAAb,GAAuBA,GAAnD,CAAwD,CACtDE,MAAM,CAACC,mBAAP,CAA2BH,GAA3B,EAAgCD,OAAhC,CAAwC,cAAI,CAC1C,GAAIL,eAAe,CAACM,GAAG,CAACI,IAAD,CAAJ,CAAnB,CAAgCP,OAAO,CAACQ,GAAR,CAAYL,GAAG,CAACI,IAAD,CAAf,EACjC,CAFD,EAGD,CACF,CAND,EAOA,MAAOR,MAAP,CACD,CAED,QAASK,cAAT,CAAyCD,GAAzC,CAA+C,CAC7C,GAAIM,OAAO,EAAI,CAACJ,MAAM,CAACK,QAAP,CAAgBP,GAAhB,CAAhB,CAAsC,CACpC,GAAI,CACFE,MAAM,CAACM,MAAP,CAAcR,GAAd,EACD,CAAC,MAAOS,CAAP,CAAU,CAIV,GAAIA,CAAC,WAAYC,UAAjB,CAA4B,MAAO,KAAP,CAC5B,KAAMD,EAAN,CACD,CACF,CACD,MAAOT,IAAP,CACD,CAED,MAAM,SAAUW,gBAAV,CAA6BX,GAA7B,CAAmC,CACvC,GAAIM,OAAJ,CAAa,CACXX,UAAU,CAACK,GAAD,CAAV,CACD,CACD,MAAOA,IAAP,CACD","names":["isNonNullObject","deepFreeze","value","workSet","Set","forEach","obj","shallowFreeze","Object","getOwnPropertyNames","name","add","__DEV__","isFrozen","freeze","e","TypeError","maybeDeepFreeze"],"sourceRoot":"","sources":["../../../src/utilities/common/maybeDeepFreeze.ts"],"sourcesContent":["import '../globals'; // For __DEV__\nimport { isNonNullObject } from './objects';\n\nfunction deepFreeze(value: any) {\n  const workSet = new Set([value]);\n  workSet.forEach(obj => {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach(name => {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\n\nfunction shallowFreeze<T extends object>(obj: T): T | null {\n  if (__DEV__ && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n      // they all throw a TypeError when you try, so we re-throw any exceptions\n      // that are not TypeErrors, since that would be unexpected.\n      if (e instanceof TypeError) return null;\n      throw e;\n    }\n  }\n  return obj;\n}\n\nexport function maybeDeepFreeze<T>(obj: T): T {\n  if (__DEV__) {\n    deepFreeze(obj);\n  }\n  return obj;\n}\n"]},"metadata":{},"sourceType":"module"}