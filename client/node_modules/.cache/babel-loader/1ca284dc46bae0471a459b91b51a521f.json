{"ast":null,"code":"import invariant from\"./invariant.mjs\";import nodejsCustomInspectSymbol from\"./nodejsCustomInspectSymbol.mjs\";/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */export default function defineInspect(classObject){var fn=classObject.prototype.toJSON;typeof fn==='function'||invariant(0);classObject.prototype.inspect=fn;// istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\nif(nodejsCustomInspectSymbol){classObject.prototype[nodejsCustomInspectSymbol]=fn;}}","map":{"version":3,"names":["invariant","nodejsCustomInspectSymbol","defineInspect","classObject","fn","prototype","toJSON","inspect"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/jsutils/defineInspect.mjs"],"sourcesContent":["import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n"],"mappings":"AAAA,MAAOA,UAAP,KAAsB,iBAAtB,CACA,MAAOC,0BAAP,KAAsC,iCAAtC,CACA;AACA;AACA,GAEA,cAAe,SAASC,cAAT,CAAuBC,WAAvB,CAAoC,CACjD,GAAIC,GAAE,CAAGD,WAAW,CAACE,SAAZ,CAAsBC,MAA/B,CACA,MAAOF,GAAP,GAAc,UAAd,EAA4BJ,SAAS,CAAC,CAAD,CAArC,CACAG,WAAW,CAACE,SAAZ,CAAsBE,OAAtB,CAAgCH,EAAhC,CAAoC;AAEpC,GAAIH,yBAAJ,CAA+B,CAC7BE,WAAW,CAACE,SAAZ,CAAsBJ,yBAAtB,EAAmDG,EAAnD,CACD,CACF"},"metadata":{},"sourceType":"module"}