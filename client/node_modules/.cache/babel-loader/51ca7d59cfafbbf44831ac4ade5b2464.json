{"ast":null,"code":"import{GraphQLError}from\"../../error/GraphQLError.mjs\";/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */export function NoUndefinedVariablesRule(context){var variableNameDefined=Object.create(null);return{OperationDefinition:{enter:function enter(){variableNameDefined=Object.create(null);},leave:function leave(operation){var usages=context.getRecursiveVariableUsages(operation);for(var _i2=0;_i2<usages.length;_i2++){var _ref2=usages[_i2];var node=_ref2.node;var varName=node.name.value;if(variableNameDefined[varName]!==true){context.reportError(new GraphQLError(operation.name?\"Variable \\\"$\".concat(varName,\"\\\" is not defined by operation \\\"\").concat(operation.name.value,\"\\\".\"):\"Variable \\\"$\".concat(varName,\"\\\" is not defined.\"),[node,operation]));}}}},VariableDefinition:function VariableDefinition(node){variableNameDefined[node.variable.name.value]=true;}};}","map":{"version":3,"names":["GraphQLError","NoUndefinedVariablesRule","context","variableNameDefined","Object","create","OperationDefinition","enter","leave","operation","usages","getRecursiveVariableUsages","_i2","length","_ref2","node","varName","name","value","reportError","concat","VariableDefinition","variable"],"sources":["C:/Users/jarma/school/challenges/Project3_Final/client/src/node_modules/graphql/validation/rules/NoUndefinedVariablesRule.mjs"],"sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */\nexport function NoUndefinedVariablesRule(context) {\n  var variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          var varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(new GraphQLError(operation.name ? \"Variable \\\"$\".concat(varName, \"\\\" is not defined by operation \\\"\").concat(operation.name.value, \"\\\".\") : \"Variable \\\"$\".concat(varName, \"\\\" is not defined.\"), [node, operation]));\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}\n"],"mappings":"AAAA,OAASA,YAAT,KAA6B,8BAA7B,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASC,yBAAT,CAAkCC,OAAlC,CAA2C,CAChD,GAAIC,oBAAmB,CAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA1B,CACA,MAAO,CACLC,mBAAmB,CAAE,CACnBC,KAAK,CAAE,QAASA,MAAT,EAAiB,CACtBJ,mBAAmB,CAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAtB,CACD,CAHkB,CAInBG,KAAK,CAAE,QAASA,MAAT,CAAeC,SAAf,CAA0B,CAC/B,GAAIC,OAAM,CAAGR,OAAO,CAACS,0BAAR,CAAmCF,SAAnC,CAAb,CAEA,IAAK,GAAIG,IAAG,CAAG,CAAf,CAAkBA,GAAG,CAAGF,MAAM,CAACG,MAA/B,CAAuCD,GAAG,EAA1C,CAA8C,CAC5C,GAAIE,MAAK,CAAGJ,MAAM,CAACE,GAAD,CAAlB,CACA,GAAIG,KAAI,CAAGD,KAAK,CAACC,IAAjB,CACA,GAAIC,QAAO,CAAGD,IAAI,CAACE,IAAL,CAAUC,KAAxB,CAEA,GAAIf,mBAAmB,CAACa,OAAD,CAAnB,GAAiC,IAArC,CAA2C,CACzCd,OAAO,CAACiB,WAAR,CAAoB,GAAInB,aAAJ,CAAiBS,SAAS,CAACQ,IAAV,CAAiB,eAAeG,MAAf,CAAsBJ,OAAtB,CAA+B,mCAA/B,EAAoEI,MAApE,CAA2EX,SAAS,CAACQ,IAAV,CAAeC,KAA1F,CAAiG,KAAjG,CAAjB,CAA2H,eAAeE,MAAf,CAAsBJ,OAAtB,CAA+B,oBAA/B,CAA5I,CAAkM,CAACD,IAAD,CAAON,SAAP,CAAlM,CAApB,EACD,CACF,CACF,CAhBkB,CADhB,CAmBLY,kBAAkB,CAAE,QAASA,mBAAT,CAA4BN,IAA5B,CAAkC,CACpDZ,mBAAmB,CAACY,IAAI,CAACO,QAAL,CAAcL,IAAd,CAAmBC,KAApB,CAAnB,CAAgD,IAAhD,CACD,CArBI,CAAP,CAuBD"},"metadata":{},"sourceType":"module"}